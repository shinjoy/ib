<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="CusMng">
	<typeAlias alias="egovMap" type="egovframework.rte.psl.dataaccess.util.EgovMap"/>
	<typeAlias alias="cusVO2" type="ib.schedule.service.CusVO"/>
	<typeAlias alias="spCmmVO" type="ib.schedule.service.SpCmmVO"/>
	
	<!-- 고객 기본 정보 -->
	<resultMap id="CusInfo" class="ib.schedule.service.CusVO">
		<result property="CusCd"				column="CusCd"/>
		<result property="S_Nb"					column="S_Nb"/>
		<result property="CusNm"				column="CusNm"/>
		<result property="CusType"				column="CusType"/>
		<result property="CusCorType"			column="CusCorType"/>
		<result property="TradeType"			column="TradeType"/>
		<result property="RegNum_1"				column="RegNum_1"/>
		<result property="RegNum_2"				column="RegNum_2"/>
		<result property="RegNum_3"				column="RegNum_3"/>
		<result property="CusRegNum"			column="CusRegNum"/>
		<result property="CorRegNum_1"			column="CorRegNum_1"/>
		<result property="CorRegNum_2"			column="CorRegNum_2"/>
		<result property="CusCorRegNum"			column="CusCorRegNum"/>
		<result property="CusOwnNm"				column="CusOwnNm"/>
		<result property="OwnJumin_1"			column="OwnJumin_1"/>
		<result property="OwnJumin_2"			column="OwnJumin_2"/>
		<result property="CusOwnJumin"			column="CusOwnJumin"/>
		<result property="CusTel"				column="CusTel"/>
		<result property="CusPhone"				column="CusPhone"/>
		<result property="CusFax"				column="CusFax"/>
		<result property="CusEmail"				column="CusEmail"/>
		<result property="CusPost"				column="CusPost"/>
		<result property="CusAddr"				column="CusAddr"/>
		<result property="CusStatus"			column="CusStatus"/>
		<result property="CusSubStatus"			column="CusSubStatus"/>
		<result property="CusTradeEndDate"		column="CusTradeEndDate"/>
		<result property="CusAddInvestFlag"		column="CusAddInvestFlag"/>
		<result property="CusManagerNm"			column="CusManagerNm"/>
		<result property="CusManagerSabun"		column="CusManagerSabun"/>
		<result property="CusInviteNm"			column="CusInviteNm"/>
		<result property="CusInviteSabun"		column="CusInviteSabun"/>
		<result property="InviteRate"			column="InviteRate"/>
		<result property="CusMailingPerNm"		column="CusMailingPerNm"/>
		<result property="CusMailingPerSabun"	column="CusMailingPerSabun"/>
		<result property="CusEtc"				column="CusEtc"/>
		<result property="CusOfficeNm"			column="CusOfficeNm"/>
		<result property="CusOfficePosition"	column="CusOfficePosition"/>
		<result property="CusOfficeTel"			column="CusOfficeTel"/>
		<result property="CusOfficeEtc"			column="CusOfficeEtc"/>
		<result property="RegDate"				column="RegDate"/>
		<result property="RegPerSabun"			column="RegPerSabun"/>
		<result property="DelFlag"				column="DelFlag"/>
		<result property="TradeFirstDate"		column="TradeFirstDate"/>
	</resultMap>
	
	<!-- 투자개요 정보 -->
	<resultMap id="InSumInfo" class="ib.schedule.service.CusVO">
		<result property="InSuCd"				column="InSuCd"/>
		<result property="InSuNm"				column="InSuNm"/>
		<result property="InSuCom"				column="InSuCom"/>
		<result property="SubCateCd"			column="SubCateCd"/>
		<result property="WarCateCd"			column="WarCateCd"/>
		<result property="WarCateNm"			column="WarCateNm"/>
		<result property="SecCateCd"			column="SecCateCd"/>
		<result property="SecCateNm"			column="SecCateNm"/>
		<result property="BondCateCd"			column="BondCateCd"/>
		<result property="BondCateNm"			column="BondCateNm"/>
		<result property="InvestOfferCd"		column="InvestOfferCd"/>
		<result property="InvestOfferNm"		column="InvestOfferNm"/>
		<result property="InSuChungDay"			column="InSuChungDay"/>
		<result property="InSuNabDay"			column="InSuNabDay"/>
		<result property="InSuSaChaeDay"		column="InSuSaChaeDay"/>
		<result property="InSuExpiryRate"		column="InSuExpiryRate"/>
		<result property="InSuRepayDay"			column="InSuRepayDay"/>
		<result property="InSuRepayIza"			column="InSuRepayIza"/>
		<result property="InSuRepayPeriod1"		column="InSuRepayPeriod1"/>
		<result property="InSuRepayPeriod2"		column="InSuRepayPeriod2"/>
		<result property="InSuRepayFlag"		column="InSuRepayFlag"/>
		<result property="InSuRepayMethod"		column="InSuRepayMethod"/>
		<result property="InSuRepayRate"		column="InSuRepayRate"/>
		<result property="InSuIzaDay"			column="InSuIzaDay"/>
		<result property="InSuIzaFlag"			column="InSuIzaFlag"/>
		<result property="InSuSurfaceRate"		column="InSuSurfaceRate"/>
		<result property="InSuSurfaceDay"		column="InSuSurfaceDay"/>
		<result property="InSuFirstPrice"		column="InSuFirstPrice"/>
		<result property="InSuBasePrice"		column="InSuBasePrice"/>
		<result property="InSuRefixLimit"		column="InSuRefixLimit"/>
		<result property="InSuRefixLimitPrice"	column="InSuRefixLimitPrice"/>
		<result property="InSuNowPrice"			column="InSuNowPrice"/>
		<result property="InSuRefixDay"			column="InSuRefixDay"/>
		<result property="InSuRefixFlag"		column="InSuRefixFlag"/>
		<result property="InSuRefixMethod"		column="InSuRefixMethod"/>
		<result property="InSuClaimStart"		column="InSuClaimStart"/>
		<result property="InSuClaimEnd"			column="InSuClaimEnd"/>
		<result property="InSuClaimFlag"		column="InSuClaimFlag"/> 
		<result property="InSuBuyBack"			column="InSuBuyBack"/>
		<result property="InSuBuyBackPre"		column="InSuBuyBackPre"/>
		<result property="InSuCallOption"		column="InSuCallOption"/>
		<result property="InSuYtc"				column="InSuYtc"/>
		<result property="InSuCallStart"		column="InSuCallStart"/>
		<result property="InSuCallEnd"			column="InSuCallEnd"/>
		<result property="InSuOutMoney"			column="InSuOutMoney"/>
		<result property="InSuSumMoney"			column="InSuSumMoney"/>
		<result property="InSuBondForm"			column="InSuBondForm"/>
		<result property="WarMoney"				column="WarMoney"/>
		<result property="BondMoney"				column="BondMoney"/>
		<result property="InSuETC"				column="InSuETC"/>
		<result property="OwnWar"				column="OwnWar"/>
		<result property="SecTotalCnt"			column="SecTotalCnt"/>
		<result property="SecShare"				column="SecShare"/>
		<result property="CusManagerSabun"		column="CusManagerSabun"/>
		<result property="CusManagerNm"			column="CusManagerNm"/>
		<result property="HomeViewFlag"			column="HomeViewFlag"/>
		<result property="HomeViewFlagNm"		column="HomeViewFlagNm"/>
		<result property="ReturnDate"			column="ReturnDate"/>
		<result property="ReturnRate"			column="ReturnRate"/>
		<result property="RegDate"				column="RegDate"/>
		<result property="RegPerSabun"			column="RegPerSabun"/>
		<result property="DelFlag"				column="DelFlag"/>
	</resultMap>
	
	<!-- 매수이벤트일 예수금정보 -->
	<resultMap id="CashInfo" class="ib.schedule.service.CusVO">
		<result property="CusCd"				column="CusCd"/>
		<result property="CateCd"				column="CateCd"/>
		<result property="InvestType"			column="InvestType"/>
		<result property="InvestCd"				column="InvestCd"/>
		<result property="InvestTradeMoney"		column="InvestTradeMoney"/>
		<result property="InvestDate"			column="InvestDate"/>
	</resultMap>
	
	<!-- 채권매각고객 세부정보 -->
	<resultMap id="BondSellCusInfo" class="ib.schedule.service.CusVO">
		<result property="CusCd"			column="CusCd"/>
		<result property="CusNm"			column="CusNm"/>
		<result property="InSuCd"			column="InSuCd"/>
		<result property="InSuNm"			column="InSuNm"/>
		<result property="ISICCd"			column="ISICCd"/>
		<result property="BondCusSeq"		column="BondCusSeq"/>
		<result property="TargetMoney"		column="TargetMoney"/>
		<result property="ToDoSellDay"		column="ToDoSellDay"/>
		<result property="ExtraPeriod"		column="ExtraPeriod"/>
		<result property="ExtraDay"			column="ExtraDay"/>
		<result property="RepayMoney"		column="RepayMoney"/>
		<result property="PeriodIza"		column="PeriodIza"/>
		<result property="SumReturnMoney"	column="SumReturnMoney"/>
		<result property="ISICRealIza"		column="ISICRealIza"/>
		<result property="ReqReturnRate"	column="ReqReturnRate"/>
		<result property="DealPrice"		column="DealPrice"/>
		<result property="DealPriceOptNm"	column="DealPriceOptNm"/>
		<result property="DealPriceOpt"		column="DealPriceOpt"/>
		<result property="DealMoney"		column="DealMoney"/>
		<result property="DealMoneyOptNm"	column="DealMoneyOptNm"/>
		<result property="DealMoneyOpt"		column="DealMoneyOpt"/>
		<result property="DealTax"			column="DealTax"/>
		<result property="RealDealMoney"	column="RealDealMoney"/>
		<result property="AssureFlagNm"		column="AssureFlagNm"/>
		<result property="AssureFlag"		column="AssureFlag"/>
		<result property="WithHoldingFlag"	column="WithHoldingFlag"/>
		<result property="PutEventDay"		column="PutEventDay"/>
		<result property="PutCycle"			column="PutCycle"/>
		<result property="BondCateCd"		column="BondCateCd"/>
		<result property="BondCateNm"		column="BondCateNm"/>
		<result property="SubCateCd"		column="SubCateCd"/>
		<result property="InSuNabDay"		column="InSuNabDay"/>
		<result property="InSuRepayDay"		column="InSuRepayDay"/>
		<result property="InSuRepayRate"	column="InSuRepayRate"/>
		<result property="InSuSurfaceRate"	column="InSuSurfaceRate"/>
		<result property="InSuRepayIza"		column="InSuRepayIza"/>
		<result property="EventTargetMoney"	column="EventTargetMoney"/>
	</resultMap>
	
	<!-- 사모투자 세부내용 건별 정보 -->
	<resultMap id="InSumInCusInfo" class="ib.schedule.service.CusVO">
		<result property="InSuCd"			column="InSuCd"/>
		<result property="ISICCd"			column="ISICCd"/>
		<result property="CusCd"			column="CusCd"/>
		<result property="ISICBond"			column="ISICBond"/>
		<result property="ISICWar"			column="ISICWar"/>
		<result property="ISICInMoney"		column="ISICInMoney"/>
		<result property="ISICInMoneyDate"	column="ISICInMoneyDate"/>
		<result property="ISICSurfaceIza"	column="ISICSurfaceIza"/>
		<result property="ISICSecCom"		column="ISICSecCom"/>
		<result property="ISICSecAccount"	column="ISICSecAccount"/>
		<result property="ISICSaChaeCon"	column="ISICSaChaeCon"/>
		<result property="ISICWarCon"		column="ISICWarCon"/>
		<result property="TradeMoneyFlag"	column="TradeMoneyFlag"/>
		<result property="InSuNowPrice"		column="InSuNowPrice"/>
		<result property="InSuBuyBack"		column="InSuBuyBack"/>
		<result property="BondCateCd"		column="BondCateCd"/>
		<result property="TradeCd"			column="TradeCd"/>
		<result property="TradeMoneyCd"		column="TradeMoneyCd"/>
	</resultMap>
	
	<!-- 채권매각고객 풋행사 정보 -->
	<resultMap id="BondSellCusEventInfo" class="ib.schedule.service.CusVO">
		<result property="CusCd"			column="CusCd"/>
		<result property="InSuCd"			column="InSuCd"/>
		<result property="ISICCd"			column="ISICCd"/>
		<result property="BondCusSeq"		column="BondCusSeq"/>
		<result property="BondEventSeq"		column="BondEventSeq"/>
		<result property="TargetMoney"		column="TargetMoney"/>
		<result property="BuyMoney"			column="BuyMoney"/>
		<result property="BuyDay"			column="BuyDay"/>
		<result property="SellDay"			column="SellDay"/>
		<result property="PassPeriod"		column="PassPeriod"/>
		<result property="PeriodIza"		column="PeriodIza"/>
		<result property="ReqReturnRate"	column="ReqReturnRate"/>
		<result property="DealPrice"		column="DealPrice"/>
		<result property="DealMoney"		column="DealMoney"/>
		<result property="PutEventFlag"		column="PutEventFlag"/>
	</resultMap>
																<!-- 	공통	 	-->
	<!-- 문자 주소록 불러오기 -->
	<select id="cusDAO.GetSMSPerList"  parameterClass="cusVO2" resultClass="egovMap">
		SELECT 'Cus' Flag, cus.CusCd, cus.CusNm, cus.CusStatus,
		    CusPerCd, CusPerNm, CusPerPosition, PositionNm, CusPerPhone
		FROM CS_Cus_Info cus, CS_Cus_Worker per LEFT OUTER JOIN erp.ERP_Per_Position pos ON per.CusPerPosition = pos.PositionCd
		WHERE cus.CusCd = per.CusCd AND cus.DelFlag = 'N' AND per.DelFlag = 'N' AND CusPerPhone != ''
		<isNotEmpty prepend="AND" property="searchKeyword">(CusNm LIKE  '%$searchKeyword$%' OR CusPerNm LIKE  '%$searchKeyword$%' OR PositionNm LIKE  '%$searchKeyword$%')</isNotEmpty> 
		UNION ALL
		SELECT 'Mem' Flag, '' CusCd, '' CusNm, '' CusStatus,
		    PerSabun, PerNm, '' CusPerPosition, (SELECT positionNm FROM erp.erp_per_position where positionCd = K.perposition) PerPositionNm, PerPhone
		FROM erp.ERP_Per K WHERE DelFlag = 'N' AND ViewFlag = 'Y' AND PerPhone != ''
		<isNotEmpty prepend="AND" property="searchKeyword">(PerNm LIKE '%$searchKeyword$%' OR PerPosition LIKE '%$searchKeyword$%')</isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY Flag, CusNm, CusPerNm</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY Flag, $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY Flag, $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 문자 전송시 모아샷 연동 인덱스 코드 받아오기 -->
	<select id="cusDAO.GetSMSSeq" resultClass="int">
		<![CDATA[SELECT IFNULL(MAX(SMSSeq) + 1, '1') SMSSeq FROM SMSLog]]>
	</select>
	
	<!-- 문자 전송 완료 -->
	<insert id="cusDAO.SMSSendEnd" parameterClass="java.util.List">
		INSERT INTO SMSLog (SMSTitle, SMSType, SMSToNum, SMSFromNum, SMSContent, SMSReserTime) VALUES
        <dynamic>
		<iterate conjunction=",">(#[].SMSTitle#, #[].SMSType#, #[].SMSToNum#, #[].SMSFromNum#, #[].SMSContent#, DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'))</iterate>
		</dynamic>
	</insert>
	
	<!-- 문자 전송결과 업데이트 완료 -->
	<insert id="cusDAO.SMSResultEnd" parameterClass="java.util.List">
		INSERT INTO SMSLog (SMSSeq, SMSSendTime, SMSEndTime, SMSSendFlag) VALUES
		<dynamic>
		<iterate conjunction=",">(#[].SMSSeq#, #[].SMSSendTime#, #[].SMSEndTime#, #[].SMSSendFlag#)</iterate>
		</dynamic>
		ON DUPLICATE KEY UPDATE SMSSendTime = VALUES(SMSSendTime), SMSEndTime = VALUES(SMSEndTime), SMSSendFlag = VALUES(SMSSendFlag)
	</insert>
	
	<!-- 문자 로그 등록 완료 -->
	<insert id="cusDAO.SMSLogAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Cus_SMSLog (CusCd, CusPerCd, SMSSeq, SMSFlag) VALUES
        <dynamic>
		<iterate conjunction=",">(#[].CusCd#, #[].CusPerCd#, #[].SMSSeq#, #[].SMSFlag#)</iterate>
		</dynamic>
	</insert>
	
	<!-- 문자 전송결과 리스트 받아오기 -->
	<select id="cusDAO.GetSMSSendList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT a.SMSSeq, SMSTitle, SMSType, CusNm, CusPerNm, SMSToNum,
			(SELECT PerNm FROM erp.ERP_Per WHERE PerPhone = SMSFromNum AND ViewFlag = 'Y') WritePerNm, SMSFromNum, SMSContent,
		    DATE_FORMAT(SMSReserTime, '%Y-%m-%d %H:%i') SMSReserTime,
		    DATE_FORMAT(SMSSendTime, '%Y-%m-%d %H:%i') SMSSendTime,
		    DATE_FORMAT(SMSEndTime, '%Y-%m-%d %H:%i') SMSEndTime,
		    SMSSendFlag, CASE SMSSendFlag
		        WHEN '1' THEN '전송성공' WHEN '4' THEN '음영지역' WHEN '5' THEN '전원꺼짐'
		        WHEN '7' THEN '번호오류' WHEN '10' THEN '비가입자' WHEN '14' THEN '번호이동'
		        WHEN '16' THEN '수신거부' WHEN '18' THEN 'MMS미지원' ELSE '기타사유'
		    END SMSSendFlagData
		FROM SMSLog a
		LEFT OUTER JOIN
		(SELECT SMSSeq, a.CusCd, CusNm, a.CusPerCd, CusPerNm FROM CS_Cus_SMSLog a, CS_Cus_Info b, CS_Cus_Worker c
			WHERE a.CusCd = b.CusCd AND a.CusCd = c.CusCd AND a.CusPerCd = c.CusPerCd) b
		ON a.SMSSeq = b.SMSSeq
		<isNotEmpty property="SearchSDate">WHERE DATE_FORMAT(SMSReserTime, '%Y-%m-%d') BETWEEN #SearchSDate# AND #SearchEDate#</isNotEmpty>
		<isEmpty property="SearchSDate">
			<isNotEmpty property="SelDate">WHERE DATE_FORMAT(SMSReserTime, '%Y-%m-%d') = #SelDate#</isNotEmpty>
		</isEmpty>
		<isNotEmpty property="SMSSeq">
			<isNotEqual property="SMSSeq" compareValue="0">WHERE a.SMSSeq = #SMSSeq#</isNotEqual>
		</isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY SMSReserTime DESC, SMSToNum</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 내부담당자 & 유치자 & 메일담당자 리스트 받아오기 -->
	<select id="cusDAO.GetPerList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT 'Manager' Gubun, CusManagerNm PerNm FROM CS_Cus_Info WHERE CusManagerNm IS NOT NULL AND CusManagerNm != '' AND DelFlag = 'N' GROUP BY CusManagerNm UNION ALL
		SELECT 'Invite' Gubun, CusInviteNm FROM CS_Cus_Info WHERE CusInviteNm IS NOT NULL AND CusInviteNm != '' AND DelFlag = 'N' GROUP BY CusInviteNm UNION ALL
		SELECT 'Mailing' Gubun, CusMailingPerNm FROM CS_Cus_Info WHERE CusMailingPerNm IS NOT NULL AND CusMailingPerNm != '' AND DelFlag = 'N' GROUP BY CusMailingPerNm
	</select>
	
	<!-- 두 날짜 기간 구하기 -->
	<select id="cusDAO.GetDateDiff" parameterClass="cusVO2" resultClass="String">
		SELECT <isEmpty property="SearchSDate"><isEmpty property="SearchEDate">''</isEmpty></isEmpty>
		<isNotEmpty property="SearchSDate"><isNotEmpty property="SearchEDate">
			<isEqual property="EventFlag" compareValue="Year">NULLIF(TIMESTAMPDIFF(YEAR, #SearchSDate#, #SearchEDate#), 0)</isEqual>
			<isEqual property="EventFlag" compareValue="Month">NULLIF(TIMESTAMPDIFF(MONTH, #SearchSDate#, #SearchEDate#), 0)</isEqual>
			<isEqual property="EventFlag" compareValue="Week">NULLIF(TIMESTAMPDIFF(WEEK, #SearchSDate#, #SearchEDate#), 0)</isEqual>
			<isEqual property="EventFlag" compareValue="Day">NULLIF(TIMESTAMPDIFF(DAY, #SearchSDate#, #SearchEDate#), 0)</isEqual>
			<isEqual property="EventFlag" compareValue="Hour">NULLIF(TIMESTAMPDIFF(HOUR, #SearchSDate#, #SearchEDate#), 0)</isEqual>
			<isEqual property="EventFlag" compareValue="Minute">NULLIF(TIMESTAMPDIFF(MINUTE, #SearchSDate#, #SearchEDate#), 0)</isEqual>
			<isEqual property="EventFlag" compareValue="Second">NULLIF(TIMESTAMPDIFF(SECOND, #SearchSDate#, #SearchEDate#), 0)</isEqual>
		</isNotEmpty></isNotEmpty> AS DateDiff
	</select>
																<!-- 	공통	 	-->
																
																<!-- 	고객	 	-->
	<select id="cusDAO.GetXIRR" parameterClass="cusVO2" resultClass="egovMap">
		SELECT #CusCd# CusCd,
			XIRR(#TradeType#, #CusCd#, 'N', #SelDate#, #NowSumMoney#) Rate,
			XIRR(#TradeType#, #CusCd#, 'N', #SelDate#, #NowTotalSumMoney#) HdnRate,
			XIRR(#TradeType#, #CusCd#, 'Y', #SelDate#, #NowSumMoney#) CalcuRate,
			XIRR(#TradeType#, #CusCd#, 'Y', #SelDate#, #NowTotalSumMoney#) HdnCalcuRate
	</select>
	 
	<!-- 일임&일임외&채권매각&공동투자 고객 리스트 -->
	<select id="cusDAO.GetCusList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CusNm, CusInviteNm, CusStatus, CusSubStatus, CusStatusNm, CusStatusOrder,
			CusType, CusCorType, CusManagerNm, CusMailingPerNm, CusAddInvestFlag, ConCusFlag,
			TradeType, TradeTypeNm, TradeStartDate, TradeCharge, TradeHopeMoney, TradeMoney,
			NowCash, RealNowCash,
			Bond, Stock, War, WarSecurity, NowSecurity, NowSumMoney,
			(( (NowSumMoney - TradeMoney) / TradeMoney) * 100) AccPer, <!-- 절대 -->
			(( (NowSumMoney - TradeMoney) / TradeMoney) * 100) * 365 / CEIL((DateGapMoney / TradeMoney)) AddAvgPer, <!-- 가중평균 XIRR로 대체 2016.01.13 -->
			FORMAT((NowSumMoney + WarSecurity), 0) NowTotalSumMoney,
			(((NowSumMoney + WarSecurity) / TradeMoney - 1) * 100) HdnAccPer, <!-- 잠재절대 XIRR로 대체 2016.01.13 -->
			CEIL((DateGapMoney / TradeMoney)) AddAvgPeriod,
			((((NowSumMoney + WarSecurity) / TradeMoney - 1) * 100) * 365) / CEIL((DateGapMoney / TradeMoney)) HdnAddAvgPer, <!-- 잠재가중평균 XIRR로 대체 2016.01.13 -->
			(((NowSumMoney + WarSecurity + HdnIza) / TradeMoney - 1) * 100) ReturnRate, DateGapMoney FROM
				
				(SELECT d1.CusCd, CusNm, CusInviteNm, CusStatus, CusSubStatus, CusStatusNm, CusStatusOrder,
				CusType, CusCorType, CusManagerNm, CusMailingPerNm, CusAddInvestFlag, ConCusFlag,
				TradeType, TradeTypeNm, TradeStartDate, TradeCharge, TradeHopeMoney, IFNULL(TradeMoney, 0) TradeMoney, IFNULL(DateGapMoney, 0) DateGapMoney,
				IFNULL(NowCash, 0) NowCash, IFNULL(RealNowCash, 0) RealNowCash,
				IFNULL(Bond, 0) + IFNULL(Stock, 0) + IFNULL(War, 0) + IFNULL(NowCash, 0) NowSumMoney,
				IFNULL(Bond, 0) Bond, IFNULL(Stock, 0) Stock, IFNULL(War, 0) War, IFNULL(WarSecurity, 0) WarSecurity,
				IFNULL(Bond, 0) + IFNULL(Stock, 0) + IFNULL(War, 0) NowSecurity, IFNULL(HdnIza, 0) HdnIza FROM

					<!-- 고객정보 -->
					(SELECT CusCd, CusNm, CusInviteNm, CusStatus, CusSubStatus, CusStatusNm, CusStatusOrder,
					CusType, CusCorType, CusManagerNm, CusMailingPerNm, CusAddInvestFlag, (SELECT CASE COUNT(*) WHEN 0 THEN 'N' ELSE 'Y' END FROM CS_Cus_ConCus WHERE CusCd = a.CusCd AND DelFlag ='N') ConCusFlag
					FROM CS_Cus_Info a WHERE DelFlag = 'N'
					
					<isEmpty property="CusStatus">AND CusStatus IN ($EventType$)</isEmpty>
					
					<isNotEmpty property="CusStatus">
						AND a.CusStatus = #CusStatus#
						<isNotEmpty property="CusSubStatus"><isNotEqual property="CusSubStatus" compareValue="0">
							AND a.CusSubStatus = #CusSubStatus#
						</isNotEqual></isNotEmpty>
					</isNotEmpty>
					
					
					<isNotEqual property="TradeType" compareValue="0">
						AND (SELECT TradeType FROM CS_Trade b WHERE b.CusCd = a.CusCd AND DelFlag = 'N') = #TradeType#
					</isNotEqual>
					
					) d1
				LEFT OUTER JOIN
					<!-- 계약정보 -->
					(SELECT CusCd, TradeCd, TradeType, CASE TradeType WHEN '1' THEN '기간별' WHEN '2' THEN '건별' END TradeTypeNm, TradeStartDate, TradeCharge, TradeHopeMoney
						FROM CS_Trade WHERE DelFlag = 'N'
						<isNotEqual property="TradeType" compareValue="0">
							AND TradeType = #TradeType#
						</isNotEqual>
						
						) d2
					ON d1.CusCd = d2.CusCd
				LEFT OUTER JOIN
					<!-- 가중평균일임기간 -->
					(
						SELECT a.CusCd,
							SUM(CASE WHEN TradeMoneyFlag IN ('1', '3', '5') THEN TradeMoney * (TO_DAYS(#SelDate#) - TO_DAYS(TradeMoneyDate))
								ELSE -TradeMoney * (TO_DAYS(#SelDate#) - TO_DAYS(TradeMoneyDate)) END) DateGapMoney,
							SUM(CASE WHEN TradeMoneyFlag IN ('1', '3', '5') THEN TradeMoney ELSE -TradeMoney END) TradeMoney
						FROM CS_Trade a, CS_Trade_Money b WHERE a.CusCd = b.CusCd AND a.TradeCd = b.TradeCd AND a.TradeType = '1' AND a.DelFlag = 'N' AND b.DelFlag = 'N'
					
						AND TradeMoneyFlag != '4'
						AND
							CASE WHEN (SELECT COUNT(CalcuDate) FROM CS_Calcu WHERE CusCd = a.CusCd AND CalcuType = 'Calcu' AND CalcuEndFlag = 'Y' AND DelFlag = 'N') = 0 THEN TradeMoneyDate <![CDATA[<=]]> #SelDate#
							WHEN (SELECT MAX(CalcuDate) FROM CS_Calcu WHERE CusCd = a.CusCd AND CalcuType = 'Calcu' AND CalcuEndFlag = 'Y' AND DelFlag = 'N') > #SelDate# THEN TradeMoneyDate <![CDATA[<=]]> #SelDate#
						ELSE TradeMoneyDate BETWEEN (SELECT MAX(CalcuDate) FROM CS_Calcu WHERE CusCd = a.CusCd AND CalcuType = 'Calcu' AND CalcuEndFlag = 'Y' AND DelFlag = 'N') AND #SelDate# END
						GROUP BY a.CusCd
					UNION ALL
					SELECT a.CusCd,
						SUM(CASE WHEN TradeMoneyFlag IN ('1', '3', '5') THEN TradeMoney * (TO_DAYS(#SelDate#) - TO_DAYS(TradeMoneyDate))
							ELSE -TradeMoney * (TO_DAYS(#SelDate#) - TO_DAYS(TradeMoneyDate)) END) DateGapMoney,
						SUM(CASE WHEN TradeMoneyFlag IN ('1', '3', '5') THEN TradeMoney ELSE -TradeMoney END) TradeMoney
					FROM CS_Trade a, CS_Trade_Money b WHERE a.CusCd = b.CusCd AND a.TradeCd = b.TradeCd AND a.TradeType = '2' AND a.DelFlag = 'N' AND b.DelFlag = 'N'
					AND TradeMoneyDate <![CDATA[<=]]> #SelDate#
					
					
					GROUP BY a.CusCd) d3
					ON d1.CusCd = d3.CusCd
				LEFT OUTER JOIN
					<!-- 현금정보 -->
					(SELECT CusCd,
					    IFNULL(SUM(InvestTradeMoney), 0) + NoneCalcuMoney + CalcuMoney NowCash,
					    IFNULL(SUM(RealTradeMoney), 0) + NoneCalcuMoney + CalcuMoney RealNowCash
					FROM
					    (SELECT a.CusCd,
							CASE a.CateCd WHEN 'Except' THEN - InvestTradeMoney ELSE InvestTradeMoney END InvestTradeMoney,
							CASE WHEN a.CateCd IN ('Except' , 'ComKeep', 'CusKeep') THEN 0 ELSE InvestTradeMoney END RealTradeMoney,
							IFNULL((SELECT SUM(InvestTradeMoney) FROM CS_Invest_Tmp
								WHERE CusCd = a.CusCd AND InvestDate <![CDATA[<=]]> #SelDate# AND ApplyFlag = 'N' AND DelFlag = 'N'), 0) NoneCalcuMoney,
							IFNULL((SELECT SUM(InvestTradeMoney) FROM CS_Invest_Tmp
								WHERE CusCd = a.CusCd AND InvestDate <![CDATA[<=]]> #SelDate# AND ApplyFlag = 'Y' AND DelFlag = 'N' AND ApplyDate > #SelDate#), 0) CalcuMoney
					    FROM CS_Invest_Status a,
							(SELECT CusCd, a.CateCd, MAX(InvestDate) InvestDate FROM CS_Invest_Status a, CS_Cate b
							WHERE a.CateCd = b.CateCd AND b.CateType = '2' AND a.InvestType = '1' AND a.InvestDate <![CDATA[<=]]> #SelDate# AND b.DelFlag = 'N' AND a.DelFlag = 'N'
							GROUP BY a.CusCd , a.CateCd) b
					    WHERE a.CusCd = b.CusCd AND a.CateCd = b.CateCd AND a.InvestDate = b.InvestDate AND a.DelFlag = 'N') cuscash
					GROUP BY CusCd) cash
					
					ON d1.CusCd = cash.CusCd
				LEFT OUTER JOIN
					<!-- 유가증권 -->
					(SELECT CusCd,
						IFNULL(SUM(REPLACE(NowBondCnt, ',', '') * CASE WHEN SubCateCd = '6' THEN BuyUnitPrice ELSE UnitPrice END), 0) Bond,
						IFNULL(SUM(REPLACE(NowStockCnt, ',', '') * UnitPrice), 0) Stock,
						IFNULL(SUM(REPLACE(NowWarCnt, ',', '') * UnitPrice), 0) War,
						IFNULL(SUM(CASE WHEN (SecUnitPrice - InSuNowPrice) > 0 THEN (SecUnitPrice - InSuNowPrice) * REPLACE(NowWarCnt, ',', '') END), 0) WarSecurity
					FROM
						<!-- 종목별시가 -->
						(SELECT a.CateCd, CateNm, CateType, SubCateCd, PriceDate,
						    IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = a.CateCd AND PriceDate = b.PriceDate AND DelFlag = 'N'), 0) UnitPrice,
						    IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = a.SecCateCd AND PriceDate = b.PriceDate AND DelFlag = 'N'), 0) SecUnitPrice,
						    IFNULL((SELECT DISTINCT InSuNowPrice FROM CS_Invest_Summary WHERE WarCateCd = a.CateCd), 0) InSuNowPrice
						FROM
						    (SELECT CateCd, CateNm, CateType, SubCateCd, (SELECT DISTINCT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = a.CateCd) SecCateCd
						    FROM CS_Cate a WHERE CateType = '1' AND DelFlag = 'N') a
						        LEFT OUTER JOIN
<!-- 						    (SELECT CateCd, MAX(PriceDate) PriceDate FROM CS_Cate_Price -->
<!-- 								WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N' GROUP BY CateCd) b -->
							
							(SELECT aa.CateCd, MAX(PriceDate) PriceDate FROM CS_Cate_Price aa,
								(SELECT DISTINCT CateCd FROM CS_Invest_Status
									WHERE InvestType = '1' AND CateCd NOT IN ('Cash', 'CMA', 'ComKeep', 'CusKeep', 'Except', 'X') AND DelFlag = 'N'
								UNION ALL
								SELECT DISTINCT CateCd FROM (
									SELECT WarCateCd CateCd FROM CS_Invest_Summary UNION ALL
									SELECT SecCateCd FROM CS_Invest_Summary UNION ALL
									SELECT BondCateCd FROM CS_Invest_Summary) bb) cc
								WHERE PriceDate <![CDATA[<=]]> #SelDate# AND aa.DelFlag = 'N' 
							AND aa.CateCd = cc.CateCd
							GROUP BY aa.CateCd) b

							ON CASE WHEN a.SecCateCd IS NULL THEN a.CateCd = b.CateCd ELSE a.SecCateCd = b.CateCd End) price
					LEFT OUTER JOIN
						<!-- 종목수량 -->
						(SELECT CusCd, a.CateCd, SUM(InvestTradeMoney) / SUM(InvestCnt) BuyUnitPrice,
						    FORMAT(SUM(InvestCnt) - IFNULL((SELECT CEIL(SUM(InvestCnt)) FROM CS_Invest_Status
								WHERE CusCd = a.CusCd AND CateCd = a.CateCd AND InvestType = '2' AND InvestDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N'), 0), 0) NowBondCnt,
						    '' NowStockCnt, '' NowWarCnt
						FROM CS_Invest_Status a, CS_Cate b
						WHERE a.CateCd = b.CateCd AND a.InvestType = '1' AND a.InvestDate <![CDATA[<=]]> #SelDate# AND a.DelFlag = 'N'
<!--  사용안함되어있는 종목도 계산이 필요해서 수정함 2015.03.09							AND b.CateType = '1' AND b.SubCateCd IN ('1', '4', '5', '6') AND b.DelFlag = 'N' -->
							AND b.CateType = '1' AND b.SubCateCd IN ('1', '4', '5', '6') 
						GROUP BY CusCd, CateCd 
						UNION ALL
						SELECT CusCd, a.CateCd, SUM(InvestTradeMoney) / SUM(InvestCnt) BuyUnitPrice, '' NowBondCnt,
						    FORMAT(SUM(InvestCnt) - IFNULL((SELECT CEIL(SUM(InvestCnt)) FROM CS_Invest_Status
								WHERE CusCd = a.CusCd AND CateCd = a.CateCd AND InvestType = '2' AND InvestDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N'), 0), 0) NowStockCnt,
							'' NowWarCnt
						FROM CS_Invest_Status a, CS_Cate b
						WHERE a.CateCd = b.CateCd AND a.InvestType = '1' AND a.InvestDate <![CDATA[<=]]> #SelDate# AND a.DelFlag = 'N'
							AND b.CateType = '1' AND b.SubCateCd = '2' 
						GROUP BY CusCd, CateCd 
						UNION ALL
						SELECT CusCd, a.CateCd, SUM(InvestTradeMoney) / SUM(InvestCnt) BuyUnitPrice, '' NowBondCnt, '' NowStockCnt,
						    FORMAT(SUM(InvestCnt) - IFNULL((SELECT CEIL(SUM(InvestCnt)) FROM CS_Invest_Status
								WHERE CusCd = a.CusCd AND CateCd = a.CateCd AND InvestType = '2' AND InvestDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N'), 0), 0) NowWarCnt
						FROM CS_Invest_Status a, CS_Cate b
						WHERE a.CateCd = b.CateCd AND a.InvestType = '1' AND a.InvestDate <![CDATA[<=]]> #SelDate# AND a.DelFlag = 'N'
							AND b.CateType = '1' AND b.SubCateCd IN ('3', '7', '8') 
						GROUP BY CusCd, CateCd) cnt
					ON price.CateCd = cnt.CateCd
					WHERE CusCd IS NOT NULL
					GROUP BY CusCd) cnt
					ON d1.CusCd = cnt.CusCd
				LEFT OUTER JOIN
					<!-- 잠재수익율 -->
					(SELECT CusCd, SUM(IFNULL(NowCalcuMoney * InSuSurfaceRate / 100 * InSuSurfaceDay / 12 * SurfaceCnt * Rate, 0)
								+ FLOOR(NowCalcuMoney * (1 + (InSuRepayRate / 100 - 1) * Rate))) - SUM(NowCalcuMoney) HdnIza FROM
				    (SELECT CusCd,
			            InSuSurfaceRate, InSuSurfaceDay, InSuRepayRate, InSuRepayDay,
			            CASE (SELECT (PERIOD_DIFF(DATE_FORMAT(InSuRepayDay, '%Y%m'), DATE_FORMAT(#SelDate#, '%Y%m'))) % InSuSurfaceDay) WHEN '0'
			                THEN
			                    CASE DATE_FORMAT(InSuRepayDay, '%d') > DATE_FORMAT(#SelDate#, '%d')
			                        WHEN TRUE THEN FLOOR((SELECT (PERIOD_DIFF(DATE_FORMAT(InSuRepayDay, '%Y%m'), DATE_FORMAT(#SelDate#, '%Y%m'))) / InSuSurfaceDay) + 1)
			                        ELSE FLOOR((SELECT (PERIOD_DIFF(DATE_FORMAT(InSuRepayDay, '%Y%m'), DATE_FORMAT(#SelDate#, '%Y%m'))) / InSuSurfaceDay))
			                    END
			                ELSE CEIL((SELECT (PERIOD_DIFF(DATE_FORMAT(InSuRepayDay, '%Y%m'), DATE_FORMAT(#SelDate#, '%Y%m'))) / InSuSurfaceDay))
			            END SurfaceCnt,
<!-- 			            CASE CusType WHEN '1' THEN '0.86' ELSE '0.846' END Rate, -->
			            '0.846' Rate,
			            (NowCnt * UnitPrice) NowCalcuMoney
				    FROM
				    	(SELECT CusCd, CusType, CateCd, catenm, NowCnt,
						    (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = d.CateCd AND PriceDate = UnitPriceDate AND DelFlag = 'N') UnitPrice,
						    InSuSurfaceRate, InSuSurfaceDay, InSuRepayRate, InSuRepayDay
						FROM
						    (SELECT b.CusCd, CusType, a.CateCd, catenm,
								SUM(InvestCnt) - IFNULL((SELECT SUM(InvestCnt) FROM CS_Invest_Status
									WHERE CusCd = b.CusCd AND CateCd = c.BondCateCd AND InvestDate <![CDATA[<=]]> #SelDate# AND InvestType = '2' AND DelFlag = 'N'), 0) NowCnt,
								(SELECT MAX(PriceDate) PriceDate FROM CS_Cate_Price
									WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N' AND CateCd = b.CateCd) UnitPriceDate,
								InSuSurfaceRate, InSuSurfaceDay, InSuRepayRate, InSuRepayDay
						    FROM CS_Cate a, CS_Invest_Status b, CS_Invest_Summary c, CS_Cus_Info d
						    WHERE a.CateCd = b.CateCd AND b.CateCd = c.BondCateCd AND b.CusCd = d.CusCd
								AND a.CateType = '1' AND a.DelFlag = 'N'
								AND InvestDate <![CDATA[<=]]> #SelDate# AND b.InvestType = '1' AND b.DelFlag = 'N'
								AND d.DelFlag = 'N' AND SubCateCd IN ('1', '4', '5', '6')
						    GROUP BY CusCd , a.CateCd , InSuSurfaceRate , InSuSurfaceDay , InSuRepayRate , InSuRepayDay) d) HdnCnt
					    WHERE NowCnt != '0' 
					    ORDER BY CusCd, CateNm) bond
					Group by CusCd) hdn
					ON d1.CusCd = hdn.CusCd
				) data
			<!-- 고급검색 -->
		    <isNotEmpty property="HighSearchQuery">
		    	$HighSearchQuery$
		    	<isNotEmpty property="CusCd">AND CusCd = #CusCd#</isNotEmpty>
		    	<isNotEmpty property="CusNm">AND CusNm LIKE '%$CusNm$%'</isNotEmpty>
		    </isNotEmpty>
		    <isEmpty property="HighSearchQuery">
		    	<isNotEmpty property="CusCd">WHERE CusCd = #CusCd#</isNotEmpty>
		    	<isEmpty property="CusCd">
					<isNotEmpty property="CusNm">WHERE CusNm LIKE '%$CusNm$%'</isNotEmpty>
				</isEmpty>
		    </isEmpty>
			<isEmpty property="OrderKey">ORDER BY CusStatusOrder, IFNULL(TradeType, 'z'), TradeMoney DESC, CusNm</isEmpty>
			<isNotEmpty property="OrderKey">
				<isEqual property="OrderFlag" compareValue="S">ORDER BY CusStatusOrder, $OrderKey$ $OrderType$</isEqual>
				<isNotEqual property="OrderFlag" compareValue="S">ORDER BY CusStatusOrder, $OrderKey$+0 $OrderType$</isNotEqual>
			</isNotEmpty>
	</select>
	
	<!-- 잠재 고객 리스트 -->
	<select id="cusDAO.GetCusList_Hope" parameterClass="cusVO2" resultClass="egovMap">
		SELECT a.CusCd, CusNm, CusManagerNm, CusPhone, CusEmail,
		    TradeType, TradeStartDate, TradeCharge, TradeHopeMoney
		FROM CS_Cus_Info a LEFT OUTER JOIN CS_Trade b ON a.CusCd = b.CusCd
			WHERE a.CusStatus = #CusStatus# AND a.DelFlag = 'N'
		<isEmpty property="OrderKey">ORDER BY CusNm, CusManagerNm</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 자기자본 고객 리스트 -->
	<select id="cusDAO.GetOwnCusList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CusNm, FaceValue, WarSecurity, ROUND((WarSecurity / FaceValue) * 100, 1) Per, RealWarVal, PublicWarSecurity
		FROM
		    (SELECT CusCd, CusNm, ROUND(SUM((InSuNowPrice * (InvestCnt - SellCnt))) / 1000000) * 1000000 FaceValue,
		            SUM(CASE WHEN (SecUnitPrice - InSuNowPrice) > 0 THEN (SecUnitPrice - InSuNowPrice) * (InvestCnt - SellCnt) END) WarSecurity,
		            SUM(CASE WHEN WarUnitPrice != 0 THEN (WarUnitPrice - IFNULL(InSuNowPrice, 0)) * (InvestCnt - SellCnt) END) PublicWarSecurity,
		            SUM(RealWarVal) RealWarVal
		    FROM
		        (SELECT CusCd, CusNm, CateCd, CateNm, CateType, SubCateCd,
		            SecUnitPrice, WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt,
		            CASE WHEN Gap > 0 THEN (Gap * NowCnt) - InvestTradeMoney ELSE 0 - InvestTradeMoney End RealWarVal
		    FROM
		        (SELECT CusCd, CusNm, CateCd, CateNm, CateType, SubCateCd, (SecUnitPrice - InSuNowPrice) Gap,
		            SecUnitPrice, WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt, (InvestCnt - SellCnt) NowCnt
		    FROM
		    	(SELECT CusCd, CusNm, CateCd, CateNm, CateType, SubCateCd, SecCateCd, SecUnitDate,
				    IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = SecCateCd AND PriceDate = SecUnitDate AND DelFlag = 'N'), 0) SecUnitPrice,
				    WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt
				FROM
				    (SELECT CusCd, CusNm, CateCd, CateNm, CateType, SubCateCd, SecCateCd,
					    (SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N' AND CateCd = SecCateCd) SecUnitDate,
					    WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt
				    FROM
					(SELECT a.CusCd, CusNm, a.CateCd, CateNm, CateType, SubCateCd,
					    (SELECT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = a.CateCd) SecCateCd,
					    IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE DelFlag = 'N'
							AND PriceDate = (SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N') AND CateCd = a.CateCd), 0) WarUnitPrice,
					    IFNULL((SELECT InSuNowPrice FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd), 0) InSuNowPrice,
					    SUM(InvestCnt) InvestCnt, SUM(InvestTradeMoney) InvestTradeMoney,
					    IFNULL((SELECT SUM(InvestCnt) FROM CS_Invest_Status WHERE CusCd = a.CusCd
							AND CateCd = a.CateCd AND DelFlag = 'N' AND InvestType = '2' AND InvestDate <![CDATA[<=]]> #SelDate#), 0) SellCnt
				    FROM CS_Invest_Status a, CS_Cate b, CS_Cus_Info c
				    WHERE a.CateCd = b.CateCd AND a.CusCd = c.CusCd
					    AND CateType = '1' AND SubCateCd IN ('3' , '7', '8') AND a.DelFlag = 'N' AND InvestDate <![CDATA[<=]]> #SelDate# AND a.CusCd IN ('000000000032' , '000000000033')
				    GROUP BY CusCd , CateCd , CateType , InvesTtype)base1 )base2) a) b WHERE NowCnt != 0) c
		    GROUP BY CusCd) own
		    
			<!-- 일임/일임외 고객 추가 2015.02.03 -->
			UNION ALL
			SELECT CONCAT('NotOwnSum', CusStatus), CASE CusStatus WHEN '2' THEN '일임' ELSE '일임외' END CusNm, SUM(FaceValue) FaceValue, 
				SUM(WarSecurity) WarSecurity, ROUND((SUM(WarSecurity) / SUM(FaceValue)) * 100, 1) Per, SUM(RealWarVal) RealWarVal, SUM(PublicWarSecurity) PublicWarSecurity
				FROM
					(SELECT CusCd, CusNm, CusStatus, ROUND(SUM((InSuNowPrice * (InvestCnt - SellCnt))) / 1000000) * 1000000 FaceValue,
							SUM(CASE WHEN (SecUnitPrice - InSuNowPrice) > 0 THEN (SecUnitPrice - InSuNowPrice) * (InvestCnt - SellCnt) END) WarSecurity,
							SUM(CASE WHEN WarUnitPrice != 0 THEN (WarUnitPrice - IFNULL(InSuNowPrice, 0)) * (InvestCnt - SellCnt) END) PublicWarSecurity,
							SUM(RealWarVal) RealWarVal
					FROM
						(SELECT CusCd, CusNm, CusStatus, CateCd, CateNm, CateType, SubCateCd,
							SecUnitPrice, WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt,
							CASE WHEN Gap > 0 THEN (Gap * NowCnt) - InvestTradeMoney ELSE 0 - InvestTradeMoney End RealWarVal
					FROM
						(SELECT CusCd, CusNm, CusStatus, CateCd, CateNm, CateType, SubCateCd, (SecUnitPrice - InSuNowPrice) Gap,
							SecUnitPrice, WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt, (InvestCnt - SellCnt) NowCnt
					FROM
						(SELECT CusCd, CusNm, CusStatus, CateCd, CateNm, CateType, SubCateCd, SecCateCd, SecUnitDate,
							IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = SecCateCd AND PriceDate = SecUnitDate AND DelFlag = 'N'), 0) SecUnitPrice,
							WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt
						FROM
							(SELECT CusCd, CusNm, CusStatus, CateCd, CateNm, CateType, SubCateCd, SecCateCd,
								(SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N' AND CateCd = SecCateCd) SecUnitDate,
								WarUnitPrice, InSuNowPrice, InvestCnt, InvestTradeMoney, SellCnt
							FROM
							(SELECT a.CusCd, CusNm, CusStatus, a.CateCd, CateNm, CateType, SubCateCd,
								(SELECT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = a.CateCd) SecCateCd,
								IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE DelFlag = 'N'
									AND PriceDate = (SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N') AND CateCd = a.CateCd), 0) WarUnitPrice,
								IFNULL((SELECT InSuNowPrice FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd), 0) InSuNowPrice,
								SUM(InvestCnt) InvestCnt, SUM(InvestTradeMoney) InvestTradeMoney,
								IFNULL((SELECT SUM(InvestCnt) FROM CS_Invest_Status WHERE CusCd = a.CusCd
									AND CateCd = a.CateCd AND DelFlag = 'N' AND InvestType = '2' AND InvestDate <![CDATA[<=]]> #SelDate#), 0) SellCnt
							FROM CS_Invest_Status a, CS_Cate b, CS_Cus_Info c
							WHERE a.CateCd = b.CateCd AND a.CusCd = c.CusCd AND CateType = '1' AND SubCateCd IN ('3' , '7', '8') AND InvestDate <![CDATA[<=]]> #SelDate#
								AND CusStatus IN ('2', '6') AND a.DelFlag = 'N' AND c.DelFlag = 'N'
								GROUP BY CusCd , CateCd , CateType , InvesTtype)base1 )base2) a) b WHERE NowCnt != 0) c
					GROUP BY CateCd, CusStatus) cus
				GROUP BY CusStatus
		<isEmpty property="OrderKey">ORDER BY CusCd, WarSecurity DESC</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 자기자본 채권 상세현황 -->
	<select id="cusDAO.GetOwnBondList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT base.InSuCd, InSuNm, BondCateCd, BondCateNm,
		    InSuNabday, InSuRepayDay, ExtraDay, InSuSurfaceRate, InSuExpiryRate, InSuSumMoney, OwnETC, SUBSTRING(OwnETC, 1, 10) OwnETCSkip,
		    OwnBond, ETCBond, (IFNULL(OwnBond, 0) + IFNULL(ETCBond, 0)) OwnSumBond
		FROM
		    (SELECT a.InSuCd, InSuNm, BondCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = a.BondCateCd) BondCateNm,
		            InSuNabday, InSuRepayDay, DATEDIFF(InSuRepayDay, NOW()) ExtraDay,
		            InSuSurfaceRate, InSuExpiryRate, InSuSumMoney * 100000000 InSuSumMoney, OwnETC
		    FROM CS_Invest_Summary a
		    WHERE BondCateCd != 'X' AND DelFlag = 'N') base
		        LEFT OUTER JOIN
		    (SELECT InSuCd, OwnBond
		    FROM
		        (SELECT a.InSuCd, SUM(b.ISICBond) OwnBond FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b
		    WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N' AND b.CusCd IN ('000000000032' , '000000000033')
		    GROUP BY InSuCd) OwnBond
		    WHERE OwnBond != '0') own ON base.InSuCd = own.InSuCd
		        LEFT OUTER JOIN
		    (SELECT InSuCd, ETCBond
		    FROM
		        (SELECT a.InSuCd, InSuSumMoney * 100000000 - SUM(b.ISICBond) ETCBond FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
		    WHERE a.InSuCd = b.InSuCd AND b.CusCd = c.CusCd AND a.DelFlag = 'N' AND b.DelFlag = 'N' AND (CusStatus IN ('2', '4', '6', '8') OR b.CusCd IN ('000000000032' , '000000000033'))
		    GROUP BY InSuCd) ETCBond
		    WHERE ETCBond != '0') etc ON base.InSuCd = etc.InSuCd
		    WHERE (IFNULL(OwnBond, 0) + IFNULL(ETCBond, 0)) != '0' AND (SELECT SubCateCd FROM CS_Cate WHERE CateCd = BondCateCd) = '1'
		<isEmpty property="OrderKey">ORDER BY InSuNabDay</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 자기자본 채권 코멘트 변경 완료 -->
	<update id="cusDAO.OwnEtcEditEnd">
		UPDATE CS_Invest_Summary SET OwnETC = #OwnETC# WHERE InSuCd = #InSuCd#
	</update>
	
	<!-- 고객등록 위한 고객코드 받아오기 -->
	<select id="cusDAO.GetCusCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT IFNULL(LPAD(MAX(CusCd) + 1, 12, 0), '000000000001') CusCd FROM CS_Cus_Info]]>
	</select>
	
	<!-- 고객명 중복 검사 완료 -->
	<select id="cusDAO.CusNmChkEnd" parameterClass="cusVO2" resultClass="int">
		<![CDATA[SELECT COUNT(CusNm) Cnt FROM CS_Cus_Info WHERE DelFlag = 'N' AND CusNm = '$CusNm$']]>
	</select>
	
	<!-- 고객 기본정보 등록 완료 -->
	<insert id="cusDAO.CusBasicAddEnd">
		INSERT INTO CS_Cus_Info
			(CusCd, CusNm, CusType, CusCorType, CusRegNum, CusCorRegNum, CusOwnNm, CusOwnJumin,
			CusTel, CusPhone, CusFax, CusEmail, CusPost, CusAddr, CusStatus, CusStatusNm, CusStatusOrder, CusSubStatus,
			CusTradeEndDate, CusAddInvestFlag, CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun,
			CusMailingPerNm, CusMailingPerSabun, CusEtc, CusOfficeNm, CusOfficePosition, CusOfficeTel, CusOfficeEtc,
			RegDate, RegPerSabun, DelFlag)
		VALUES (#CusCd#, #CusNm#, #CusType#, #CusCorType#, #CusRegNum#, #CusCorRegNum#, #CusOwnNm#, CONCAT(SUBSTRING(#CusOwnJumin#, 1, 8), REPLACE(SUBSTRING(#CusOwnJumin#, 9), SUBSTRING(#CusOwnJumin#, 9), '******')),
		       #CusTel#, #CusPhone#, #CusFax#, #CusEmail#, #CusPost#, #CusAddr#, #CusStatus#, #CusStatusNm#, #CusStatusOrder#, #CusSubStatus#,
		       #CusTradeEndDate#, #CusAddInvestFlag#, #CusManagerNm#, #CusManagerSabun#, #CusInviteNm#, #CusInviteSabun#,
		       #CusMailingPerNm#, #CusMailingPerSabun#, #CusEtc#, #CusOfficeNm#, #CusOfficePosition#, #CusOfficeTel#, #CusOfficeEtc#,
		       now(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 고객 계정 생성 완료 -->
	<insert id="cusDAO.CusAccountAddEnd">
		INSERT INTO CS_Out_Account (CusCd, CusId, CusPW, RegDate, RegPerSabun, UseFlag, DelFlag)
			VALUES (#CusCd#, #CusId#, #CusPW#, now(), #RegPerSabun#, 'Y', 'N')
	</insert>
	
	<!-- 고객정보조회 -->
	<select id="cusDAO.GetCusBasicInfo" resultMap="CusInfo">
		SELECT CusCd, S_Nb, CusNm, CusType, CusCorType,
			(SELECT TradeType FROM CS_Trade WHERE CusCd = cus.CusCd AND DelFlag = 'N') TradeType,
			SUBSTRING_INDEX(SUBSTRING_INDEX(CusRegNum, '-',1), '-', -1) RegNum_1,
			SUBSTRING_INDEX(SUBSTRING_INDEX(CusRegNum, '-',2), '-', -1) RegNum_2,
			SUBSTRING_INDEX(SUBSTRING_INDEX(CusRegNum, '-',3), '-', -1) RegNum_3, CusRegNum,
			SUBSTRING_INDEX(SUBSTRING_INDEX(CusCorRegNum, '-',1), '-', -1) CorRegNum_1,
			SUBSTRING_INDEX(SUBSTRING_INDEX(CusCorRegNum, '-',2), '-', -1) CorRegNum_2, CusCorRegNum, CusOwnNm,
			SUBSTRING_INDEX(SUBSTRING_INDEX(CusOwnJumin, '-',1), '-', -1) OwnJumin_1,
			SUBSTRING_INDEX(SUBSTRING_INDEX(CusOwnJumin, '-',2), '-', -1) OwnJumin_2, CusOwnJumin,
			CusTel, CusPhone, CusFax, CusEmail,
			CusPost, CusAddr, CusStatus, CusSubStatus, CusTradeEndDate, CusAddInvestFlag,
			CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun,
			(SELECT SUM(InviteRate) InviteRate FROM CS_Cus_Invite invite WHERE CusCd = cus.CusCd AND DelFlag = 'N') InviteRate,
			CusMailingPerNm, CusMailingPerSabun, CusEtc, CusOfficeNm, CusOfficePosition,
			CusOfficeTel, CusOfficeEtc, RegDate, RegPerSabun, DelFlag,
			(SELECT TradeFirstDate FROM CS_Trade WHERE CusCd = cus.CusCd AND DelFlag = 'N') TradeFirstDate
	  FROM CS_Cus_Info cus
	 WHERE CusCd = #CusCd# AND DelFlag = 'N'
	</select>
	
	<!-- 고객명 수정 완료 -->
	<update id="cusDAO.CusNmEditEnd">
		<![CDATA[UPDATE CS_Cus_Info SET CusNm = #CusNm# WHERE CusCd = #CusCd# AND DelFlag = 'N']]>
	</update>
	
	<!-- 고객명 수정에 따른 고객 계정 수정 완료 -->
	<update id="cusDAO.CusAccountEditEnd">
		<![CDATA[UPDATE CS_Out_Account SET CusId = #CusId#, EditDate = NOW(), EditPerSabun = #EditPerSabun# WHERE CusCd = #CusCd# AND DelFlag = 'N']]>
	</update>
	
	<!-- 고객명 수정에 따른 투자개요 세부내역 고객명 수정 완료 -->
	<update id="cusDAO.CusInSuInCusNmEditEnd">
		<![CDATA[UPDATE CS_Invest_Summary_InCus SET CusNm = #CusNm# WHERE CusCd = #CusCd# AND DelFlag = 'N']]>
	</update>
	
	<!-- 고객명 수정에 따른 투자개요 워런트 고객명 수정 완료 -->
	<update id="cusDAO.CusInSuWarCusNmEditEnd">
		<![CDATA[UPDATE CS_Invest_Summary_War SET CusNm = #CusNm# WHERE CusCd = #CusCd# AND DelFlag = 'N']]>
	</update>
	
	<!-- 고객 기본정보 수정 완료 -->
	<update id="cusDAO.CusBasicEditEnd">
		UPDATE CS_Cus_Info 
		SET CusType = #CusType#, CusCorType = #CusCorType#, CusRegNum = #CusRegNum#, CusCorRegNum = #CusCorRegNum#,
			CusOwnNm = #CusOwnNm#, CusOwnJumin = CONCAT(SUBSTRING(#CusOwnJumin#, 1, 8), REPLACE(SUBSTRING(#CusOwnJumin#, 9), SUBSTRING(#CusOwnJumin#, 9), '******')),
			CusTel = #CusTel#, CusPhone = #CusPhone#, CusFax = #CusFax#, CusEmail = #CusEmail#, CusPost = #CusPost#, CusAddr = #CusAddr#,
			CusStatus = #CusStatus#, CusStatusNm = #CusStatusNm#, CusStatusOrder = #CusStatusOrder#, CusSubStatus = #CusSubStatus#,
			CusTradeEndDate = #CusTradeEndDate#, CusAddInvestFlag = #CusAddInvestFlag#, CusManagerNm = #CusManagerNm#, CusManagerSabun = #CusManagerSabun#, CusInviteNm = #CusInviteNm#, CusInviteSabun = #CusInviteSabun#,
			CusMailingPerNm = #CusMailingPerNm#, CusMailingPerSabun = #CusMailingPerSabun#, CusEtc = #CusEtc#, CusOfficeNm = #CusOfficeNm#, CusOfficePosition = #CusOfficePosition#, CusOfficeTel = #CusOfficeTel#, CusOfficeEtc = #CusOfficeEtc#,
			EditDate = NOW(), EditPerSabun = #RegPerSabun#
		WHERE CusCd = #CusCd# AND DelFlag = 'N'
	</update>
	
	<!-- 고객 계정 사용여부 수정 완료 -->
	<update id="cusDAO.CusAccountUseFlagEditEnd">
		<![CDATA[UPDATE CS_Out_Account SET UseFlag = #UseFlag#, EditDate = NOW(), EditPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND DelFlag = 'N']]>
	</update>
	
	<!-- 고객정보 복사 완료(기본정보) -->
	<insert id="cusDAO.CusInfoCopy">
		INSERT INTO CS_Cus_Info (CusCd, CusNm, CusType, CusCorType, CusRegNum, CusCorRegNum, CusOwnNm, CusOwnJumin,
			CusTel, CusPhone, CusFax, CusEmail, CusPost, CusAddr, CusTradeEndDate, CusAddInvestFlag,
			CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun,	CusMailingPerNm, CusMailingPerSabun,
			CusEtc, CusOfficeNm, CusOfficePosition, CusOfficeTel, CusOfficeEtc)
		SELECT #CusCd#, #CusNm#, CusType, CusCorType, CusRegNum, CusCorRegNum, CusOwnNm, CusOwnJumin,
			CusTel, CusPhone, CusFax, CusEmail, CusPost, CusAddr, CusTradeEndDate, CusAddInvestFlag, 
			CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun, CusMailingPerNm, CusMailingPerSabun,
			CusEtc, CusOfficeNm, CusOfficePosition, CusOfficeTel, CusOfficeEtc FROM CS_Cus_Info WHERE CusCd = #CopyCusCd#
		ON DUPLICATE KEY UPDATE
			CusType = VALUES(CusType), CusCorType = VALUES(CusCorType), CusRegNum = VALUES(CusRegNum), CusCorRegNum = VALUES(CusCorRegNum),
			CusOwnNm = VALUES(CusOwnNm), CusOwnJumin = VALUES(CusOwnJumin), CusTel = VALUES(CusTel), CusPhone = VALUES(CusPhone), CusFax = VALUES(CusFax),
			CusEmail = VALUES(CusEmail), CusPost = VALUES(CusPost), CusAddr = VALUES(CusAddr),
			CusTradeEndDate = VALUES(CusTradeEndDate), CusAddInvestFlag = VALUES(CusAddInvestFlag), CusManagerNm = VALUES(CusManagerNm), CusManagerSabun = VALUES(CusManagerSabun),
			CusInviteNm = VALUES(CusInviteNm), CusInviteSabun = VALUES(CusInviteSabun), CusMailingPerNm = VALUES(CusMailingPerNm), CusMailingPerSabun = VALUES(CusMailingPerSabun),
			CusEtc = VALUES(CusEtc), CusOfficeNm = VALUES(CusOfficeNm), CusOfficePosition = VALUES(CusOfficePosition), CusOfficeTel = VALUES(CusOfficeTel), CusOfficeEtc = VALUES(CusOfficeEtc)
	</insert>
	
	<!-- 고객정보 복사 완료(담당자정보) -->
	<insert id="cusDAO.CusPerInfoCopy">
		INSERT INTO CS_Cus_Worker (CusCd, CusPerCd, CusPerNm, CusPerPosition, CusPerPhone, CusPerTel, CusPerEmail, CusMailingFlag,
			CusPerPost, CusPerAddr, CusPerEtc, RegDate, RegPerSabun, DelFlag)
		SELECT #CusCd#, LPAD(CusPerCd + (SELECT COUNT(*) FROM CS_Cus_Worker WHERE CusCd = #CusCd#), 12, 0),
			CusPerNm, CusPerPosition, CusPerPhone, CusPerTel, CusPerEmail, CusMailingFlag,
			CusPerPost, CusPerAddr, CusPerEtc, RegDate, RegPerSabun, DelFlag FROM CS_Cus_Worker WHERE CusCd = #CopyCusCd# AND DelFlag = 'N' GROUP BY CusPerCd;
	</insert>
																<!-- 	고객	 	-->
																
																<!-- 	공동 유치자	 	-->
	<!-- 유치자 리스트 받아오기 -->
	<select id="cusDAO.GetInvitePerList" resultClass="egovMap">
		SELECT DISTINCT CusInviteNm, CusInviteSabun FROM CS_Cus_Info WHERE CusInviteSabun IS NOT NULL AND CusInviteSabun != '' ORDER BY CusInviteNm
	</select>
	
	<!-- 유치자별 고객 리스트 받아오기 -->
	<select id="cusDAO.GetInviteCusList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun,
			TradeType, TradeStartDate, TradeCharge, TradeHopeMoney, TradeMoney, ROUND(TradeMoney * OutInviteRate / 100, 0) RealTradeMoney,
			OutInvitePerNm, OutInvitePerSabun, OutInviteRate, OutInviteReason FROM (
			SELECT a.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun,
				TradeType, TradeStartDate, TradeCharge, TradeHopeMoney, IFNULL(SUM(ISICBond), 0) TradeMoney,
				OutInvitePerNm, OutInvitePerSabun, OutInviteRate, OutInviteReason FROM (
					SELECT a.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun,
						TradeType, TradeStartDate, TradeCharge, TradeHopeMoney FROM CS_Cus_Info a, CS_Trade b
					WHERE a.CusCd = b.CusCd AND CusStatus IN ('2', '4', '6', '8') AND a.DelFlag = 'N' AND b.DelFlag = 'N') a
				LEFT OUTER JOIN
					(SELECT CusCd, CusInviteSabun OutInvitePerSabun, CusInviteNm OutInvitePerNm, 100 - (SELECT IFNULL(SUM(InviteRate), 0) 
						FROM CS_Cus_Invite WHERE CusCd = k.CusCd AND DelFlag = 'N') OutInviteRate, '' OutInviteReason
					FROM CS_Cus_Info k WHERE DelFlag ='N' AND CusStatus IN ('2', '4', '6', '8')
					UNION ALL
					SELECT CusCd, a.PerSabun OutInvitePerSabun, PerNm OutInvitePerNm, InviteRate OutInviteRate, InviteReason OutInviteReason
					FROM CS_Cus_Invite a, erp.ERP_Per b WHERE a.PerSabun = b.PerSabun AND a.DelFlag = 'N') b 
					ON a.CusCd = b.CusCd
				LEFT OUTER JOIN
					(SELECT CusCd, ISICBond FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b
						WHERE a.InSuCd = b.InSuCd AND b.DelFlag = 'N'
						<isNotEqual property="SearchSDate" compareValue="all">
						AND InSuNabDay BETWEEN #SearchSDate# AND #SearchEDate# AND ISICInMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#
						</isNotEqual>) c
					ON a.CusCd = c.CusCd
					WHERE 1 = 1
					<isNotEqual property="CusInviteSabun" compareValue="all">AND OutInvitePerSabun = #CusInviteSabun#</isNotEqual>
					<isNotEmpty property="CusStatus">AND CASE WHEN #CusStatus# = '2' THEN CusStatus IN ('2', '8') ELSE CusStatus = #CusStatus# END</isNotEmpty>
		GROUP BY CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, CusManagerNm, CusManagerSabun, CusInviteNm, CusInviteSabun,
		TradeType, TradeStartDate, TradeCharge, TradeHopeMoney, OutInvitePerNm, OutInvitePerSabun, OutInviteRate, OutInviteReason) d
		HAVING RealTradeMoney != 0
		<isEmpty property="OrderKey">ORDER BY OutInvitePerNm, CusStatusOrder, TradeType, CAST(RealTradeMoney AS UNSIGNED) DESC</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY OutInvitePerNm, CusStatusOrder, $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY OutInvitePerNm, CusStatusOrder, $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 외부협력자 리스트 받아오기 -->
	<select id="cusDAO.GetCollaboPerList" resultClass="egovMap">
		SELECT OutPerSabun CollaboPerSabun, OutPerNm CollaboPerNm FROM CS_Cus_OutPer WHERE DelFlag = 'N' ORDER BY OutPerNm
	</select>
	
	<!-- 외부협력자별 고객 리스트 받아오기 -->
	<select id="cusDAO.GetCollaboCusList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusNm, cus.CusCd, CusStatus, CusStatusNm, CusStatusOrder,
			CusManagerSabun, CusManagerNm, CusInviteNm, CusInviteSabun, CollaboPerSabun, CollaboPerNm,
			InvitePerSabun, InvitePerNm, InviteRate, InviteReason, TradeType, TradeStartDate, TradeCharge, TradeHopeMoney, TradeMoney
		FROM
			(SELECT CusNm, cus.CusCd, CusStatus, CusStatusNm, CusStatusOrder,
				CusManagerSabun, CusManagerNm, CusInviteNm, CusInviteSabun, TradeType, TradeStartDate, TradeCharge, TradeHopeMoney, TradeMoney
			FROM CS_Cus_Info cus,
			(SELECT main.CusCd, TradeType, TradeStartDate, TradeCharge, TradeHopeMoney, TradeMoney FROM CS_Trade main
			LEFT OUTER JOIN 
<!-- 			(SELECT CusCd, TradeCd, -->
<!-- 				SUM(TradeMoney) - (SELECT IFNULL(SUM(TradeMoney), 0) FROM CS_Trade_Money -->
<!-- 					WHERE CusCd = a.CusCd AND TradeMoneyFlag IN ('2', '4') AND DelFlag = 'N' AND TradeMoneyDate <![CDATA[<=]]> #SelDate#) TradeMoney -->
<!-- 			FROM CS_Trade_Money a WHERE TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N' AND TradeMoneyDate <![CDATA[<=]]> #SelDate# -->
<!-- 			GROUP BY CusCd) sub -->
			
			(SELECT CusCd, TradeCd,
				SUM(TradeMoney) - (SELECT IFNULL(SUM(TradeMoney), 0) FROM CS_Trade_Money
					WHERE CusCd = a.CusCd AND TradeMoneyFlag IN ('2', '4') AND DelFlag = 'N'
					<isNotEqual property="SearchSDate" compareValue="all">AND TradeMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#</isNotEqual>) TradeMoney
			FROM CS_Trade_Money a WHERE TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N'
				<isNotEqual property="SearchSDate" compareValue="all">AND TradeMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#</isNotEqual>
			GROUP BY CusCd) sub
			
			ON main.CusCd = sub.CusCd
			WHERE main.DelFlag = 'N') money
			WHERE cus.CusCd = money.CusCd AND CusStatus IN ('2', '4', '6', '8') AND cus.DelFlag = 'N') cus
				JOIN
			(SELECT CusCd, CollaboPerSabun, OutPerNm CollaboPerNm, CollaboReason
				FROM CS_Cus_Collabo a, CS_Cus_OutPer b
			WHERE CollaboPerSabun = OutPerSabun AND a.DelFlag = 'N' AND b.DelFlag = 'N') collabo
			ON cus.CusCd = collabo.CusCd
			LEFT OUTER JOIN
			(SELECT CusCd, GROUP_CONCAT(a.PerSabun ORDER BY PerNm) InvitePerSabun, GROUP_CONCAT(PerNm ORDER BY PerNm) InvitePerNm,
			    GROUP_CONCAT(InviteRate ORDER BY PerNm) InviteRate, GROUP_CONCAT(InviteReason ORDER BY PerNm) InviteReason
			FROM CS_Cus_Invite a, erp.ERP_Per b
			WHERE a.PerSabun = b.PerSabun AND a.DelFlag = 'N'
			GROUP BY CusCd) invite
			ON cus.CusCd = invite.CusCd
			WHERE TradeMoney != '' AND TradeMoney IS NOT NULL
			<isNotEqual property="CollaboPerSabun" compareValue="all">WHERE CollaboPerSabun = #CollaboPerSabun#</isNotEqual>
		<isEmpty property="OrderKey">ORDER BY CollaboPerNm, CusStatusOrder, TradeType, TradeMoney DESC</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY CollaboPerNm, CusStatusOrder, $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY CollaboPerNm, CusStatusOrder, $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 공동 유치자 등록/수정 완료 -->
	<insert id="cusDAO.CusInviteProcEnd" parameterClass="java.util.List">
		INSERT INTO CS_Cus_Invite (CusCd, PerSabun, InviteRate, InviteReason, RegDate, RegPerSabun, EditDate, EditPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
			(#[].CusCd#, #[].PerSabun#, #[].InviteRate#, #[].InviteReason#, NOW(), #[].RegPerSabun#, NULL, NULL, #[].DelFlag#)
		</iterate>
		</dynamic>
		ON DUPLICATE KEY UPDATE InviteRate = VALUES(InviteRate), InviteReason = VALUES(InviteReason), EditDate = NOW(), EditPerSabun = VALUES(RegPerSabun), DelFlag = VALUES(DelFlag)
	</insert>
	
	<!-- 공동 유치자 리스트 받아오기 -->
	<select id="cusDAO.GetCusInvitePerList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, PerSabun, (SELECT PerNm FROM erp.ERP_Per WHERE PerSabun = invite.PerSabun) PerNm,
			CASE WHEN InviteRate = 'X' THEN 0 ELSE InviteRate END InviteRate, InviteReason FROM CS_Cus_Invite invite
		WHERE CusCd = #CusCd# AND DelFlag = 'N' ORDER BY PerNm
	</select>
	
	<!-- 공동 유치자 삭제 완료 -->
	<update id="cusDAO.InviteDelEnd">
		UPDATE CS_Cus_Invite SET DelDate = NOW(), DelPerSabun = #RegPerSabun#, DelFlag ='Y' WHERE CusCd = #CusCd# AND PerSabun = #CusInviteSabun#
	</update>
																<!-- 	공동 유치자	 	-->
	
	
	<!-- 외부사람 사번 받아오기 -->
	<select id="cusDAO.GetOutSidePerSabun" resultClass="int">
		SELECT IFNULL(MAX(OutPerSabun) + 1, '1') OutPerSabun FROM CS_Cus_OutPer
	</select>
	
	<!-- 외부사람 리스트 받아오기 -->
	<select id="cusDAO.GetOutSidePerList" resultClass="egovMap">
		SELECT OutPerSabun, OutPerNm FROM CS_Cus_OutPer WHERE DelFlag = 'N' ORDER BY OutPerNm
	</select>
	
	<!-- 외부사람 정보 등록 완료 -->
	<insert id="cusDAO.OutSidePerAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Cus_OutPer (OutPerSabun, OutPerNm, RegDate, RegPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
			(#[].OutPerSabun#, #[].OutPerNm#, NOW(), #[].RegPerSabun#, #[].DelFlag#)
		</iterate>
		</dynamic>
	</insert>
																
																<!-- 	외부 협력자	 	-->
	<!-- 외부 협력자 등록/수정 완료 -->
	<insert id="cusDAO.CusCollaboProcEnd" parameterClass="java.util.List">
		INSERT INTO CS_Cus_Collabo (CusCd, CollaboPerSabun, CollaboReason, RegDate, RegPerSabun, EditDate, EditPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
			(#[].CusCd#, #[].CollaboPerSabun#, #[].CollaboReason#, NOW(), #[].RegPerSabun#, NULL, NULL, #[].DelFlag#)
		</iterate>
		</dynamic>
		ON DUPLICATE KEY UPDATE CollaboReason = VALUES(CollaboReason), EditDate = NOW(), EditPerSabun = VALUES(RegPerSabun), DelFlag = VALUES(DelFlag)
	</insert>
	
	<!-- 외부 협력자 리스트 받아오기 -->
	<select id="cusDAO.GetCusCollaboPerList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CollaboPerSabun, (SELECT OutPerNm FROM CS_Cus_OutPer WHERE OutPerSabun = CollaboPerSabun) PerNm, CollaboReason FROM CS_Cus_Collabo
			WHERE CusCd = #CusCd# AND DelFlag = 'N' ORDER BY PerNm
	</select>
	
	<!-- 외부 협력자 삭제 완료 -->
	<update id="cusDAO.CollaboDelEnd">
		UPDATE CS_Cus_Collabo SET DelDate = NOW(), DelPerSabun = #RegPerSabun#, DelFlag ='Y' WHERE CusCd = #CusCd# AND CollaboPerSabun = #CollaboPerSabun#
	</update>
																<!-- 	외부 협력자	 	-->
																
																<!-- 	연관 고객	-->
	<!-- 연관고객 순번 받아오기 -->
	<select id="cusDAO.GetConSeq" parameterClass="cusVO2" resultClass="int">
		<![CDATA[SELECT IFNULL(LPAD(MAX(ConSeq) + 1, 12, 0), '1') ConSeq FROM CS_Cus_ConCus WHERE CusCd = #CusCd#]]>
	</select>
	
	<!-- 연관고객 정보 등록 완료 -->
	<insert id="cusDAO.ConCusAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Cus_ConCus(CusCd, ConSeq, ConCusCd, ConCusStatus, RegDate, RegPerSabun, EditDate, EditPerSabun, DelFlag) VALUES
		<dynamic>
		<iterate conjunction=",">
		(#[].CusCd#, LPAD(#[].ConSeq#, 12, 0), #[].ConCusCd#, #[].ConCusStatus#, now(), #[].RegPerSabun#, NULL, NULL, 'N')
		</iterate>
		</dynamic>
		ON DUPLICATE KEY UPDATE ConCusCd = VALUES(ConCusCd), ConCusStatus = VALUES(ConCusStatus), EditDate = NOW(), EditPerSabun = VALUES(EditPerSabun)
	</insert>
	
	<!-- 연관 고객 정보 조회 -->
	<select id="cusDAO.GetConCusList" parameterClass="cusVO2" resultClass="egovMap">
		<isEqual property="EventFlag" compareValue="CusBoard">
			SELECT CusCd, ConCusCd, ConCusNm, CASE WHEN (ConCusStatus = 6 AND ConCusNm LIKE '%(일임외)%') OR ConCusStatus IN ('2', '4') THEN CusStatusNm ELSE ConCusNm END ConCusNmTmp, ConCusStatus, ConCusSubStatus, CusStatusNm, CusStatusOrder FROM (
		</isEqual>
		SELECT CusCd, ConCusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = con.ConCusCd) ConCusNm, ConCusStatus, (SELECT IFNULL(CusSubStatus, 0) FROM CS_Cus_Info WHERE CusCd = ConCusCd) ConCusSubStatus,
		<isNotEqual property="EventFlag" compareValue="CusBoard">
<!-- 			CASE ConCusStatus WHEN '1' THEN '잠재' WHEN '2' THEN '일임' WHEN '6' THEN '일임외' WHEN '3' THEN '기타' WHEN '4' THEN '매각' WHEN '7' THEN '공동투자' ELSE '해지' END CusStatusNm, -->
<!-- 			CASE ConCusStatus WHEN '1' THEN '3' WHEN '2' THEN '1' WHEN '3' THEN '4' WHEN '4' THEN '5' WHEN '5' THEN '6' WHEN '6' THEN '2' ELSE '7'  END CusStatusOrder -->
			CASE ConCusStatus WHEN '1' THEN '잠재' WHEN '2' THEN '일임' WHEN '3' THEN '기타' WHEN '4' THEN '매각' WHEN '5' THEN '해지' WHEN '6' THEN '일임외' WHEN '7' THEN '공동투자' ELSE '자문' END CusStatusNm,
			CASE ConCusStatus WHEN '1' THEN '4' WHEN '2' THEN '1' WHEN '3' THEN '5' WHEN '4' THEN '6' WHEN '5' THEN '7' WHEN '6' THEN '3' WHEN '7' THEN '8' ELSE '2'  END CusStatusOrder
		</isNotEqual>
		<isEqual property="EventFlag" compareValue="CusBoard">
<!-- 			CASE ConCusStatus WHEN '2' THEN '일임투자' WHEN '6' THEN '일반투자' ELSE '채권투자' END CusStatusNm, -->
<!-- 			CASE ConCusStatus WHEN '2' THEN '1' WHEN '6' THEN '2' ELSE '3' END CusStatusOrder -->
			CASE ConCusStatus WHEN '1' THEN '잠재' WHEN '2' THEN '일임' WHEN '3' THEN '기타' WHEN '4' THEN '매각' WHEN '5' THEN '해지' WHEN '6' THEN '일임외' WHEN '7' THEN '공동투자' ELSE '자문' END CusStatusNm,
			CASE ConCusStatus WHEN '1' THEN '4' WHEN '2' THEN '1' WHEN '3' THEN '5' WHEN '4' THEN '6' WHEN '5' THEN '7' WHEN '6' THEN '3' WHEN '7' THEN '8' ELSE '2'  END CusStatusOrder
		</isEqual>
		FROM CS_Cus_ConCus con WHERE CusCd = #CusCd# AND DelFlag = 'N'
		<isEqual property="EventFlag" compareValue="CusBoard">
		UNION ALL
		SELECT CusCd, CusCd ConCusCd, CusNm, CusStatus, IFNULL(CusSubStatus, 0) CusSubStatus,
<!-- 		CASE CusStatus WHEN '2' THEN '일임투자' WHEN '6' THEN '일반투자' ELSE '채권투자' END CusStatusNm, -->
<!-- 		CASE CusStatus WHEN '2' THEN '1' WHEN '6' THEN '2' ELSE '3' END CusStatusOrder -->
			CASE CusStatus WHEN '1' THEN '잠재' WHEN '2' THEN '일임' WHEN '3' THEN '기타' WHEN '4' THEN '매각' WHEN '5' THEN '해지' WHEN '6' THEN '일임외' WHEN '7' THEN '공동투자' ELSE '자문' END CusStatusNm,
			CASE CusStatus WHEN '1' THEN '4' WHEN '2' THEN '1' WHEN '3' THEN '5' WHEN '4' THEN '6' WHEN '5' THEN '7' WHEN '6' THEN '3' WHEN '7' THEN '8' ELSE '2'  END CusStatusOrder
		FROM CS_Cus_Info WHERE CusCd = #CusCd# AND DelFlag = 'N'
		</isEqual>
		<isEqual property="EventFlag" compareValue="CusBoard">) a WHERE ConCusSubStatus != '2'</isEqual>
		ORDER BY CusStatusOrder
	</select>
	
	<select id="cusDAO.GetConCusList2" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, ConCusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = con.ConCusCd) ConCusNm, ConCusStatus, (SELECT IFNULL(CusSubStatus, 0) FROM CS_Cus_Info WHERE CusCd = ConCusCd) ConCusSubStatus,
<!-- 			CASE ConCusStatus WHEN '1' THEN '잠재' WHEN '2' THEN '일임' WHEN '6' THEN '일임외' WHEN '3' THEN '기타' WHEN '4' THEN '매각' WHEN '7' THEN '공동투자' ELSE '해지' END CusStatusNm, -->
<!-- 			CASE ConCusStatus WHEN '1' THEN '3' WHEN '2' THEN '1' WHEN '3' THEN '4' WHEN '4' THEN '5' WHEN '5' THEN '6' WHEN '6' THEN '2' ELSE '7'  END CusStatusOrder -->
			CASE ConCusStatus WHEN '1' THEN '잠재' WHEN '2' THEN '일임' WHEN '3' THEN '기타' WHEN '4' THEN '매각' WHEN '5' THEN '해지' WHEN '6' THEN '일임외' WHEN '7' THEN '공동투자' ELSE '자문' END CusStatusNm,
			CASE ConCusStatus WHEN '1' THEN '4' WHEN '2' THEN '1' WHEN '3' THEN '5' WHEN '4' THEN '6' WHEN '5' THEN '7' WHEN '6' THEN '3' WHEN '7' THEN '8' ELSE '2'  END CusStatusOrder
		FROM CS_Cus_ConCus con WHERE CusCd = #CusCd# AND DelFlag = 'N'
		ORDER BY CusStatusOrder
	</select>
	
	<!-- 연관 고객 정보 삭제 리스트 받아오기 -->
	<select id="cusDAO.GetConCusDelList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, ConSeq, ConCusCd FROM CS_Cus_ConCus WHERE CusCd = #CusCd# AND DelFlag = 'N' 
		UNION ALL
		SELECT CusCd, ConSeq, ConCusCd FROM CS_Cus_ConCus WHERE CusCd IN (SELECT ConCusCd FROM CS_Cus_ConCus WHERE CusCd = #CusCd# AND DelFlag = 'N') AND DelFlag = 'N'
	</select>
	
	<!-- 연관 고객 정보 삭제 -->
	<insert id="cusDAO.ConCusDelEnd" parameterClass="java.util.List">
		INSERT INTO CS_Cus_ConCus(CusCd, ConSeq, DelDate, DelPerSabun, DelFlag) VALUES
		<dynamic>
		<iterate conjunction=",">
		(#[].CusCd#, LPAD(#[].ConSeq#, 12, 0), NOW(), #[].RegPerSabun#, 'Y')
		</iterate>
		</dynamic>
		ON DUPLICATE KEY UPDATE DelDate = NOW(), DelPerSabun = VALUES(DelPerSabun), DelFlag = 'Y'
	</insert>
																<!-- 	연관 고객	-->
																
																<!-- 	고객 관리	-->
	<!-- 유치자별 투자현황(타이틀) -->
	<select id="cusDAO.GetInvestStatusTitle" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder FROM (
			SELECT DISTINCT CusInviteNm, CusInviteSabun FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
				WHERE a.InSuCd = b.InSuCd AND b.CusCd = c.CusCd AND b.DelFlag = 'N' AND c.DelFlag = 'N' AND CusStatus IN ('2', '4', '6', '8')
				AND InSuNabDay BETWEEN #SearchSDate# AND #SearchEDate# AND ISICInMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#) a,
			(SELECT DISTINCT CASE WHEN CusStatus = '8' THEN '' ELSE CusStatus END CusStatus,
				CASE WHEN CusStatus = '8' THEN '소계' ELSE CusStatusNm END CusStatusNm, CASE WHEN CusStatus = '8' THEN CusStatus ELSE CusStatusOrder END CusStatusOrder
			FROM CS_Cus_Info WHERE DelFlag='N' AND CusInviteNm != '' AND CusStatus IN ('2', '4', '6', '8')) b
		ORDER BY CusInviteNm, CusStatusOrder
	</select>
	
	<!-- 유치자별 투자현황 -->
	<select id="cusDAO.GetInvestStatus" parameterClass="cusVO2" resultClass="egovMap">
		SELECT tt.InSuCd, InSuCom, InSuNm, InSuNabDay, tt.CusInviteNm, tt.CusInviteSabun, tt.CusStatus, tt.CusStatusNm, tt.CusStatusOrder,
			IFNULL(ISICBond, 0) ISICBond, IFNULL(RealISICBond, 0) RealISICBond FROM
			(SELECT InSuCd, InSuCom, InSuNm, InSuNabDay, CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder FROM
				(SELECT InSuCd, InSuCom, InSuNm, InSuNabDay FROM CS_Invest_Summary WHERE InSuNabDay BETWEEN #SearchSDate# AND #SearchEDate#) a, 
				(SELECT DISTINCT CusInviteNm, CusInviteSabun FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
					WHERE a.InSuCd = b.InSuCd AND b.CusCd = c.CusCd AND b.DelFlag = 'N' AND c.DelFlag = 'N' AND CusStatus IN ('2', '4', '6', '8')
					AND InSuNabDay BETWEEN #SearchSDate# AND #SearchEDate# AND ISICInMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#) b,
				(SELECT DISTINCT CusStatus, CusStatusNm, CusStatusOrder FROM CS_Cus_Info WHERE DelFlag='N' AND CusInviteNm != '' AND CusStatus IN ('2', '4', '6', '8')) c) tt
		
			LEFT OUTER JOIN
		
			(SELECT InSuCd, ROUND((SUM(ISICBond) * 0.00000001), 1) ISICBond, ROUND((SUM(RealISICBond) * 0.00000001), 1) RealISICBond, CusStatus, CusStatusNm, CusStatusOrder,
				OutInvitePerSabun CusInviteSabun, OutInvitePerNm CusInviteNm FROM
				(SELECT InSuCd, SUM(ISICBond) ISICBond, SUM(ISICBond) * OutInviteRate / 100 RealISICBond, CusInviteSabun, CusInviteNm, CusStatus, CusStatusNm, CusStatusOrder,
					OutInvitePerSabun, OutInvitePerNm, OutInviteRate, OutInviteReason FROM
					(SELECT CusCd, CusInviteSabun, CusInviteNm, CASE WHEN CusStatus IN ('2', '8') THEN '2' ELSE CusStatus END CusStatus,
						CASE WHEN CusStatus IN ('2', '8') THEN '일임' ELSE CusStatusNm END CusStatusNm, CASE WHEN CusStatus IN ('2', '8') THEN '1' ELSE CusStatusOrder END CusStatusOrder 
					FROM CS_Cus_Info WHERE DelFlag = 'N' AND CusStatus IN ('2', '4', '6', '8')) a
					LEFT OUTER JOIN
					(SELECT CusCd, CusInviteSabun OutInvitePerSabun, CusInviteNm OutInvitePerNm, 100 - (SELECT IFNULL(SUM(InviteRate), 0) 
							FROM CS_Cus_Invite WHERE CusCd = k.CusCd AND DelFlag = 'N' AND InviteRate != 'X') OutInviteRate, '' OutInviteReason
					FROM CS_Cus_Info k WHERE DelFlag ='N'
					UNION ALL
					SELECT CusCd, a.PerSabun OutInvitePerSabun, PerNm OutInvitePerNm, InviteRate OutInviteRate, InviteReason OutInviteReason
						FROM CS_Cus_Invite a, erp.ERP_Per b WHERE a.PerSabun = b.PerSabun AND a.DelFlag = 'N') b
					ON a.CusCd = b.CusCd
					LEFT OUTER JOIN
					(SELECT CusCd, a.InSuCd, ISICBond FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b
						WHERE a.InSuCd = b.InSuCd AND b.DelFlag = 'N'
						AND InSuNabDay BETWEEN #SearchSDate# AND #SearchEDate# AND ISICInMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#) c
					ON a.CusCd = c.CusCd
					WHERE InSuCd IS NOT NULL
				GROUP BY InSuCd, CusInviteSabun, CusInviteNm, CusStatus, CusStatusNm, CusStatusOrder,
				OutInvitePerSabun, OutInvitePerNm, OutInviteRate, OutInviteReason) d
			GROUP BY InSuCd, CusStatus, CusStatusNm, CusStatusOrder, OutInvitePerSabun, OutInvitePerNm
			) cc
			ON tt.InSuCd = cc.InSuCd AND tt.CusInviteSabun = cc.CusInviteSabun AND tt.CusStatus = cc.CusStatus
		
		UNION ALL
		
		SELECT 'total' InSuCd, '합계' InSuCom, '' InSuNm, '' InSuNabDay, tt.CusInviteNm, tt.CusInviteSabun, tt.CusStatus, tt.CusStatusNm, tt.CusStatusOrder,
			IFNULL(ISICBond, 0) ISICBond, IFNULL(RealISICBond, 0) RealISICBond FROM
			(SELECT CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder FROM
				(SELECT DISTINCT CusInviteNm, CusInviteSabun FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
					WHERE a.InSuCd = b.InSuCd AND b.CusCd = c.CusCd AND b.DelFlag = 'N' AND c.DelFlag = 'N' AND CusStatus IN ('2', '4', '6', '8')
					AND InSuNabDay BETWEEN #SearchSDate# AND #SearchEDate# AND ISICInMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#) a,
				(SELECT DISTINCT CusStatus, CusStatusNm, CusStatusOrder FROM CS_Cus_Info WHERE DelFlag='N' AND CusInviteNm != '' AND CusStatus IN ('2', '4', '6', '8')) b) tt
		
			LEFT OUTER JOIN
		
			(SELECT OutInvitePerNm CusInviteNm, OutInvitePerSabun CusInviteSabun,
				CusStatus, CusStatusNm, CusStatusOrder, ROUND((SUM(ISICBond) * 0.00000001), 1) ISICBond, ROUND((SUM(RealISICBond) * 0.00000001), 1) RealISICBond FROM
				(SELECT InSuCd, SUM(ISICBond) ISICBond, SUM(ISICBond) * OutInviteRate / 100 RealISICBond, CusInviteSabun, CusInviteNm, CusStatus, CusStatusNm, CusStatusOrder,
					OutInvitePerSabun, OutInvitePerNm, OutInviteRate, OutInviteReason FROM
					(SELECT CusCd, CusInviteSabun, CusInviteNm, CASE WHEN CusStatus IN ('2', '8') THEN '2' ELSE CusStatus END CusStatus,
						CASE WHEN CusStatus IN ('2', '8') THEN '일임' ELSE CusStatusNm END CusStatusNm, CASE WHEN CusStatus IN ('2', '8') THEN '1' ELSE CusStatusOrder END CusStatusOrder 
					FROM CS_Cus_Info WHERE DelFlag = 'N' AND CusStatus IN ('2', '4', '6', '8')) a
					LEFT OUTER JOIN
					(SELECT CusCd, CusInviteSabun OutInvitePerSabun, CusInviteNm OutInvitePerNm, 100 - (SELECT IFNULL(SUM(InviteRate), 0) 
						FROM CS_Cus_Invite WHERE CusCd = k.CusCd AND DelFlag = 'N' AND InviteRate != 'X') OutInviteRate, '' OutInviteReason
					FROM CS_Cus_Info k WHERE DelFlag ='N'
					UNION ALL
					SELECT CusCd, a.PerSabun OutInvitePerSabun, PerNm OutInvitePerNm, InviteRate OutInviteRate, InviteReason OutInviteReason
						FROM CS_Cus_Invite a, erp.ERP_Per b WHERE a.PerSabun = b.PerSabun AND a.DelFlag = 'N') b
					ON a.CusCd = b.CusCd
					LEFT OUTER JOIN
					(SELECT CusCd, a.InSuCd, ISICBond FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b
						WHERE a.InSuCd = b.InSuCd AND b.DelFlag = 'N'
					AND InSuNabDay BETWEEN #SearchSDate# AND #SearchEDate# AND ISICInMoneyDate BETWEEN #SearchSDate# AND #SearchEDate#) c
					ON a.CusCd = c.CusCd
					WHERE InSuCd IS NOT NULL
				GROUP BY InSuCd, CusInviteSabun, CusInviteNm, CusStatus, CusStatusNm, CusStatusOrder,
				OutInvitePerSabun, OutInvitePerNm, OutInviteRate, OutInviteReason) d
			GROUP BY CusStatus, CusStatusNm, CusStatusOrder, OutInvitePerSabun, OutInvitePerNm) cc
			ON tt.CusInviteSabun = cc.CusInviteSabun AND tt.CusStatus = cc.CusStatus
		ORDER BY InSuNabDay, InSuCd, CusInviteNm, CusStatusOrder
	</select>
																<!-- 	고객 관리	 	-->
																
																<!-- 	고객 담당자	 	-->
	<!-- 고객 담당자 리스트 -->
	<select id="cusDAO.GetCusPerList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = per.CusCd) CusNm, CusPerCd, CusPerNm,
			CASE WHEN CusPerPosition = 'X' THEN '' ELSE CusPerPosition END CusPerPosition, (SELECT PositionNm FROM erp.ERP_Per_Position WHERE PositionCd = per.CusPerPosition) CusPerPositionNm,
			CusPerPhone, CusPerTel, CusPerEmail, CusMailingFlag,
			CusPerPost, CusPerAddr, CusPerEtc, RegDate, RegPerSabun, DelFlag FROM (
		SELECT CusCd, CusPerCd, CusPerNm, CusPerPosition,
			CusPerPhone, CusPerTel, CusPerEmail, CusMailingFlag,
			CusPerPost, CusPerAddr, CusPerEtc, RegDate, RegPerSabun, DelFlag
		  FROM CS_Cus_Worker
		  WHERE DelFlag = 'N'
		  <isNotEmpty prepend="AND" property="CusPerCd"> CusPerCd = #CusPerCd#</isNotEmpty>
		 <isNotEqual property="EventFlag" compareValue="Mailing">AND CusCd = #CusCd#) per</isNotEqual>
		 <isEqual property="EventFlag" compareValue="Mailing">AND CusCd IN ($CusCd$) AND CusMailingFlag = '1') per</isEqual>
		 <isNotEmpty prepend="WHERE" property="searchKeyword"> CusPerNm LIKE '%$searchKeyword$%' OR CusPerPosition LIKE '%$searchKeyword$%' OR CusPerAddr LIKE '%$searchKeyword$%'</isNotEmpty>
	</select>
	
	<!-- 고객 담당자 등록 위한 담당자코드 받아오기 -->
	<select id="cusDAO.GetCusPerCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT IFNULL(LPAD(MAX(CusPerCd) + 1, 12, 0), '000000000001') CusPerCd FROM CS_Cus_Worker WHERE CusCd = #CusCd#]]>
	</select>
	
	<!-- 고객 담당자 등록 완료 -->
	<insert id="cusDAO.CusManagerAddEnd">
		INSERT INTO CS_Cus_Worker (CusCd, CusPerCd, CusPerNm, CusPerPosition, CusPerPhone, CusPerTel, CusPerEmail, CusMailingFlag,
			CusPerPost, CusPerAddr, CusPerEtc, RegDate, RegPerSabun, DelFlag)
		VALUES (#CusCd#, #CusPerCd#, #CusPerNm#, #CusPerPosition#, #CusPerPhone#, #CusPerTel#, #CusPerEmail#, #CusMailingFlag#,
				#CusPerPost#, #CusPerAddr#, #CusPerEtc#, now(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 고객 담당자 수정 완료 -->
	<update id="cusDAO.CusManagerEditEnd">
		UPDATE CS_Cus_Worker 
		SET CusPerPosition = #CusPerPosition#, CusPerPhone = #CusPerPhone#, CusPerTel = #CusPerTel#,
			CusPerEmail = #CusPerEmail#, CusMailingFlag = #CusMailingFlag#, CusPerPost = #CusPerPost#, CusPerAddr = #CusPerAddr#,
			CusPerEtc = #CusPerEtc#, EditDate = NOW(), EditPerSabun = #RegPerSabun#, CusPerNm = #CusPerNm#
		WHERE CusCd = #CusCd# AND CusPerCd = #CusPerCd# AND DelFlag = 'N'
	</update>
	
	<!-- 고객 담당자 삭제완료 -->
	<update id="cusDAO.CusManagerDelEnd">
		<![CDATA[UPDATE CS_Cus_Worker SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND CusPerCd = #CusPerCd# AND DelFlag = 'N']]>
	</update>
																<!-- 	고객 담당자	 	-->
																
																<!-- 	계약정보	 	-->
	<!-- 계약 리스트 받아오기 -->
	<select id="cusDAO.GetCusTradeList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CusNm, CusStatus, TradeCd, TradeType, FORMAT(TradeQuarter, 0) TradeQuarter, 
			TradeFirstDate, TradeStartDate, TradeStartPeriod, TradeEndPeriod,
			TradeCharge, TradeHopeMoney, TradeSecAccount, TradeCMAAccount,
			TradeHost, CASE TradeHost WHEN 'synergy' THEN '시너지' WHEN 'spot' THEN '지점' WHEN 'direct' THEN '직접' ELSE '-' END TradeHostNm,
			TradeSpot, CASE TradeSpot WHEN 'spot1' THEN '동래' WHEN 'spot2' THEN '서면' WHEN 'spot3' THEN '연산동' WHEN 'etc' THEN '기타' ELSE '-' END TradeSpotNm,
			TradeDocFlag, ConfirmFlag, IDCardFlag, TradeMoney, TradeMoneyDate, CusTradeETC, RegDate, RegPerSabun, DelFlag FROM (
			SELECT a.CusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = a.CusCd) CusNm,
				(SELECT CusStatus FROM CS_Cus_Info WHERE CusCd = a.CusCd) CusStatus, a.TradeCd, TradeType, TradeQuarter,
				TradeFirstDate, TradeStartDate, TradeStartPeriod, TradeEndPeriod,
				TradeCharge, FORMAT(TradeHopeMoney, 0) TradeHopeMoney,
				CAST(AES_DECRYPT(UNHEX(TradeSecAccount), 'enc-key') AS CHAR) TradeSecAccount, CAST(AES_DECRYPT(UNHEX(TradeCMAAccount), 'enc-key') AS CHAR) TradeCMAAccount, TradeHost, TradeSpot,
				TradeDocFlag, ConfirmFlag, IDCardFlag, FORMAT(TradeMoney, 0) TradeMoney, TradeMoneyDate, CusTradeETC,
				RegDate, RegPerSabun, DelFlag FROM CS_Trade a
			LEFT OUTER JOIN
				(SELECT inm.CusCd, inm.TradeCd, IFNULL(inm.TradeMoney, 0) - IFNULL(outm.TradeMoney, 0) TradeMoney, inm.TradeMoneyDate FROM
					(SELECT CusCd, TradeCd, SUM(TradeMoney) TradeMoney, MAX(TradeMoneyDate) TradeMoneyDate
						FROM CS_Trade_Money WHERE CusCd = #CusCd# AND DelFlag = 'N' AND TradeMoneyFlag IN ('1', '3', '5') GROUP BY TradeCd) inm
						LEFT OUTER JOIN
					(SELECT CusCd, TradeCd, SUM(TradeMoney) TradeMoney, MAX(TradeMoneyDate) TradeMoneyDate
						FROM CS_Trade_Money WHERE CusCd = #CusCd# AND DelFlag = 'N' AND TradeMoneyFlag IN ('2', '4') GROUP BY TradeCd) outm
					ON inm.CusCd = outm.CusCd AND inm.TradeCd = outm.TradeCd
				) money
				ON a.CusCd = money.CusCd AND a.TradeCd = money.TradeCd
			WHERE a.CusCd = #CusCd# AND a.DelFlag = 'N'
		) b
	</select>
	
	<!-- 계약 파일 리스트 받아오기 -->
	<select id="cusDAO.GetCusTradeFileList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, TradeCd, FileSeq, FileNm, FileUpNm, REPLACE(FilePath, '\\', '\\\\') FilePath, FileSize, FileOrder, RegDate FROM CS_Trade_File WHERE CusCd = #CusCd# AND DelFlag = 'N' 
		ORDER BY RegDate, FileOrder
	</select>
	
	<!-- 계약 등록을 위한 계약코드 받아오기 -->
	<select id="cusDAO.GetTradeCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT IFNULL(LPAD(MAX(TradeCd) + 1, 12, 0), '000000000001') TradeCd FROM CS_Trade WHERE CusCd = #CusCd#]]>
	</select>
	
	<!-- 계약 등록 완료 -->
	<insert id="cusDAO.CusTradeAddEnd">
		INSERT INTO CS_Trade (CusCd, TradeCd, TradeType, TradeQuarter, TradeFirstDate, TradeStartDate, TradeStartPeriod, TradeEndPeriod,
	     	 TradeCharge, TradeHopeMoney, TradeSecAccount, TradeCMAAccount, TradeHost, TradeSpot, TradeDocFlag, ConfirmFlag, IDCardFlag, CusTradeETC, RegDate, RegPerSabun, DelFlag)
		VALUES (#CusCd#, #TradeCd#, #TradeType#, REPLACE(#TradeQuarter#, ',', ''), #TradeFirstDate#, #TradeStartDate#, #TradeStartPeriod#, #TradeEndPeriod#,
		        #TradeCharge#, REPLACE(#TradeHopeMoney#, ',', ''), HEX(AES_ENCRYPT(#TradeSecAccount#, 'enc-key')), HEX(AES_ENCRYPT(#TradeCMAAccount#, 'enc-key')), #TradeHost#, #TradeSpot#, #TradeDocFlag#, #ConfirmFlag#, #IDCardFlag#, #CusTradeETC#, now(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 계약 파일 코드 받아오기 -->
	<select id="cusDAO.GetCusTradeFileCd" parameterClass="cusVO2" resultClass="int">
		<![CDATA[SELECT IFNULL(MAX(FileSeq) + 1, '1') FileSeq FROM CS_Trade_File WHERE CusCd = #CusCd# AND TradeCd = #TradeCd#]]>
	</select>
	
	<!-- 계약 파일 등록 완료 -->
	<insert id="cusDAO.CusTradeFileAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Trade_File (CusCd, TradeCd, FileSeq, FileNm, FileUpNm, FilePath, FileSize, FileOrder, RegDate, RegPerSabun, DelFlag) VALUES
		<dynamic>
		<iterate conjunction=",">(#[].CusCd#, #[].TradeCd#, LPAD(#[].FileSeq#, 12, 0), #[].FileNm#, #[].FileUpNm#, #[].FilePath#, #[].FileSize#, #[].FileOrder#, now(), #[].RegPerSabun#, 'N')</iterate>
		</dynamic>
	</insert>
	
	<!-- 계약 수정 완료 -->
	<update id="cusDAO.CusTradeEditEnd">
		UPDATE CS_Trade 
		SET TradeType = #TradeType#, TradeQuarter = REPLACE(#TradeQuarter#, ',', ''), TradeFirstDate = #TradeFirstDate#,
			TradeStartDate = #TradeStartDate#, TradeStartPeriod = #TradeStartPeriod#, TradeEndPeriod = #TradeEndPeriod#,
			TradeCharge = #TradeCharge#, TradeHopeMoney = REPLACE(#TradeHopeMoney#, ',', ''),
			TradeSecAccount = HEX(AES_ENCRYPT(#TradeSecAccount#, 'enc-key')), TradeCMAAccount = HEX(AES_ENCRYPT(#TradeCMAAccount#, 'enc-key')),
			TradeHost = #TradeHost#, TradeSpot = #TradeSpot#,
			TradeDocFlag = #TradeDocFlag#, ConfirmFlag = #ConfirmFlag#, IDCardFlag = #IDCardFlag#, CusTradeETC = #CusTradeETC#,
			EditDate = NOW(), EditPerSabun = #RegPerSabun#
		WHERE CusCd = #CusCd# AND TradeCd = #TradeCd# AND DelFlag = 'N'
	</update>
	
	<!-- 종목별 매매주체 관리 -->
	<insert id="cusDAO.CateTradeHostAddEnd">
		INSERT INTO CS_Trade_Host (CusCd, TradeCd, CateCd, TradeHost, RegDate, RegPerSabun, DelFlag)
			VALUES (#CusCd#, #TradeCd#, #CateCd#, #TradeHost#, NOW(), #RegPerSabun#, 'N')
	</insert>
	
	<update id="cusDAO.CateTradeHostEditEnd">
		UPDATE CS_Trade SET TradeHost = #TradeHost#, EditDate = NOW(), EditPerSabun = #RegPerSabun# 
			WHERE CusCd = #CusCd# AND TradeCd = #TradeCd#
	</update>
	
	<update id="cusDAO.CateTradeHostDelEnd">
		UPDATE CS_Trade_Host SET DelDate = NOW(), DelPerSabun = #RegPerSabun#, DelFlag = 'Y'
			WHERE HostSeq = #HostSeq#
	</update>
	
	
	
	<!-- 계약 삭제 완료 -->
	<update id="cusDAO.CusTradeDelEnd">
		<![CDATA[UPDATE CS_Trade SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND TradeCd = #TradeCd# AND DelFlag = 'N']]>
	</update>
	
	<!-- 계약 파일 일괄 삭제 완료 -->
	<update id="cusDAO.CusTradeFileAllDelEnd">
		<![CDATA[UPDATE CS_Trade_File SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND TradeCd = #TradeCd#]]>
	</update>
	
	<!-- 계약 파일 삭제 완료 -->
	<update id="cusDAO.CusTradeFileDelEnd">
		<![CDATA[UPDATE CS_Trade_File SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND TradeCd = #TradeCd# AND FileSeq = #FileSeq#]]>
	</update>
																<!-- 	계약정보	 	-->
																
																<!-- 	계약금	 	-->
	<!-- 계약금 리스트 -->
	<select id="cusDAO.GetCusTradeMoneyList"  parameterClass="cusVO2" resultClass="egovMap">
<!-- 		기존쿼리 -->
<!-- 		SELECT CusCd, TradeCd, TradeMoneyCd, -->
<!-- 		TradeMoneyFlag, FORMAT(TradeMoney, 0) TradeMoney, TradeMoneyDate, -->
<!-- 		RegDate, RegPerSabun, DelFlag FROM CS_Trade_Money -->
<!-- 		WHERE CusCd = #CusCd# AND TradeCd = #TradeCd# AND DelFlag = 'N' -->
<!-- 		기간별은 입금/출금 건별은 투자/정산 2014.12.03 -->
		SELECT a.CusCd, a.TradeCd, TradeType, TradeMoneyCd, TradeMoneyFlag,
		    CASE TradeType WHEN '1'
				THEN CASE TradeMoneyFlag WHEN '1' THEN '입금' WHEN '2' THEN '출금' WHEN '5' THEN '정산조정' ELSE '갱신' END
		        ELSE CASE TradeMoneyFlag WHEN '1' THEN '투자' WHEN '2' THEN '정산' WHEN '5' THEN '정산조정' ELSE '갱신' END
		    END MoneyNm,
		    CASE WHEN TradeMoneyFlag IN ('1', '3') THEN 'FF0000' WHEN TradeMoneyFlag IN ('2', '4') THEN '0000FF' ELSE 'FF0000' END MoneyColor,
		    FORMAT(TradeMoney, 0) TradeMoney, TradeMoneyDate
		FROM CS_Trade a, CS_Trade_Money b
		WHERE a.CusCd = #CusCd# AND a.TradeCd = #TradeCd# AND a.DelFlag = 'N' AND a.CusCd = b.CusCd AND a.TradeCd = b.TradeCd AND b.DelFlag = 'N'
		<isEmpty property="OrderKey">ORDER BY TradeMoneyDate DESC, TradeMoneyFlag</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 계약금 등록을 위한 계약금 코드 받아오기 -->
	<select id="cusDAO.GetTradeMoneyCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT IFNULL(LPAD(MAX(TradeMoneyCd) + 1, 12, 0), '000000000001') TradeMoneyCd FROM CS_Trade_Money WHERE CusCd = #CusCd# AND TradeCd = #TradeCd#]]>
	</select>
	
	<!-- 계약금 등록 완료 -->
	<insert id="cusDAO.TradeMoneyAddEnd">
		INSERT INTO CS_Trade_Money (CusCd, TradeCd, TradeMoneyCd, TradeMoneyFlag, TradeMoney, TradeMoneyDate, InSuCd, ISICCd, RegDate, RegPerSabun, DelFlag)
		VALUES (#CusCd#, #TradeCd#, #TradeMoneyCd#, #TradeMoneyFlag#, REPLACE(#TradeMoney#, ',', ''), #TradeMoneyDate#, #InSuCd#, LPAD(#ISICCd#, 12, 0), now(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 계약금 수정 완료 -->
	<update id="cusDAO.TradeMoneyEditEnd">
		UPDATE CS_Trade_Money
		SET TradeMoneyFlag = #TradeMoneyFlag#, TradeMoney = REPLACE(#TradeMoney#, ',', ''), TradeMoneyDate = #TradeMoneyDate#, EditDate = NOW(), EditPerSabun = #RegPerSabun#
		WHERE CusCd = #CusCd# AND TradeCd = #TradeCd# AND TradeMoneyCd = #TradeMoneyCd#
	</update>
	
	<!-- 계약금 삭제 완료 -->
	<update id="cusDAO.TradeMoneyDelEnd">
		<![CDATA[UPDATE CS_Trade_Money SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND TradeCd = #TradeCd# AND TradeMoneyCd = #TradeMoneyCd#]]>
	</update>
	
	<!-- 계약금 해당일에 예수금 등록여부 받아오기 -->
	<select id="cusDAO.GetTradeMoneyDateInCashDate" parameterClass="cusVO2" resultClass="int">
		SELECT COUNT(*) Cnt FROM CS_Invest_Status WHERE CusCd = #CusCd# AND CateCd = 'Cash' AND InvestDate = #InvestDate# AND DelFlag = 'N'
	</select>
	
	<!-- 계약금 해당일에 예수금 미등록일시 가장 최근 예수금 받아오기 -->
	<select id="cusDAO.GetLastCashMoney" parameterClass="cusVO2" resultClass="String">
		SELECT CASE InvestTradeMoney WHEN '-' THEN '0' WHEN '' THEN '0' ELSE IFNULL(InvestTradeMoney, 0) END InvestTradeMoney
		FROM CS_Invest_Status WHERE CusCd = LPAD(#CusCd#, 12, 0) AND CateCd = 'Cash' AND DelFlag = 'N' 
		AND InvestDate = (SELECT MAX(InvestDate) FROM CS_Invest_Status WHERE CusCd = LPAD(#CusCd#, 12, 0) AND CateCd = 'Cash' AND InvestDate <![CDATA[<=]]> #InvestDate# AND DelFlag = 'N')
	</select>
	
	<!-- 계약금 변경에 따른 예수금 변경 -->
	<update id="cusDAO.TradeMoneySetCashEditEnd">
		UPDATE CS_Invest_Status
		<isEqual property="TradeMoneyFlag" compareValue="1">
			<isEqual property="EventFlag" compareValue="Add">SET InvestTradeMoney = InvestTradeMoney + REPLACE(#TradeMoney#, ',', '')</isEqual>
			<isEqual property="EventFlag" compareValue="Del">SET InvestTradeMoney = InvestTradeMoney - REPLACE(#TradeMoney#, ',', '')</isEqual>
		</isEqual>
		<isEqual property="TradeMoneyFlag" compareValue="3">
			<isEqual property="EventFlag" compareValue="Add">SET InvestTradeMoney = InvestTradeMoney + REPLACE(#TradeMoney#, ',', '')</isEqual>
			<isEqual property="EventFlag" compareValue="Del">SET InvestTradeMoney = InvestTradeMoney - REPLACE(#TradeMoney#, ',', '')</isEqual>
		</isEqual>
		<isEqual property="TradeMoneyFlag" compareValue="2">
			<isEqual property="EventFlag" compareValue="Add">SET InvestTradeMoney = InvestTradeMoney - REPLACE(#TradeMoney#, ',', '')</isEqual>
			<isEqual property="EventFlag" compareValue="Del">SET InvestTradeMoney = InvestTradeMoney + REPLACE(#TradeMoney#, ',', '')</isEqual>
		</isEqual>
		<isEqual property="TradeMoneyFlag" compareValue="4">
			<isEqual property="EventFlag" compareValue="Add">SET InvestTradeMoney = InvestTradeMoney - REPLACE(#TradeMoney#, ',', '')</isEqual>
			<isEqual property="EventFlag" compareValue="Del">SET InvestTradeMoney = InvestTradeMoney + REPLACE(#TradeMoney#, ',', '')</isEqual>
		</isEqual>
		, EditDate = NOW(), EditPerSabun = #RegPerSabun#
		WHERE CusCd = #CusCd# AND CateCd = 'Cash' AND DelFlag = 'N'
		AND InvestDate <![CDATA[>=]]> #SearchSDate# AND InvestDate <![CDATA[<=]]> #SearchEDate#
	</update>
																<!-- 	계약금	 	-->
																
																<!-- 	매매	 	-->
	<!-- 매매 정보 리스트 -->
	<select id="cusDAO.GetInvestTradeList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, TradeType, InSuCd, ISICCd, InSuCom, 
			CASE WHEN CusCd IN ('000000000032', '000000000033') THEN (SELECT CusNm FROM CS_Invest_Summary_InCus WHERE InSuCd = data.InSuCd AND ISICCd = data.ISICCd AND DelFlag = 'N') END ConCusNm, 
			CateCd, CateNm, CateType, SubCateCd, ApplyFlag, FORMAT(InCnt, 0) InCnt, FORMAT(OutCnt, 0) OutCnt,
			
			
			(InCnt - OutCnt) HaveCnt,
			
<!-- 			FORMAT((InCnt - OutCnt), 0) HaveCnt, -->
		    CASE WHEN ProcType IN ('', '사모투자입력', '이자등록', '고객풋행사', '리픽싱', '행사', '대용납입', '전환', '주식배당') THEN InvestType ELSE REPLACE(ProcType, '등록', '') END InvestType,
		    CASE WHEN ProcType IN ('', '사모투자입력', '고객풋행사') THEN (CASE InvestType WHEN '1' THEN '매수' ELSE '매도' END) ELSE REPLACE(ProcType, '등록', '') END InvestTypeNm, ProcType,
		    InvestCd, FORMAT(InvestCnt, 0) InvestCnt,
		    FORMAT(InvestUnitPrice, 0) InvestUnitPrice, FORMAT(InvestTradeMoney, 0) InvestTradeMoney, FORMAT(OddlotMoney, 0) OddlotMoney,
		    FORMAT(InvestCharge, 0) InvestCharge, FORMAT(InvestTax, 0) InvestTax, InvestDate, FORMAT(InvestCalcuMoney, 0) InvestCalcuMoney,
		    CAST(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 7 DAY), '%Y-%m-%d') AS CHAR (10)) SearchSDate,
        	CAST( DATE_FORMAT( NOW(),'%Y-%m-%d' ) AS CHAR(10)) SearchEDate, IzaComment, RegDate
		FROM
		    (SELECT cusin.CusCd, cus.CusNm, cus.CusStatus, CusStatusNm, CusStatusOrder, TradeType,
		    	cusin.InSuCd, cusin.ISICCd, '' InSuCom, cusin.CateCd, CateNm, CateType, SubCateCd,
		            (SELECT ApplyFlag FROM CS_Invest_Tmp WHERE CusCd = cusin.CusCd AND CateCd = cusin.CateCd AND InvestCd = cusin.InvestCd) ApplyFlag,
		            IFNULL((SELECT SUM(InvestCnt) InvestCnt FROM CS_Invest_Status
						WHERE CusCd = cusin.CusCd AND CateCd = cusin.CateCd AND DelFlag = 'N' AND InvestType = '1'
						GROUP BY CateCd), 0) InCnt,
					
					
					CASE WHEN cus.CusCd = '000000000181' AND cate.CateCd = 'A011160_85CY' THEN
					CEIL(IFNULL((SELECT SUM(InvestCnt) InvestCnt FROM CS_Invest_Status
						WHERE CusCd = cusin.CusCd AND CateCd = cusin.CateCd AND DelFlag = 'N' AND InvestType = '2'
						GROUP BY CateCd), 0))
					ELSE CEIL(IFNULL((SELECT SUM(InvestCnt) InvestCnt FROM CS_Invest_Status
						WHERE CusCd = cusin.CusCd AND CateCd = cusin.CateCd AND DelFlag = 'N' AND InvestType = '2'
						GROUP BY CateCd), 0)) END OutCnt,
					
<!-- 					CEIL(IFNULL((SELECT SUM(InvestCnt) InvestCnt FROM CS_Invest_Status -->
<!-- 						WHERE CusCd = cusin.CusCd AND CateCd = cusin.CateCd AND DelFlag = 'N' AND InvestType = '2' -->
<!-- 						GROUP BY CateCd), 0)) OutCnt, -->
		            InvestType, InvestCd, IFNULL(InvestCnt, 0) InvestCnt,
		            IFNULL(InvestUnitPrice, 0) InvestUnitPrice, IFNULL(InvestTradeMoney, 0) InvestTradeMoney, IFNULL(OddlotMoney, 0) OddlotMoney,
		            IFNULL(InvestCharge, 0) InvestCharge, IFNULL(InvestTax, 0) InvestTax, InvestDate, IFNULL(InvestCalcuMoney, 0) InvestCalcuMoney, IFNULL(ProcType, '') ProcType, '' IzaComment, cusin.RegDate
		    FROM CS_Invest_Status cusin, CS_Cate cate, CS_Cus_Info cus, CS_Trade d
		    WHERE cusin.DelFlag = 'N' AND cusin.CateCd = cate.CateCd AND CateType = '1' AND cusin.CusCd = cus.CusCd AND cus.DelFlag = 'N'
		    	AND cus.CusCd = d.CusCd AND d.DelFlag = 'N'
		    <isNotEmpty property="CusCd">AND cusin.CusCd = #CusCd#</isNotEmpty>
		    <isNotEmpty property="CateCd">AND cusin.CateCd = #CateCd#</isNotEmpty>
		    <!-- 2014-02-05 다시 불러오기로 함<isEqual property="EventFlag" compareValue="Report"> AND SubCateCd != '7'</isEqual> -->
		    
		    <!-- 2015.04.28 고객별 상세보기 이벤트 -->
		    <isNotEqual property="NewWinFlag" compareValue="Y">
			    <isEmpty property="SearchSDate">
			    	<isEmpty property="SearchEDate">
			    		AND InvestDate BETWEEN CAST(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 1 MONTH), '%Y-%m-%d') AS CHAR (10)) AND CAST( DATE_FORMAT( NOW(),'%Y-%m-%d' ) AS CHAR(10))
			    	</isEmpty>
			    </isEmpty>
			    <isNotEmpty property="SearchSDate">
			    	<isNotEmpty property="SearchEDate">AND InvestDate BETWEEN #SearchSDate# AND #SearchEDate#</isNotEmpty>
			    </isNotEmpty>
		    </isNotEqual>
		    
		    UNION ALL
			SELECT CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, (SELECT TradeType FROM CS_Trade WHERE CusCd = cc.CusCd AND DelFlag = 'N'), InSuCd, ISICCd, InSuCom, BondCateCd, CateNm, CateType, SubCateCd,
			    '' ApplyFlag, '' InCnt, '' OutCnt, '3' InvestType, '' InvestCd, '' InvestCnt,
<!-- 			    '' InvestUintPrice, CASE InSuCd WHEN '000000000001' THEN '' ELSE ((InCnt - OutCnt) * UnitPrice * InSuSurfaceRate * InSuSurfaceDay) / 12 END InvestTradeMoney, '' OddlotMoney, -->
<!-- 			    '' InvestCharge, CASE InSuCd WHEN '000000000001' THEN '' ELSE ((((InCnt - OutCnt) * UnitPrice * InSuSurfaceRate * InSuSurfaceDay) / 12) - InvestCalcuMoney) END InvestTax, -->
			    
			    
			    '' InvestUintPrice, InvestTradeMoney, '' OddlotMoney,
    			'' InvestCharge, InvestTax,
			    
			    InvestDate, InvestCalcuMoney, '이자등록' ProcType, CONCAT((InSuSurfaceRate * 100) / (12 / InSuSurfaceDay), '%') IzaComment, RegDate
			FROM
			    (SELECT CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, InSuCd, ISICCd, InSuCom, BondCateCd, CateNm, CateType, SubCateCd,
<!-- 			            InCnt, OutCnt, -->
<!-- 			            (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = bb.BondCateCd AND PriceDate = UintPriceDate) UnitPrice, -->
			            
			            
			            InvestTradeMoney, InvestTax,
			            
			            InvestDate, InvestCalcuMoney, InSuSurfaceRate, InSuSurfaceDay, RegDate
			    FROM
			        (SELECT a.CusCd, a.CusNm, CusStatus, CusStatusNm, CusStatusOrder, a.InSuCd, a.ISICCd, InSuCom, b.BondCateCd, e.CateNm, e.CateType, e.SubCateCd,
<!-- 			            (SELECT IFNULL(SUM(InvestCnt), 0) FROM CS_Invest_Status WHERE CusCd = a.CusCd -->
<!-- 			            	AND CateCd = b.BondCateCd AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<]]> c.ISICRealIzaDay) InCnt, -->
<!-- 			            (SELECT IFNULL(SUM(InvestCnt), 0) FROM CS_Invest_Status WHERE CusCd = a.CusCd -->
<!-- 			            	AND CateCd = b.BondCateCd AND InvestType = '2' AND DelFlag = 'N' AND InvestDate <![CDATA[<]]> c.ISICRealIzaDay) OutCnt, -->
<!-- 			            (SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE CateCd = b.BondCateCd AND PriceDate <![CDATA[<]]> c.ISICRealIzaDay) UintPriceDate, -->
			            
			            c.InvestTradeMoney, c.InvestTax,
			            
			            c.ISICRealIzaDay InvestDate, c.ISICRealIza InvestCalcuMoney,
			            (REPLACE(b.InSuSurfaceRate, '%', '') / 100) InSuSurfaceRate, b.InSuSurfaceDay, c.RegDate
			    FROM
			        CS_Invest_Summary_InCus a, CS_Invest_Summary b, CS_Invest_Summary_InIza c, CS_Cus_Info d, CS_Cate e
			    WHERE a.InSuCd = b.InSuCd AND a.InSuCd = c.InSuCd AND a.ISICCd = c.ISICCd
			            AND a.CusCd = c.CusCd AND a.CusCd = d.CusCd AND b.BondCateCd = e.CateCd
<!-- 			            AND a.DelFlag = 'N' AND b.DelFlag = 'N' AND c.DelFlag = 'N' AND d.DelFlag = 'N' AND e.DelFlag = 'N' -->
			            AND a.DelFlag = 'N' AND c.DelFlag = 'N' AND d.DelFlag = 'N'
            <isNotEmpty property="CusCd">AND a.CusCd = #CusCd#</isNotEmpty>
			<isNotEmpty property="CateCd">AND b.BondCateCd = #CateCd#</isNotEmpty>
			<isEmpty property="SearchSDate">
				<isEmpty property="SearchEDate">
					AND c.ISICRealIzaDay BETWEEN CAST(DATE_FORMAT(DATE_ADD(NOW(), INTERVAL - 1 MONTH), '%Y-%m-%d') AS CHAR (10)) AND CAST( DATE_FORMAT( NOW(),'%Y-%m-%d' ) AS CHAR(10))
				</isEmpty>
			</isEmpty>
			<isNotEmpty property="SearchSDate">
				<isNotEmpty property="SearchEDate">AND c.ISICRealIzaDay BETWEEN #SearchSDate# AND #SearchEDate#</isNotEmpty>
			</isNotEmpty>
			) bb) cc
		    ) data
		    WHERE 1 = 1
		    <isNotEqual property="InvestType" compareValue="All">
		    	<isNotEqual property="InvestType" compareValue="3">AND InvestType = #InvestType#</isNotEqual>
		    	<isEqual property="InvestType" compareValue="3">AND InvestType = #InvestType# OR ProcType = '이자등록'</isEqual>
		    </isNotEqual>
		    <isNotEmpty prepend="AND" property="searchKeyword"> (CusNm LIKE '%$searchKeyword$%' OR CateNm LIKE '%$searchKeyword$%')</isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY InvestDate DESC, RegDate, CusNm, InvestType DESC, CateNm</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
																<!-- 	매매	 	-->
																
																<!-- 	유가증권	 	-->
	<!-- 유가증권 조회를 위한 고객&종목 선택페이지 -->
	<select id="cusDAO.GetInvestList_SelList" parameterClass="cusVO2" resultClass="egovMap">
		<isEqual property="EventFlag" compareValue="Cus">
			SELECT 'Cus' Type, CusCd Cd, CusNm Nm, CusStatus Status FROM CS_Cus_Info WHERE CusStatus != '5' AND DelFlag = 'N'
			<isEmpty property="CusStatus">
				<isNotEmpty property="EventType">
					AND CusStatus IN ($EventType$)
				</isNotEmpty>
			</isEmpty>
			<isNotEmpty property="CusStatus">
				AND CusStatus = #CusStatus#
				<isNotEmpty property="CusSubStatus"><isNotEqual property="CusSubStatus" compareValue="0">
					AND CusSubStatus = #CusSubStatus#
				</isNotEqual></isNotEmpty>
			</isNotEmpty>
			ORDER BY Type DESC, CusStatusOrder, Nm
		</isEqual>
		<isEqual property="EventFlag" compareValue="Cate">
			SELECT 'Cate' Type, a.CateCd Cd, b.CateNm Nm, SubCateCd Status
				FROM CS_Invest_Status a, CS_Cate b
			WHERE a.CateCd = b.CateCd AND a.DelFlag = 'N' AND b.CateType = '1'
			GROUP BY b.CateCd, CateNm
			ORDER BY Type DESC, Status, Nm
		</isEqual>
		<isEqual property="EventFlag" compareValue="Stock">
			SELECT 'Cate' Type, a.CateCd Cd, b.CateNm Nm, SubCateCd Status
				FROM CS_Invest_Status a, CS_Cate b
			WHERE a.CateCd = b.CateCd AND a.DelFlag = 'N' AND b.CateType = '1' AND SubCateCd = '2'
			GROUP BY a.CateCd, CateNm
			ORDER BY Type DESC, Status, Nm
		</isEqual>
	</select>
																
	<!-- 투자 현황 리스트 -->
	<select id="cusDAO.GetCusInvestList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CateCd, CateNm, CateType, SubCateCd, CASE SubCateCd WHEN '3' THEN '2' WHEN '4' THEN '3' WHEN '5' THEN '4' WHEN '2' THEN '5' ELSE SubCateCd END SubCateOrder, InSuCd, ISICCd,
			(SELECT MIN(InvestDate) InvestDate FROM CS_Invest_Status WHERE CusCd = data.CusCd AND CateCd = data.CateCd AND InvestDate != '') InvestDate,
			CASE IFNULL((SELECT InSuNabDay FROM CS_Invest_Summary WHERE WarCateCd = data.CateCd), '-') WHEN '-' THEN
			(CASE IFNULL((SELECT MAX(InSuNabDay) FROM CS_Invest_Summary WHERE SecCateCd = data.CateCd), '-') WHEN '-' THEN
			(CASE IFNULL((SELECT InSuNabDay FROM CS_Invest_Summary WHERE BondCateCd = data.CateCd), '-') WHEN '-' THEN '-' ELSE (SELECT InSuNabDay FROM CS_Invest_Summary WHERE BondCateCd = data.CateCd) END) 
			ELSE (SELECT MAX(InSuNabDay) FROM CS_Invest_Summary WHERE SecCateCd = data.CateCd) END)
			ELSE (SELECT InSuNabDay FROM CS_Invest_Summary WHERE WarCateCd = data.CateCd) END  InSuNabDay,
			CASE WHEN (SELECT InSuClaimStart FROM CS_Invest_Summary WHERE WarCateCd = data.CateCd) <![CDATA[<=]]> #SelDate# AND
			(SELECT InSuClaimEnd FROM CS_Invest_Summary WHERE WarCateCd = data.CateCd) <![CDATA[>=]]> #SelDate# THEN 'O' ELSE 'X' END ClaimFlag,
			(SELECT InSuClaimStart FROM CS_Invest_Summary WHERE WarCateCd = data.CateCd) InSuClaimStart,
			(SELECT InSuClaimEnd FROM CS_Invest_Summary WHERE WarCateCd = data.CateCd) InSuClaimEnd,
			DATEDIFF((SELECT InSuClaimEnd FROM CS_Invest_Summary WHERE WarCateCd = data.CateCd), NOW()) InSuClaimExtraDay,
			FORMAT(InSuNowPrice, 0) InSuNowPrice, InSuRefixLimitPrice, 
<!-- 			SecCateCd, FORMAT(SecUnitPrice, 0) SecUnitPrice, -->
			SecCateCd, FORMAT((SELECT UnitPrice FROM CS_Cate_Price WHERE DelFlag = 'N' AND PriceDate = UnitPriceDate AND CateCd = SecCateCd), 0) SecUnitPrice,
			FORMAT(WarUnitPrice, 0) WarUnitPrice,
		    FORMAT(BuyInvestCnt, 0) BuyInvestCnt, FORMAT(BuyInvestUnitPrice, 0) BuyInvestUnitPrice, FORMAT(BuyInvestTradeMoney, 0) BuyInvestTradeMoney,
		    FORMAT(BuyInvestCharge, 0) BuyInvestCharge, FORMAT(BuyInvestTax, 0) BuyInvestTax, FORMAT(OddlotMoney, 0) OddlotMoney, FORMAT(BuyInvestCalcuMoney, 0) BuyInvestCalcuMoney, FORMAT(BuyInvestUnitPrice * NowInvestCnt, 0) BuyCalcuMoney,
		    FORMAT(SellInvestCnt, 0) SellInvestCnt, FORMAT(SellInvestUnitPrice, 0) SellInvestUnitPrice, FORMAT(SellInvestTradeMoney, 0) SellInvestTradeMoney,
		    FORMAT(SellInvestCharge, 0) SellInvestCharge, FORMAT(SellInvestTax, 0) SellInvestTax, FORMAT(SellInvestCalcuMoney, 0) SellInvestCalcuMoney,
		    NowInvestCnt, FORMAT(UnitPrice, 0) UnitPrice,
<!-- 		    FORMAT(NowInvestCnt, 0) NowInvestCnt, FORMAT(UnitPrice, 0) UnitPrice, -->
		    CASE WHEN SubCateCd = '6' THEN FORMAT((NowInvestCnt * BuyInvestUnitPrice), 0) ELSE FORMAT((NowInvestCnt * UnitPrice), 0) END NowCalcuMoney,
		    CASE WHEN SubCateCd = '6' THEN IFNULL((BuyInvestUnitPrice - BuyInvestUnitPrice) / BuyInvestUnitPrice * 100, 0) ELSE IFNULL((UnitPrice - BuyInvestUnitPrice) / BuyInvestUnitPrice * 100, 0) END PricePer,
			IFNULL((SellInvestUnitPrice - BuyInvestUnitPrice) / BuyInvestUnitPrice * 100, 0) SellReturnRate,
			REPLACE(FORMAT(ROUND((InSuNowPrice * NowInvestCnt), - 6), 0), ',','') FaceValue <!-- 보고서상의 권면총액 2015.03.16 -->
		FROM
		    (SELECT buy.CusCd, buy.CateCd, CateNm, CateType, SubCateCd, buy.InSuCd, buy.ISICCd,
				    (SELECT InSuNowPrice FROM CS_Invest_Summary WHERE WarCateCd = cate.CateCd) InSuNowPrice,
				    
				    (SELECT InSuRefixLimitPrice FROM CS_Invest_Summary WHERE WarCateCd = cate.CateCd) InSuRefixLimitPrice,
		    		(SELECT SecCateCd FROM CS_Invest_Summary  WHERE WarCateCd = cate.CateCd) SecCateCd,
		            IFNULL(buy.InvestCnt, 0) BuyInvestCnt, IFNULL(buy.InvestUnitPrice, 0) BuyInvestUnitPrice, IFNULL(buy.InvestTradeMoney, 0) BuyInvestTradeMoney,
		            IFNULL(buy.InvestCharge, 0) BuyInvestCharge, IFNULL(buy.InvestTax, 0) BuyInvestTax, IFNULL(OddlotMoney, 0) OddlotMoney, IFNULL(buy.InvestCalcuMoney, 0) buyInvestCalcuMoney,
		            IFNULL(sell.InvestCnt, 0) SellInvestCnt, IFNULL(sell.InvestUnitPrice, 0) SellInvestUnitPrice, IFNULL(sell.InvestTradeMoney, 0) SellInvestTradeMoney,
		            IFNULL(sell.InvestCharge, 0) sellInvestCharge, IFNULL(sell.InvestTax, 0) sellInvestTax, IFNULL(sell.InvestCalcuMoney, 0) sellInvestCalcuMoney,
		            (buy.InvestCnt - IFNULL(sell.InvestCnt, 0)) NowInvestCnt,
		            (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = cate.CateCd AND PriceDate = UnitPriceDate AND DelFlag = 'N') UnitPrice,
					UnitPriceDate,
<!-- 					(SELECT UnitPrice FROM CS_Cate_Price WHERE DelFlag = 'N' AND PriceDate = UnitPriceDate -->
<!-- 					AND CateCd = (SELECT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = cate.CateCd)) SecUnitPrice, -->
					(SELECT UnitPrice FROM CS_Cate_Price WHERE DelFlag = 'N' AND PriceDate = UnitPriceDate AND CateCd = cate.CateCd) WarUnitPrice
		    FROM CS_Cate cate,
				(SELECT CusCd, CateCd, (SELECT MAX(PriceDate) PriceDate FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N' AND CateCd = CateCd2) UnitPriceDate
				FROM
				    (SELECT a.CusCd, b.CateCd,
					    (CASE WHEN SubCateCd IN ('3', '7', '8')
						THEN (CASE WHEN (SELECT  SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd) IS NULL
							THEN b.CateCd
							ELSE (SELECT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd)
						    END)
						ELSE b.CateCd
					    END) CateCd2
				    FROM CS_Cus_Info a, CS_Invest_Status b, CS_Cate c
				    <isEqual property="CMD" compareValue="sum">
				    	<isEqual property="CusCd" compareValue="OwnSum">WHERE a.CusCd IN ('000000000032', '000000000033')</isEqual>
				    	<isEqual property="CusCd" compareValue="NotOwnSum2">WHERE a.CusStatus = '2'</isEqual>
				    	<isEqual property="CusCd" compareValue="NotOwnSum6">WHERE a.CusStatus = '6'</isEqual>
				    	<isEqual property="CusCd" compareValue="NotOwnSum">WHERE a.CusStatus IN ('2', '6')</isEqual>
				    </isEqual>
				    <isNotEqual property="CMD" compareValue="sum">WHERE a.CusCd = #CusCd#</isNotEqual>
				    AND a.CusCd = b.CusCd AND b.CateCd = c.CateCd AND a.DelFlag = 'N' AND b.DelFlag = 'N'
				    GROUP BY CusCd, CateCd) unitdate) cus,
				    
				    <isEqual property="CMD" compareValue="sum">(SELECT 'sum' CusCd, cusin.CateCd, InvestType, IFNULL(InSuCd, '') InSuCd, IFNULL(ISICCd, '') ISICCd,</isEqual> 
				    <isNotEqual property="CMD" compareValue="sum">(SELECT cus.CusCd, cusin.CateCd, InvestType, IFNULL(InSuCd, '') InSuCd, IFNULL(ISICCd, '') ISICCd,</isNotEqual>
		            SUM(InvestCnt) InvestCnt, (SUM(InvestTradeMoney) / SUM(InvestCnt)) InvestUnitPrice, SUM(InvestTradeMoney) InvestTradeMoney,
		            SUM(InvestCharge) InvestCharge, SUM(InvestTax) InvestTax, SUM(OddlotMoney) OddlotMoney, SUM(InvestCalcuMoney) InvestCalcuMoney
		    	FROM CS_Invest_Status cusin,
					(SELECT CusCd, CateCd, (SELECT MAX(PriceDate) PriceDate FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N' AND CateCd = CateCd2) UnitPriceDate
					FROM
					    (SELECT a.CusCd, b.CateCd,
						    (CASE WHEN SubCateCd IN ('3', '7', '8')
							THEN (CASE WHEN (SELECT  SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd) IS NULL
								THEN b.CateCd
								ELSE (SELECT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd)
							    END)
							ELSE b.CateCd
						    END) CateCd2
					    FROM CS_Cus_Info a, CS_Invest_Status b, CS_Cate c
					    <isEqual property="CMD" compareValue="sum">
					    	<isEqual property="CusCd" compareValue="OwnSum">WHERE a.CusCd IN ('000000000032', '000000000033')</isEqual>
					    	<isEqual property="CusCd" compareValue="NotOwnSum2">WHERE a.CusStatus = '2'</isEqual>
					    	<isEqual property="CusCd" compareValue="NotOwnSum6">WHERE a.CusStatus = '6'</isEqual>
					    	<isEqual property="CusCd" compareValue="NotOwnSum">WHERE a.CusStatus IN ('2', '6')</isEqual>
					    </isEqual>
				    	<isNotEqual property="CMD" compareValue="sum">WHERE a.CusCd = #CusCd#</isNotEqual>
					    AND a.CusCd = b.CusCd AND b.CateCd = c.CateCd AND a.DelFlag = 'N' AND b.DelFlag = 'N'
					    GROUP BY CusCd, CateCd) unitdate) cus
			    WHERE cusin.CusCd = cus.CusCd AND cusin.CateCd = cus.CateCd AND cusin.DelFlag = 'N' AND cusin.InvestType = '1' AND (ProcType != '현금배당' OR ProcType IS NULL)
				AND cusin.InvestDate <![CDATA[<=]]> #SelDate#
			    GROUP BY CateCd, InvestType
			    <isNotEqual property="CMD" compareValue="sum">
				    , CusCd
				    <isNotEqual property="CusCd" compareValue="000000000032">
				    	<isNotEqual property="CusCd" compareValue="000000000033">
				    		, IFNULL(InSuCd, ''), IFNULL(ISICCd, '')
				    	</isNotEqual>
				    </isNotEqual>
			    </isNotEqual>
			    ) buy
		    LEFT OUTER JOIN
		        <isEqual property="CMD" compareValue="sum">(SELECT 'sum' CusCd, cusin.CateCd, InvestType, IFNULL(InSuCd, '') InSuCd, IFNULL(ISICCd, '') ISICCd,</isEqual> 
				<isNotEqual property="CMD" compareValue="sum">(SELECT cus.CusCd, cusin.CateCd, InvestType, IFNULL(InSuCd, '') InSuCd, IFNULL(ISICCd, '') ISICCd,</isNotEqual>
				
				
					CASE WHEN cus.CusCd = '000000000181' AND cusin.CateCd = 'A011160_85CY' THEN SUM(InvestCnt) ELSE CEIL(SUM(InvestCnt)) END InvestCnt,
					(SUM(InvestTradeMoney) / SUM(InvestCnt)) InvestUnitPrice, SUM(InvestTradeMoney) InvestTradeMoney,
				
<!-- 		            CEIL(SUM(InvestCnt)) InvestCnt, (SUM(InvestTradeMoney) / SUM(InvestCnt)) InvestUnitPrice, SUM(InvestTradeMoney) InvestTradeMoney, -->
		            SUM(InvestCharge) InvestCharge, SUM(InvestTax) InvestTax, SUM(InvestCalcuMoney) InvestCalcuMoney
		    FROM CS_Invest_Status cusin,
				(SELECT CusCd, CateCd, (SELECT MAX(PriceDate) PriceDate FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N' AND CateCd = CateCd2) UnitPriceDate
				FROM
				    (SELECT a.CusCd, b.CateCd,
					    (CASE WHEN SubCateCd IN ('3', '7', '8')
						THEN (CASE WHEN (SELECT  SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd) IS NULL
							THEN b.CateCd
							ELSE (SELECT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = b.CateCd)
						    END)
						ELSE b.CateCd
					    END) CateCd2
				    FROM CS_Cus_Info a, CS_Invest_Status b, CS_Cate c
				    <isEqual property="CMD" compareValue="sum">
				    	<isEqual property="CusCd" compareValue="OwnSum">WHERE a.CusCd IN ('000000000032', '000000000033')</isEqual>
				    	<isEqual property="CusCd" compareValue="NotOwnSum2">WHERE a.CusStatus = '2'</isEqual>
				    	<isEqual property="CusCd" compareValue="NotOwnSum6">WHERE a.CusStatus = '6'</isEqual>
				    	<isEqual property="CusCd" compareValue="NotOwnSum">WHERE a.CusStatus IN ('2', '6')</isEqual>
				    </isEqual>
				    <isNotEqual property="CMD" compareValue="sum">WHERE a.CusCd = #CusCd#</isNotEqual>
				    AND a.CusCd = b.CusCd AND b.CateCd = c.CateCd AND a.DelFlag = 'N' AND b.DelFlag = 'N'
				    GROUP BY CusCd, CateCd) unitdate) cus
		    WHERE cusin.CusCd = cus.CusCd AND cusin.CateCd = cus.CateCd AND cusin.DelFlag = 'N' AND cusin.InvestType = '2'
			AND cusin.InvestDate <![CDATA[<=]]> #SelDate#
		    GROUP BY CateCd, InvestType
		    <isNotEqual property="CMD" compareValue="sum">
			    , CusCd
			    <isNotEqual property="CusCd" compareValue="000000000032">
			    	<isNotEqual property="CusCd" compareValue="000000000033">
			    		, IFNULL(InSuCd, ''), IFNULL(ISICCd, '')
			    	</isNotEqual>
			    </isNotEqual>
		    </isNotEqual>
		    ) sell
		    
			ON buy.CusCd = sell.CusCd AND buy.CateCd = sell.CateCd 
<!-- 			AND buy.ISICCd = sell.ISICCd위즈코프 뉴젠빌(사모투자 중복투자) 매매상태 상이하여 수정 2015.10.02 -->
			<isNotEqual property="CMD" compareValue="sum">
			    <isNotEqual property="CusCd" compareValue="000000000032">
			    	<isNotEqual property="CusCd" compareValue="000000000033">
			    		AND buy.InSuCd = sell.InSuCd <!-- 투자자문 처음앤씨4회 (사모투자&직접등록) 매매상태 상이하여 수정 2015.10.20 -->
			    	</isNotEqual>
			    </isNotEqual>
		    </isNotEqual>
			
			
			<isNotEqual property="CMD" compareValue="sum">
			    <isNotEqual property="CusCd" compareValue="000000000032">
			    	<isNotEqual property="CusCd" compareValue="000000000033">
			    		AND buy.ISICCd = sell.ISICCd<!-- 위즈코프 뉴젠빌(사모투자 중복투자) 매매상태 상이하여 수정 2015.10.02 -->
			    	</isNotEqual>
			    </isNotEqual>
		    </isNotEqual>
			
			
			
		    WHERE cus.CateCd = cate.CateCd AND cate.CateCd = buy.CateCd AND CateType = '1'
		    <isEqual property="CMD" compareValue="sum">GROUP BY CateCd</isEqual>
		    ) data
		<isEqual property="EventFlag" compareValue="Report">WHERE NowInvestCnt != '0'</isEqual>
		<isNotEmpty property="SubCateCd">WHERE SubCateCd = #SubCateCd#</isNotEmpty>
		<isEmpty property="OrderKey">
			ORDER BY CASE WHEN NowInvestCnt = 0 THEN NowInvestCnt END,
			CASE WHEN NowInvestCnt = 0 THEN (
				SELECT CalcuDate FROM (SELECT a.CusCd, CalcuDate, InSuCd, CASE WHEN b.CateCd IS NULL THEN a.CateCd ELSE b.CateCd END CateCd FROM 
					(SELECT CusCd, TradeCd, CalcuCd, InSuCd, CateCd, CalcuDate FROM CS_Calcu WHERE CalcuEndFlag = 'Y' AND DelFlag = 'N') a
				LEFT OUTER JOIN
					(SELECT CusCd, TradeCd, CalcuCd, CateCd FROM CS_Calcu_Cate_Info WHERE DelFlag = 'N') b
				ON a.CusCd = b.CusCd AND a.TradeCd = b.TradeCd AND a.CalcuCd = b.CalcuCd) calcu
	 			WHERE CusCd = data.CusCd
	 				AND CASE WHEN InSuCd != '' THEN InSuCd = data.InSuCd ELSE 
						CASE WHEN SubCateCd = '2' THEN CateCd = data.CateCd ELSE CateCd = data.CateCd END END
			) END,
			CASE WHEN NowInvestCnt != 0 THEN SubCateOrder ELSE '' END,
			CASE WHEN NowInvestCnt != 0 THEN IFNULL(InSuNabDay, InvestDate) ELSE '' END,
			CASE WHEN NowInvestCnt != 0 THEN InvestDate ELSE '' END, CateNm
		</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 투자 현황 등록을 위한 투자 현황 코드 받아오기 -->
	<select id="cusDAO.GetInvestCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT IFNULL(LPAD(MAX(InvestCd) + 1, 12, 0), '000000000001') InvestCd FROM CS_Invest_Status WHERE CusCd = LPAD(#CusCd#, 12, 0) AND CateCd = #CateCd# AND InvestType = #InvestType#]]>
	</select>
	
	<!-- 투자 현황 등록 완료 -->
	<insert id="cusDAO.CusInvestAddEnd">
		INSERT INTO CS_Invest_Status (CusCd, CateCd, InvestType, InvestCd, InvestCnt, InvestUnitPrice, InvestTradeMoney, OddlotMoney,
	     	 InvestCharge, InvestTax, InvestCalcuMoney, InvestDate, InSuCd, ISICCd, ProcType, RegDate, RegPerSabun, DelFlag)
		VALUES (#CusCd#, #CateCd#, #InvestType#, #InvestCd#, REPLACE(#InvestCnt#, ',', ''), REPLACE(#InvestUnitPrice#, ',', ''), REPLACE(#InvestTradeMoney#, ',', ''), REPLACE(#OddlotMoney#, ',', ''),
	        REPLACE(#InvestCharge#, ',', ''), REPLACE(#InvestTax#, ',', ''), REPLACE(#InvestCalcuMoney#, ',', ''), #InvestDate#, #InSuCd#, 
	        CASE WHEN #ISICCd# != '' THEN LPAD(#ISICCd#, 12, 0) ELSE '' END,
	        #ProcType#, NOW(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 매수 등록에 따른 예수금 수정 완료 -->
	<update id="cusDAO.InvestBuyAddCashApplyEnd">
		<![CDATA[
		UPDATE CS_Invest_Status
			SET InvestTradeMoney = InvestTradeMoney - #InvestTradeMoney#, ProcType = CASE WHEN InvestDate = #InvestDate# THEN CONCAT(ProcType, ', $ProcType$') ELSE ProcType END
		WHERE CusCd = #CusCd# AND CateCd = 'Cash' AND InvestDate BETWEEN #InvestDate# AND #SelDate# AND DelFlag = 'N'
		]]>
	</update>
	
	<!-- 매수 현황 리스트 -->
	<select id="cusDAO.GetInvestList_Cus_Buy" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CateCd, CateNm, CateType,
		    InvestType, InvestCd, InvestDate,
		    InvestCnt, InvestUnitPrice, InvestTradeMoney,
		    InvestCharge, InvestTax, OddlotMoney, InvestCalcuMoney
		FROM
		    (SELECT CusCd, CateCd,
	            (SELECT CateNm FROM CS_Cate WHERE CateCd = main.CateCd) CateNm, (SELECT CateType FROM CS_Cate WHERE CateCd = main.CateCd) CateType,
	            InvestType, InvestCd, InvestDate,
	            InvestCnt, InvestUnitPrice, InvestTradeMoney,
	            InvestCharge, InvestTax, OddlotMoney, InvestCalcuMoney
		    FROM CS_Invest_Status main
		    WHERE CusCd = #CusCd# AND DelFlag = 'N' AND InvestType = '1') data
		WHERE CateType = '1'
		<isNotEmpty prepend="AND" property="searchKeyword"> CateNm LIKE '%$searchKeyword$%'</isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY InvestDate DESC, CateCd</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 매수 수정/삭제 해당일에 예수금 정보 받아오기 -->
	<select id="cusDAO.GetInvestBuyDateInCashDate" resultMap="CashInfo">
		<![CDATA[SELECT CusCd, CateCd, InvestType, InvestCd, InvestTradeMoney, InvestDate FROM CS_Invest_Status WHERE CusCd = #CusCd# AND CateCd = 'Cash' AND InvestDate = #InvestDate# AND DelFlag = 'N']]>
	</select>
	
	<!-- 매수 수정 완료 -->
	<update id="cusDAO.CusInvestBuyEditEnd">
		UPDATE CS_Invest_Status
		SET CateCd = #CateCd#, InvestDate = #InvestDate#, InvestCnt = REPLACE(#InvestCnt#, ',', ''),
			InvestUnitPrice = REPLACE(#InvestUnitPrice#, ',', ''), InvestTradeMoney = REPLACE(#InvestTradeMoney#, ',', ''),
			InvestCharge = REPLACE(#InvestCharge#, ',', ''), InvestCalcuMoney = REPLACE(#InvestCalcuMoney#, ',', ''),
			EditDate = NOW(), EditPerSabun = #RegPerSabun#
		WHERE CusCd = #CusCd# AND CateCd = #OldCateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#
	</update>
	
	<!-- 매수 수정에 따른 예수금 수정 완료 -->
	<update id="cusDAO.InvestBuyEditCashApplyEnd">
		UPDATE CS_Invest_Status
			<isEqual property="EventFlag" compareValue="Add">
				SET InvestTradeMoney = InvestTradeMoney + REPLACE(#InvestTradeMoney#, ',', '')
			</isEqual>
			<isEqual property="EventFlag" compareValue="Del">
				SET InvestTradeMoney = InvestTradeMoney - REPLACE(#InvestTradeMoney#, ',', '')
			</isEqual>
			WHERE CusCd = LPAD(#CusCd#, 12, 0) AND CateCd = #CateCd#
			AND InvestDate BETWEEN #InvestDate# AND #SelDate#
	</update>
	
	<!-- 매수&현금 삭제 완료 -->
	<update id="cusDAO.CusInvestBuyDelEnd">
		<![CDATA[UPDATE CS_Invest_Status SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun#
			WHERE CusCd = #CusCd# AND CateCd = #CateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#]]>
	</update>
	
	<!-- 매수 삭제에 따른 예수금 수정 완료 -->
	<update id="cusDAO.InvestBuyDelCashApplyEnd">
		UPDATE CS_Invest_Status
			SET InvestTradeMoney = InvestTradeMoney + REPLACE(#InvestTradeMoney#, ',', ''), EditDate = NOW(), EditPerSabun = #RegPerSabun#
			WHERE CusCd = #CusCd# AND CateCd = 'Cash' AND InvestDate BETWEEN #InvestDate# AND #SelDate# AND DelFlag = 'N'
	</update>

	<!-- 매도에 따른 예수금 Tmp 등록 완료 -->
	<insert id="cusDAO.InvestSellTmpAddEnd">
		INSERT INTO CS_Invest_Tmp (CusCd, CateCd, InvestType, InvestCd, InvestTradeMoney, InvestDate,
		RegDate, RegPerSabun, ApplyFlag, DelFlag)
		VALUES (#CusCd#, #CateCd#, #InvestType#, #InvestCd#, REPLACE(#InvestCalcuMoney#, ',', ''), #InvestDate#,
		 now(), #RegPerSabun#, 'N', 'N')
	</insert>
	
	<!-- 매도에 따른 예수금 Tmp 반영일 및 반영가능 여부 받아오기 -->
	<select id="cusDAO.CashTmpChk" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CashTmpChk(#SubCateCd#, #InvestDate#) ApplyDate,
			CASE WHEN CashTmpChk(#SubCateCd#, #InvestDate#) <![CDATA[<=]]> DATE_FORMAT(NOW(), '%Y-%m-%d') THEN 'Y' ELSE 'N' END CashTmpChk
	</select>
	
	<!-- 매도 현황 리스트 -->
	<select id="cusDAO.GetInvestList_Cus_Sell" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CateCd, CateNm,
		    FORMAT(InCnt, 0) InCnt, FORMAT(OutCnt, 0) OutCnt, FORMAT((InCnt - OutCnt), 0) HaveCnt,
		    InvestType, InvestCd, InvestCnt, InvestUnitPrice, InvestTradeMoney,
			InvestCharge, InvestTax, InvestCalcuMoney, InvestDate, ApplyFlag
		FROM
		    (SELECT CusCd, CateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = main.CateCd) CateNm,
	            IFNULL((SELECT SUM(InvestCnt) InvestCnt FROM CS_Invest_Status
	                WHERE CusCd = main.CusCd AND CateCd = main.CateCd AND DelFlag = 'N' AND InvestType = '1' GROUP BY CateCd), 0) InCnt,
	            IFNULL((SELECT SUM(InvestCnt) InvestCnt FROM CS_Invest_Status
	                WHERE CusCd = main.CusCd AND CateCd = main.CateCd AND DelFlag = 'N' AND InvestType = '2' GROUP BY CateCd), 0) OutCnt,
	            InvestType, InvestCd, FORMAT(InvestCnt, 0) InvestCnt,
	            FORMAT(InvestUnitPrice, 0) InvestUnitPrice,
	            FORMAT(InvestTradeMoney, 0) InvestTradeMoney,
	            FORMAT(InvestCharge, 0) InvestCharge, FORMAT(InvestTax, 0) InvestTax, FORMAT(InvestCalcuMoney, 0) InvestCalcuMoney, InvestDate,
	            (SELECT ApplyFlag FROM CS_Invest_Tmp
	                WHERE CusCd = main.CusCd AND CateCd = main.CateCd AND InvestType = main.InvestType AND InvestCd = main.InvestCd) ApplyFlag
		    FROM CS_Invest_Status main
		    WHERE CusCd = #CusCd# AND DelFlag = 'N' AND InvestType = '2') resultdata
		    <isNotEmpty prepend="WHERE" property="searchKeyword"> CateNm LIKE '%$searchKeyword$%'</isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY InvestDate DESC, CateCd, InvestCalcuMoney DESC</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 매도 수정 완료 -->
	<update id="cusDAO.CusInvestSellEditEnd">
		UPDATE CS_Invest_Status
		SET CateCd = #CateCd#, InvestDate = #InvestDate#, InvestCnt = REPLACE(#InvestCnt#, ',', ''),
			InvestUnitPrice = REPLACE(#InvestUnitPrice#, ',', ''), InvestTradeMoney = REPLACE(#InvestTradeMoney#, ',', ''),
			InvestCharge = REPLACE(#InvestCharge#, ',', ''), InvestTax = REPLACE(#InvestTax#, ',', ''),
			InvestCalcuMoney = REPLACE(#InvestCalcuMoney#, ',', '')
		WHERE CusCd = #CusCd# AND CateCd = #OldCateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#
	</update>
	
	<!-- 매도수정에 따른 예수금 Tmp 수정 완료 -->
	<update id="cusDAO.InvestSellTmpEditEnd">
		UPDATE CS_Invest_Tmp
		SET CateCd = #CateCd#, InvestTradeMoney = REPLACE(#InvestCalcuMoney#, ',', ''), InvestDate = #InvestDate#
		WHERE CusCd = #CusCd# AND CateCd = #OldCateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#
	</update>
	
	<!-- 매도 삭제 완료 -->
	<update id="cusDAO.CusInvestSellDelEnd">
		<![CDATA[UPDATE CS_Invest_Status SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun#
			WHERE CusCd = #CusCd# AND CateCd = #CateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#]]>
	</update>
	
	<!-- 매도삭제에 따른 예수금  Tmp 삭제 완료 -->
	<update id="cusDAO.InvestSellTmpDelEnd">
		<![CDATA[UPDATE CS_Invest_Tmp SET DelFlag = 'Y' WHERE CusCd = #CusCd# AND CateCd = #CateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#]]>
	</update>
	
	<!-- 예수금 반영을 위한  예수금 Tmp 리스트 받아오기 -->
	<select id="cusDAO.GetCashTmpList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT a.CusCd, CusNm, CusStatus, CusStatusNm, a.CateCd, CateNm, a.SubCateCd,
			a.InvestType, a.InvestCd, InvestCnt, InvestUnitPrice, c.InvestDate, TradeMoneyDate,
			c.InvestTradeMoney, InvestCharge, InvestTax, OddlotMoney, InvestCalcuMoney,
			a.RegDate, a.RegPerSabun, ApplyFlag, ApplyDate, ApplyPerSabun, a.DelFlag FROM ( 
				SELECT CusCd, CateCd, SubCateCd, InvestType, InvestCd, InvestTradeMoney, InvestDate, TradeMoneyDate,
					RegDate, RegPerSabun, ApplyFlag, ApplyDate, ApplyPerSabun, DelFlag FROM
					(SELECT CusCd, a.CateCd, SubCateCd, InvestType, InvestCd, InvestTradeMoney, InvestDate,
						CASE WHEN SubCateCd IN ('2', '3')
						THEN
							CASE WHEN DAYNAME(InvestDate) IN ('Monday', 'Tuesday', 'Wednesday') THEN DATE_ADD(InvestDate, INTERVAL + 2 DAY)
							WHEN DAYNAME(InvestDate) IN ('Thursday', 'Friday') THEN DATE_ADD(InvestDate, INTERVAL + 4 DAY) END
						ELSE
							CASE WHEN DAYNAME(InvestDate) IN ('Monday', 'Tuesday', 'Wednesday', 'Thursday') THEN DATE_ADD(InvestDate, INTERVAL + 1 DAY)
							ELSE DATE_ADD(InvestDate, INTERVAL + 3 DAY) END
						END TradeMoneyDate,
						a.RegDate, a.RegPerSabun, ApplyFlag, ApplyDate, ApplyPerSabun, a.DelFlag
					FROM CS_Invest_Tmp a, CS_Cate b
					WHERE a.CateCd = b.CateCd AND a.ApplyFlag = 'N' AND a.DelFlag = 'N') data
				WHERE TradeMoneyDate <![CDATA[<=]]> NOW()) a, CS_Cus_Info b, CS_Invest_Status c, CS_Cate d
			WHERE a.CusCd = b.CusCd AND a.CusCd = c.CusCd AND a.CateCd = c.CateCd AND a.CateCd = c.CateCd AND a.CateCd = d.CateCd
				AND a.InvestCd = c.InvestCd AND a.InvestType = c.InvestType AND b.DelFlag = 'N' AND c.DelFlag = 'N'
		ORDER BY InvestDate
	</select>
	
	<!-- 예수금 Tmp 예수금 반영 완료 (예수금 Tmp 일자부터 오늘 날짜 사이의 모든 예수금이 업데이트 된다) -->
	<update id="cusDAO.CashTmpApplyAddEnd">
		UPDATE CS_Invest_Status
			SET InvestTradeMoney = InvestTradeMoney + REPLACE(#InvestTradeMoney#, ',', ''), EditDate = NOW(), EditPerSabun = #RegPerSabun#,
			<isEqual property="ProcType" compareValue="이자등록">
				ProcType = CASE WHEN ProcType IS NULL OR ProcType = '' THEN 'Cash Tmp' ELSE CONCAT(ProcType, ', 이자등록') END
			</isEqual>
			<isEmpty property="ProcType">
				ProcType = CASE WHEN ProcType IS NULL OR ProcType = '' THEN 'Cash Tmp' ELSE CONCAT(ProcType, ', Cash Tmp') END
			</isEmpty>
		WHERE CusCd = #CusCd# AND CateCd = #CateCd# AND InvestDate BETWEEN #InvestDate# AND #SelDate#
	</update>
	
	<!-- 예수금 Tmp 반영 완료 후 해당 예수금 Tmp 수정 완료 -->
	<update id="cusDAO.CashTmpApplyEditEnd">
		UPDATE CS_Invest_Tmp SET ApplyFlag = 'Y', ApplyDate = #InvestDate#, ApplyPerSabun = #ApplyPerSabun#
		WHERE CusCd = #CusCd# AND CateCd = #CateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#
	</update>
																<!-- 	유가증권	 	-->
																
																<!-- 	종목	 	-->
	<!-- 종목 버튼 리스트 받아오기 -->
	<select id="cusDAO.GetCateBtnList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT 'FULL' SubCateCd, '전체' SubCateNm, '0' CateOrder FROM DUAL
		UNION ALL
		SELECT DISTINCT SubCateCd, SubCateNm, CateOrder FROM CS_Cate WHERE CateType = '1'
		<isNotEqual property="EventFlag" compareValue="CateList">
			AND SubCateCd NOT IN ('7', '8')
		</isNotEqual>
		ORDER BY CateOrder
	</select>
	
	<!-- 종목리스트 받아오기 -->
	<select id="cusDAO.GetCateList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT ComCd, ComNm, CateCd, CateNm, CateType, CateTypeNm, CateNum, SubCateCd, SubCateNm, UpFlag,
		CASE UpFlag WHEN 'Y' THEN '상장' WHEN 'N' THEN '비상장' ELSE '' END UpFlagNm,
		DATE_FORMAT(RegDate, '%Y-%m-%d') RegDate, RegPerSabun, DelFlag FROM CS_Cate WHERE CateType ='1'
		<isEqual property="DelFlag" compareValue="Y">AND DelFlag = 'Y'</isEqual>
		<isEqual property="DelFlag" compareValue="N">AND DelFlag = 'N'</isEqual>
		<isEqual property="EventFlag" compareValue="Graph">AND (UpFlag = 'Y' OR SubCateCd = '2')</isEqual>
		<isNotEqual property="UpFlag" compareValue="All">AND UpFlag = #UpFlag#</isNotEqual>
		<isNotEmpty prepend="AND" property="searchKeyword"> CateNm LIKE '%$searchKeyword$%'</isNotEmpty>
		<isNotEmpty prepend="AND" property="CateCd"> CateCd = #CateCd#</isNotEmpty>
		<isNotEmpty property="searchCondition">
			<isNotEqual property="searchCondition" compareValue="FULL">AND SubCateCd = #searchCondition#</isNotEqual>
		</isNotEmpty>
		<isEmpty property="OrderKey">
			<isEqual property="EventFlag" compareValue="CateList">ORDER BY SubCateCd, DelFlag, CateNm</isEqual>
			<isNotEqual property="EventFlag" compareValue="CateList">ORDER BY SubCateCd, CateNm</isNotEqual>
		</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY DelFlag, $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY DelFlag, $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 종목 등록을 위한 종목 리스트 받아오기 -->
	<select id="cusDAO.GetAddCateList" parameterClass="cusVO2" resultClass="egovMap">
<!-- 		SELECT CPN_ID Cd, CPN_NM Nm FROM IB_company WHERE CPN_ID LIKE '%A%' ORDER BY CPN_NM -->
		SELECT ComCd Cd, ComNm Nm FROM CS_Cate WHERE SubCateCd = '2' ORDER BY ComNm
	</select>
	
	<!-- 종목 중복 여부 확인 -->
	<select id="cusDAO.ChkCateNm" parameterClass="cusVO2" resultClass="int">
		SELECT COUNT(*) FROM CS_Cate WHERE ComCd = #ComCd# AND CateNum = #CateNum# AND SubCateCd = #SubCateCd# AND UpFlag = #UpFlag# AND CateType = '1'
	</select>
	
	<!-- 등록되지 않은 비상장 종목코드 생성 -->
	<select id="cusDAO.GetOutCateCd" resultClass="String">
		SELECT CONCAT('B', LPAD(IFNULL(REPLACE(MAX(SUBSTRING(catecd, 1, 7)), 'B', ''), 0) + 1, 6, '0')) FROM synergymain.cs_cate WHERE catetype='1' AND catecd LIKE 'B%'
	</select>
	
	<!-- 종목 등록 완료 -->
	<insert id="cusDAO.CateAddEnd">
		INSERT INTO CS_Cate (ComCd, ComNm, CateCd, CateNm, CateType, CateTypeNm, CateNum, SubCateCd, SubCateNm, CateOrder, UpFlag, RegDate, RegPerSabun, DelFlag)
		VALUES (#ComCd#, #ComNm#, #CateCd#, #CateNm#, #CateType#, #CateTypeNm#, #CateNum#, #SubCateCd#, #SubCateNm#,
		CASE SubCateCd WHEN '2' THEN '1' WHEN '3' THEN '2' WHEN '1' THEN '3' WHEN '4' THEN '4' WHEN '5' THEN '5' WHEN '6' THEN '6' WHEN '7' THEN '7' ELSE '8' END,
		#UpFlag#, NOW(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 종목 사용 안함 완료 -->
	<update id="cusDAO.CateNotUseEnd">
		UPDATE CS_Cate SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE CateCd = #CateCd# AND DelFlag = 'N'
	</update>
	
	<!-- 종목 사용함 완료 -->
	<update id="cusDAO.CateUseEnd">
		UPDATE CS_Cate SET DelFlag = 'N', DelDate = NULL, DelPerSabun = '' WHERE CateCd = #CateCd# AND DelFlag = 'Y'
	</update>
	
	<!-- 종목별 고객리스트 받아오기 -->
	<select id="cusDAO.GetCusCateList" parameterClass="cusVO2" resultClass="egovMap">
<!-- 		SELECT CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, CateCd, CateNm, (SELECT IFNULL(TradeHost, 'X') FROM CS_Trade WHERE CusCd = base.CusCd AND DelFlag = 'N') TradeHost, -->
<!-- 			(SELECT TradeCd FROM CS_Trade WHERE CusCd = base.CusCd AND DelFlag = 'N') TradeCd, -->
		
		SELECT CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, CateCd, CateNm, 
			TradeType, CASE WHEN TradeType = '1' THEN '기간별' WHEN TradeType = '2' THEN '건별' END TradeTypeNm, TradeHost, TradeCd, HostSeq,
			
		    NowSumMoney, ((InvestCnt * UnitPrice) / NowSumMoney * 100) Weight,
		    BuyInvestCnt, SellInvestCnt, InvestCnt, BuyInvestUnitPrice, UnitPrice,
		    (InvestCnt * UnitPrice) NowSecurity, ((UnitPrice - BuyInvestUnitPrice) / BuyInvestUnitPrice * 100) ReturnRate,
		    SellInvestUnitPrice, SellInvestTradeMoney, ((SellInvestUnitPrice - BuyInvestUnitPrice) / BuyInvestUnitPrice * 100) SellReturnRate
		FROM
		    (SELECT buy.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, TradeType, TradeHost, TradeCd, HostSeq,
		            buy.CateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = buy.CateCd) CateNm, buy.BuyInvestCnt, SellInvestCnt,
		            (SELECT NowSumMoney FROM (
<!--                 SELECT data1.CusCd, IFNULL((NowCash + NowSecurity), 0) NowSumMoney 2015.04.28 자산총계 수정 (현재현금 + 현재평가금액 => 현재평가금액) -->
                SELECT data1.CusCd, IFNULL(NowSecurity, 0) NowSumMoney
                FROM
                    (SELECT CusCd, (CMA + NowCash + NowCashTmp - Except + CusKeep + ComKeep) NowCash
                    FROM
                    (SELECT b.CusCd,
				        IFNULL((SELECT InvestTradeMoney FROM
							(SELECT CusCd, SUM(InvestTradeMoney) InvestTradeMoney
				                FROM
				                    (SELECT CusCd, SUM(InvestTradeMoney) InvestTradeMoney FROM CS_Invest_Tmp
									WHERE InvestDate <![CDATA[<=]]> NOW() AND ApplyFlag = 'N' AND DelFlag = 'N' GROUP BY CusCd
								UNION ALL
									SELECT CusCd, SUM(InvestTradeMoney) InvestTradeMoney FROM CS_Invest_Tmp
									WHERE InvestDate <![CDATA[<=]]> NOW() AND ApplyFlag = 'Y' AND DelFlag = 'N' AND ApplyDate <![CDATA[>]]> NOW()
									GROUP BY CusCd) Tmp1
							GROUP BY CusCd) Tmp2 WHERE CusCd = b.CusCd), 0) NowCashTmp,
				            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
				                WHERE CusCd = b.CusCd AND CateCd = 'CMA' AND InvestCd = CMACd), 0) CMA,
				            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
				                WHERE CusCd = b.CusCd AND CateCd = 'Cash' AND InvestCd = CashCd), 0) NowCash,
				            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
				                WHERE CusCd = b.CusCd AND CateCd = 'Except' AND InvestCd = ExceptCd), 0) Except,
				            (SELECT ETCInfo FROM CS_Invest_Status WHERE CusCd = b.CusCd AND CateCd = 'Except' AND InvestCd = ExceptCd) ExceptInfo,
				            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
				                WHERE CusCd = b.CusCd AND CateCd = 'CusKeep' AND InvestCd = CusKeepCd), 0) CusKeep,
				            (SELECT ETCInfo FROM CS_Invest_Status WHERE CusCd = b.CusCd AND CateCd = 'CusKeep' AND InvestCd = CusKeepCd) CusKeepInfo,
				            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
				                WHERE CusCd = b.CusCd AND CateCd = 'ComKeep' AND InvestCd = ComKeepCd), 0) ComKeep,
				            (SELECT ETCInfo FROM CS_Invest_Status WHERE CusCd = b.CusCd AND CateCd = 'ComKeep' AND InvestCd = ComKeepCd) ComKeepInfo
				    FROM
				        (SELECT base.CusCd,
				            CMADate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'CMA' AND InvestDate = CMADate AND InvestType = '1' AND DelFlag = 'N') CMACd,
				            CashDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'Cash' AND InvestDate = CashDate AND InvestType = '1' AND DelFlag = 'N') CashCd,
				            ExceptDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'Except' AND InvestDate = ExceptDate AND InvestType = '1' AND DelFlag = 'N') ExceptCd,
				            CusKeepDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'CusKeep' AND InvestDate = CusKeepDate AND InvestType = '1' AND DelFlag = 'N') CusKeepCd,
				            ComKeepDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'ComKeep' AND InvestDate = ComKeepDate AND InvestType = '1' AND DelFlag = 'N') ComKeepCd
				    FROM
				        (SELECT cus.CusCd,
				            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
				                WHERE a.CusCd = cus.CusCd AND CateCd = 'CMA' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> NOW()) CMADate,
				            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
				                WHERE a.CusCd = cus.CusCd AND CateCd = 'Cash' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> NOW()) CashDate,
				            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
				                WHERE a.CusCd = cus.CusCd AND CateCd = 'Except' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> NOW()) ExceptDate,
				            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
				                WHERE a.CusCd = cus.CusCd AND CateCd = 'CusKeep' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> NOW()) CusKeepDate,
				            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
				                WHERE a.CusCd = cus.CusCd AND CateCd = 'ComKeep' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> NOW()) ComKeepDate
				    FROM CS_Cus_Info cus
				    LEFT OUTER JOIN CS_Trade trade ON cus.CusCd = trade.CusCd
				    WHERE cus.CusStatus IN ('2', '4', '6', '8') AND cus.DelFlag = 'N'
				    GROUP BY CusCd) base
				    LEFT OUTER JOIN
					(SELECT CusCd, TradeCd,
				            SUM(TradeMoney) - IFNULL((SELECT SUM(TradeMoney) TradeMoney FROM CS_Trade_Money
				                WHERE CusCd = mainmoney.CusCd AND TradeMoneyFlag IN ('2', '4') AND DelFlag = 'N' AND TradeMoneyDate <![CDATA[<=]]> NOW()), 0) TradeMoney
				    FROM CS_Trade_Money mainmoney
				    WHERE TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N' AND TradeMoneyDate <![CDATA[<=]]> NOW()
				    GROUP BY CusCd) money ON base.CusCd = money.CusCd) b)
                     cuscashlist) data1
                        LEFT OUTER JOIN
                    (SELECT CusCd, SUM(NowSecurity) NowSecurity
                    FROM
                        (SELECT cuscd, catecd, catetype, investtype, (InvestCnt * UnitPrice) NowSecurity
                    FROM
                        (SELECT cuscd, catecd, catetype, investtype, (investcnt - sellcnt) investcnt,
                        	CASE WHEN SubCateCd = '6' THEN BuyInvestUnitPrice ELSE (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = cusin2.CateCd AND PriceDate = UnitPriceDate AND DelFlag = 'N') END UnitPrice
<!--                             (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = cusin2.CateCd AND PriceDate = UnitPriceDate AND DelFlag = 'N') UnitPrice -->
                    FROM
						(SELECT CusCd, a.CateCd, CateType, SubCateCd,
							InvestType, SUM(InvestCnt) InvestCnt, SUM(InvestTradeMoney) / SUM(InvestCnt) BuyInvestUnitPrice,
							CEIL(IFNULL((SELECT SUM(InvestCnt) FROM CS_Invest_Status WHERE CusCd = a.CusCd AND CateCd = a.CateCd AND DelFlag = 'N' AND InvestType = '2'), 0)) SellCnt,
							(SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE CateCd = b.CateCd) UnitPriceDate
						FROM CS_Invest_Status a, CS_Cate b
						WHERE a.CateCd = b.CateCd AND b.CateType = '1' AND a.DelFlag = 'N' GROUP BY CusCd, CateCd, InvestType) cusin2
						WHERE InvestType = '1') cusin3) cusin4

                    GROUP BY CusCd) data2 ON data1.CusCd = data2.CusCd)a WHERE CusCd = buy.CusCd) NowSumMoney,
		            (BuyInvestCnt - IFNULL(SellInvestCnt, 0)) InvestCnt, BuyInvestUnitPrice, BuyInvestTradeMoney,
		            SellInvestUnitPrice, SellInvestTradeMoney,
		            CASE WHEN SubCateCd = '6' THEN BuyInvestUnitPrice ELSE (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = buy.CateCd AND PriceDate = buy.PriceDate) END UnitPrice
<!-- 		            (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = buy.CateCd AND PriceDate = buy.PriceDate) UnitPrice -->
		    FROM
<!-- 				(SELECT a.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, CateCd, SUM(InvestCnt) BuyInvestCnt, SUM(InvestTradeMoney) BuyInvestTradeMoney, SUM(InvestTradeMoney) / SUM(InvestCnt) BuyInvestUnitPrice, -->
<!-- 					(SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE CateCd = a.CateCd) PriceDate FROM CS_Invest_Status a, CS_Cus_Info b -->
<!-- 				WHERE CateCd = #CateCd# AND a.DelFlag = 'N' AND InvestType = '1' AND (ProcType != '현금배당' OR ProcType IS NULL) -->
<!-- 				AND a.CusCd = b.CusCd GROUP BY a.CusCd, CateCd, InvestType) buy -->
				
				
				(SELECT d.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, d.CateCd, SubCateCd,
				    BuyInvestCnt, BuyInvestTradeMoney, BuyInvestUnitPrice, PriceDate,
				    TradeType, CASE WHEN e.TradeHost IS NOT NULL THEN e.TradeHost ELSE d.TradeHost END TradeHost, d.TradeCd, HostSeq
				FROM
				    (SELECT a.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, a.CateCd, SubCateCd,
				        SUM(InvestCnt) BuyInvestCnt, SUM(InvestTradeMoney) BuyInvestTradeMoney, SUM(InvestTradeMoney) / SUM(InvestCnt) BuyInvestUnitPrice,
				        (SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE CateCd = a.CateCd) PriceDate, TradeType, TradeHost, TradeCd
				    FROM CS_Invest_Status a, CS_Cus_Info b, CS_Trade c, CS_Cate d
				    WHERE a.CateCd = #CateCd# AND a.DelFlag = 'N' AND InvestType = '1' AND (ProcType != '현금배당' OR ProcType IS NULL)
						AND a.CusCd = b.CusCd AND a.CusCd = c.CusCd AND c.DelFlag = 'N' AND a.CateCd = d.CateCd
				    GROUP BY a.CusCd , CateCd , InvestType) d
				        LEFT OUTER JOIN
				    CS_Trade_Host e ON d.CusCd = e.CusCd AND d.CateCd = e.CateCd AND d.TradeCd = e.TradeCd AND e.DelFlag = 'N') buy
				
				
			    LEFT OUTER JOIN
			    (SELECT CusCd, CateCd, CEIL(SUM(InvestCnt)) SellInvestCnt, SUM(InvestTradeMoney) SellInvestTradeMoney, SUM(InvestTradeMoney) / SUM(InvestCnt) SellInvestUnitPrice FROM CS_Invest_Status
				    WHERE CateCd = #CateCd# AND DelFlag = 'N' AND InvestType = '2' GROUP BY CusCd , CateCd, InvestType) sell
	<!-- 			    WHERE CateCd = #CateCd# AND DelFlag = 'N' AND InvestType = '2' AND ProcType != '이자등록' GROUP BY CusCd , CateCd, InvestType) sell -->
				    ON buy.CusCd = sell.CusCd AND buy.CateCd = sell.CateCd) base
	<!-- 		    WHERE FORMAT(InvestCnt, 0) != 0 AND CusStatus != '5' -->
			    WHERE CusStatus != '5'
		    <isNotEmpty property="CusStatus"><isNotEqual property="CusStatus" compareValue="0">AND CusStatus = #CusStatus#</isNotEqual></isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY IFNULL(TradeHost, 'X'), ReturnRate DESC, NowSecurity DESC</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY IFNULL(TradeHost, 'X'), $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY IFNULL(TradeHost, 'X'), $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
																<!-- 	종목	 	-->

																<!-- 	현금	 	-->
	<!-- 현금기준 고객리스트 -->
	<select id="cusDAO.GetCusCashList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, TRIM(TradeMoney) TradeMoney, TradeType, TradeTypeNm,
		    TRIM(CMA) CMA, TRIM(Cash) NowCash, TRIM(NowCashTmp) NowCashTmp, (CMA + Cash + NowCashTmp) SubTotal,
		    Except, ExceptInfo, CusKeep, CusKeepInfo, ComKeep, ComKeepInfo,
		    (CMA + Cash + NowCashTmp - Except + CusKeep + ComKeep) Total
		FROM
		    (SELECT b.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder,
		        TradeMoney, TradeType, TradeTypeNm,
		        IFNULL((SELECT InvestTradeMoney FROM
					(SELECT CusCd, SUM(InvestTradeMoney) InvestTradeMoney
		                FROM
		                    (SELECT CusCd, SUM(InvestTradeMoney) InvestTradeMoney FROM CS_Invest_Tmp
							WHERE InvestDate <![CDATA[<=]]> #SelDate# AND ApplyFlag = 'N' AND DelFlag = 'N' GROUP BY CusCd
						UNION ALL
							SELECT CusCd, SUM(InvestTradeMoney) InvestTradeMoney FROM CS_Invest_Tmp
							WHERE InvestDate <![CDATA[<=]]> #SelDate# AND ApplyFlag = 'Y' AND DelFlag = 'N' AND ApplyDate > #SelDate#
							GROUP BY CusCd) Tmp1
					GROUP BY CusCd) Tmp2 WHERE CusCd = b.CusCd), 0) NowCashTmp,
		            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
		                WHERE CusCd = b.CusCd AND CateCd = 'CMA' AND InvestCd = CMACd), 0) CMA,
		            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
		                WHERE CusCd = b.CusCd AND CateCd = 'Cash' AND InvestCd = CashCd), 0) Cash,
		            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
		                WHERE CusCd = b.CusCd AND CateCd = 'Except' AND InvestCd = ExceptCd), 0) Except,
		            (SELECT ETCInfo FROM CS_Invest_Status WHERE CusCd = b.CusCd AND CateCd = 'Except' AND InvestCd = ExceptCd) ExceptInfo,
		            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
		                WHERE CusCd = b.CusCd AND CateCd = 'CusKeep' AND InvestCd = CusKeepCd), 0) CusKeep,
		            (SELECT ETCInfo FROM CS_Invest_Status WHERE CusCd = b.CusCd AND CateCd = 'CusKeep' AND InvestCd = CusKeepCd) CusKeepInfo,
		            IFNULL((SELECT CASE InvestTradeMoney WHEN '-' THEN '0' ELSE InvestTradeMoney END FROM CS_Invest_Status
		                WHERE CusCd = b.CusCd AND CateCd = 'ComKeep' AND InvestCd = ComKeepCd), 0) ComKeep,
		            (SELECT ETCInfo FROM CS_Invest_Status WHERE CusCd = b.CusCd AND CateCd = 'ComKeep' AND InvestCd = ComKeepCd) ComKeepInfo
		    FROM
		        (SELECT base.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, TradeMoney, TradeType, TradeTypeNm,
		            CMADate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'CMA' AND InvestDate = CMADate AND InvestType = '1' AND DelFlag = 'N') CMACd,
		            CashDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'Cash' AND InvestDate = CashDate AND InvestType = '1' AND DelFlag = 'N') CashCd,
		            ExceptDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'Except' AND InvestDate = ExceptDate AND InvestType = '1' AND DelFlag = 'N') ExceptCd,
		            CusKeepDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'CusKeep' AND InvestDate = CusKeepDate AND InvestType = '1' AND DelFlag = 'N') CusKeepCd,
		            ComKeepDate, (SELECT MAX(InvestCd) FROM CS_Invest_Status WHERE CusCd = base.CusCd AND CateCd = 'ComKeep' AND InvestDate = ComKeepDate AND InvestType = '1' AND DelFlag = 'N') ComKeepCd
		    FROM
		        (SELECT cus.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, TradeType, CASE TradeType WHEN '1' THEN '기간별' ELSE '건별' END TradeTypeNm,
		            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
		                WHERE a.CusCd = cus.CusCd AND CateCd = 'CMA' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> #SelDate#) CMADate,
		            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
		                WHERE a.CusCd = cus.CusCd AND CateCd = 'Cash' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> #SelDate#) CashDate,
		            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
		                WHERE a.CusCd = cus.CusCd AND CateCd = 'Except' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> #SelDate#) ExceptDate,
		            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
		                WHERE a.CusCd = cus.CusCd AND CateCd = 'CusKeep' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> #SelDate#) CusKeepDate,
		            (SELECT MAX(InvestDate) InvestDate FROM CS_Invest_Status a
		                WHERE a.CusCd = cus.CusCd AND CateCd = 'ComKeep' AND InvestType = '1' AND DelFlag = 'N' AND InvestDate <![CDATA[<=]]> #SelDate#) ComKeepDate
		    FROM CS_Cus_Info cus
		    LEFT OUTER JOIN CS_Trade trade ON cus.CusCd = trade.CusCd
		    WHERE cus.CusStatus IN ('2' , '6') AND cus.DelFlag = 'N' AND trade.DelFlag = 'N'
		    <isNotEqual property="TradeType" compareValue="0">
				AND TradeType = #TradeType#
			</isNotEqual>
		    GROUP BY CusCd) base
		    LEFT OUTER JOIN
			(SELECT CusCd, TradeCd,
		            SUM(TradeMoney) - IFNULL((SELECT SUM(TradeMoney) TradeMoney FROM CS_Trade_Money
		                WHERE CusCd = mainmoney.CusCd AND TradeMoneyFlag IN ('2', '4') AND DelFlag = 'N' AND TradeMoneyDate <![CDATA[<=]]> #SelDate#), 0) TradeMoney
		    FROM CS_Trade_Money mainmoney
		    WHERE TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N' AND TradeMoneyDate <![CDATA[<=]]> #SelDate#
		    GROUP BY CusCd) money ON base.CusCd = money.CusCd) b) cuscashlist
		<isNotEmpty property="CusStatus">
			<isNotEqual property="CusStatus" compareValue="All">WHERE CusStatus = #CusStatus#</isNotEqual>
		</isNotEmpty>
		<isNotEmpty property="EventFlag">ORDER BY TradeType, CusStatusOrder, TradeMoney+0 DESC</isNotEmpty>
		<isEmpty property="EventFlag">
			<isEmpty property="OrderKey">ORDER BY CusStatusOrder, TradeMoney+0 DESC</isEmpty>
			<isNotEmpty property="OrderKey">
				<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
				<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
			</isNotEmpty>
		</isEmpty>
	</select>
	
	<!-- 일괄등록을 위한 CMA 및 예수금 등록 여부 받기 -->
	<select id="cusDAO.GetForAllCashInvestCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT InvestCd FROM CS_Invest_Status WHERE CusCd = LPAD(#CusCd#, 12, 0) AND CateCd = #CateCd# AND InvestDate = #InvestDate# AND DelFlag = 'N']]>
	</select>
	
	<!-- 일괄등록을 위한 기존 CMA 및 예수금 삭제하기 -->
	<update id="cusDAO.ForAllCashInvestDelEnd">
		UPDATE CS_Invest_Status
			SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun#
		WHERE CusCd = LPAD(#CusCd#, 12, 0) AND CateCd = #CateCd# AND InvestType = #InvestType# AND InvestCd = #InvestCd#
	</update>
	
	<!-- 일괄 현금 등록 완료 -->
	<insert id="cusDAO.CusInvestAllAddEnd_Cash" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Status (CusCd, CateCd, InvestType, InvestCd, InvestTradeMoney, InvestDate, ETCInfo, ProcType, RegDate, RegPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
<!-- 			(LPAD(#[].CusCd#, 12, 0), #[].CateCd#, #[].InvestType#, #[].InvestCd#, TRIM(REPLACE(REPLACE(#[].InvestTradeMoney#, ',', ''), ' ', '')), #[].InvestDate#, #[].ETCInfo#, #[].ProcType#, now(), #[].RegPerSabun#, 'N') -->
			(LPAD(#[].CusCd#, 12, 0), #[].CateCd#, #[].InvestType#,
				(SELECT IFNULL(LPAD(MAX(InvestCd) + 1, 12, 0), '000000000001') FROM CS_Invest_Status d WHERE CusCd = LPAD(#[].CusCd#, 12, 0) AND CateCd = #[].CateCd# AND InvestType = #[].InvestType#),
			TRIM(REPLACE(REPLACE(#[].InvestTradeMoney#, ',', ''), ' ', '')), #[].InvestDate#, #[].ETCInfo#, #[].ProcType#, now(), #[].RegPerSabun#, 'N')
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 현금 현황 버튼 리스트 받아오기 -->
	<select id="cusDAO.GetCashCateList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT 'FULL' CateCd, '전체' CateNm, '' CateOrder UNION ALL
		SELECT CateCd, CateNm, CateOrder FROM CS_Cate WHERE CateType = '2' AND DelFlag = 'N' UNION ALL
		SELECT 'CashTmp' CateCd, '예수금+2' CateNm, '2' CateOrder
		ORDER BY CateOrder, CateNm
	</select>
	
	<!-- 고객별 현금 현황 리스트 (가장 최근에 등록된 데이터들을 불러온다.) -->
	<select id="cusDAO.GetCusInvestList_Cash" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CateCd, CateNm, CateType, CateOrder,
		    InvestType, InvestCd, InvestTradeMoney, InvestDate, ETCInfo, ProcType, FromNm, FromMoney FROM (
		SELECT val.CusCd, val.CateCd, val.CateNm, val.CateType, val.CateOrder,
		    val.InvestType, val.InvestCd, val.InvestTradeMoney, val.InvestDate, val.ETCInfo, ProcType, '' FromNm, '' FromMoney
		FROM
		    (SELECT  CusCd, main.CateCd, cate.CateNm, cate.CateType, cate.CateOrder,
            	InvestType, InvestCd, FORMAT(InvestTradeMoney, 0) InvestTradeMoney, InvestDate, ETCInfo, ProcType 
		    FROM CS_Invest_Status main, CS_Cate cate
		    WHERE CusCd = #CusCd# AND main.CateCd = cate.CateCd AND main.DelFlag = 'N' AND main.InvestType = '1' AND cate.CateType = '2'
		    <isEqual property="searchCondition" compareValue="1">
		    	<isNotEmpty property="SearchSDate">
			    	<isNotEmpty property="SearchEDate">AND InvestDate BETWEEN #SearchSDate# AND #SearchEDate#</isNotEmpty>
			    </isNotEmpty>
		    </isEqual>
		    ) val,
		    (SELECT  CusCd, CateCd, MAX(InvestDate) InvestDate, CateType FROM (
				SELECT CusCd, a.CateCd, InvestDate, CateType FROM CS_Invest_Status a, CS_Cate b
					WHERE CusCd = #CusCd# AND a.CateCd = b.CateCd AND CateType = '2' AND a.DelFlag ='N') data
			WHERE CateType = '2' AND InvestDate <![CDATA[<=]]> #SelDate#
			GROUP BY CusCd, CateCd) date
		    
		WHERE val.CusCd = date.CusCd AND val.CateCd = date.CateCd
		<isNotEqual property="searchCondition" compareValue="1">
			AND val.InvestDate = date.InvestDate
			AND CASE WHEN val.CateCd NOT IN ('Cash', 'CMA') THEN InvestTradeMoney != 0 ELSE 1 = 1 END
		</isNotEqual>
		UNION ALL
		SELECT CusCd, 'CashTmp' CateCd, '예수금+2' CateNm, '2' CateType, '2' CateOrder,
			'1' InvestType, '' InvestCd, FORMAT(SUM(InvestTradeMoney), 0) InvestTradeMoney, '' InvestDate, '' ETCInfo,
			'' ProcType, GROUP_CONCAT(FromNm) FromNm, GROUP_CONCAT(FromMoney) FromMoney FROM (
				SELECT CusCd, GROUP_CONCAT(CateNm SEPARATOR '_-_') FromNm, GROUP_CONCAT(FORMAT(InvestTradeMoney, 0) SEPARATOR '_-_') FromMoney, SUM(InvestTradeMoney) InvestTradeMoney FROM (
					SELECT CusCd, a.CateCd, CateNm, InvestTradeMoney FROM CS_Invest_Tmp a, CS_Cate b
						WHERE a.CateCd = b.CateCd AND InvestDate <![CDATA[<=]]> #SelDate# AND ApplyFlag = 'N' AND a.DelFlag = 'N') aa
					GROUP BY CusCd
				UNION ALL
				SELECT CusCd, GROUP_CONCAT(CateNm SEPARATOR '_-_') FromNm, GROUP_CONCAT(FORMAT(InvestTradeMoney, 0) SEPARATOR '_-_') FromMoney, SUM(InvestTradeMoney) InvestTradeMoney FROM (
					SELECT CusCd, a.CateCd, CateNm, InvestTradeMoney FROM CS_Invest_Tmp a, CS_Cate b
						WHERE a.CateCd = b.CateCd AND InvestDate <![CDATA[<=]]> #SelDate# AND ApplyFlag = 'Y' AND a.DelFlag = 'N' AND ApplyDate > #SelDate#) bb
		GROUP BY CusCd) cc
		WHERE CusCd = #CusCd#
		) cuscash
<!-- 		WHERE InvestTradeMoney != '0' -->
		<isNotEmpty property="CateCd">
			<isNotEqual property="CateCd" compareValue="FULL">WHERE CateCd = #CateCd#</isNotEqual>
		</isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY CateOrder, CateNm, InvestDate DESC</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 고객별 현금 등록을 위한 현금 리스트 받아오기 -->
	<select id="cusDAO.GetCashAddList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT IFNULL(b.CusCd, #CusCd#) CusCd, a.CateCd, a.CateNm,
			CASE a.CateCd WHEN 'CMA' THEN 'Cash' WHEN 'Cash' THEN 'Cash' ELSE 'ETC' END Type,
		    IFNULL(b.InvestCd, '000000000001') InvestCd, b.LastInvestCd, b.InvestTradeMoney, b.InvestDate, b.ETCInfo FROM CS_Cate a
		        LEFT OUTER JOIN
		        (
		        SELECT main.CusCd, main.CateCd,
				    maxdata.InvestCd, maxdata.LastInvestCd, InvestTradeMoney, maxdata.InvestDate, ETCInfo
				FROM
				    CS_Invest_Status main,
				    (SELECT a.CusCd, a.CateCd, a.InvestCd, b.InvestCd LastInvestCd, InvestDate
				    FROM
				        (SELECT CusCd, a.CateCd, b.CateType, IFNULL(LPAD(MAX(InvestCd) + 1, 12, 0), '000000000001') InvestCd
							FROM CS_Invest_Status a, CS_Cate b
							WHERE CusCd = #CusCd# AND a.CateCd = b.CateCd AND b.CateType = '2'
							GROUP BY CusCd , CateCd) a
						LEFT OUTER JOIN
						(SELECT CusCd, a.CateCd, b.CateType, MAX(InvestCd) InvestCd, MAX(InvestDate) InvestDate
							FROM CS_Invest_Status a, CS_Cate b
							WHERE CusCd = #CusCd# AND a.CateCd = b.CateCd AND b.CateType = '2' AND a.DelFlag = 'N'
							GROUP BY CusCd , CateCd) b
						ON a.CateCd = b.CateCd) maxdata
<!-- 					WHERE main.CusCd = maxdata.CusCd AND main.CateCd = maxdata.CateCd AND main.InvestCd = maxdata.LastInvestCd -->
					WHERE main.CusCd = maxdata.CusCd AND main.CateCd = maxdata.CateCd AND main.InvestDate = maxdata.InvestDate AND main.DelFlag = 'N'
		        ) b ON a.CateCd = b.CateCd   
		WHERE a.CateType = '2' AND a.DelFlag = 'N'
		ORDER BY Type, CateCd
	</select>
	
	<!-- 고객별 현금 현황 등록 완료 -->
	<insert id="cusDAO.CusInvestAddEnd_Cash" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Status (CusCd, CateCd, InvestType, InvestCd, InvestTradeMoney, InvestDate, ETCInfo,
		RegDate, RegPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
		 (#[].CusCd#, #[].CateCd#, #[].InvestType#, #[].InvestCd#, TRIM(REPLACE(#[].InvestTradeMoney#, ',', '')), #[].InvestDate#, #[].ETCInfo#,
		 now(), #[].RegPerSabun#, 'N')
		</iterate>
		</dynamic>
	</insert>
																<!-- 	현금	 	-->
	
																<!-- 	사모투자	 	-->
	<!-- 투자개요 알람 리스트 -->
	<select id="cusDAO.GetAlarmList" resultClass="egovMap">
		SELECT InSuCd, InSuNm, ObjNm, AlarmDate1, AlarmDate2, DDay FROM (
		    SELECT InSuCd, InSuNm, '이자' ObjNm, InSuIzaDay AlarmDate1, '' AlarmDate2, InSuIzaFlag,
		    	DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuIzaDay) DDay FROM CS_Invest_Summary
		        WHERE DelFlag = 'N' AND InSuIzaDay != '' AND InSuIzaDay != '-'
		        AND DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuIzaDay) <![CDATA[>=]]> '-2' AND (InSuIzaFlag = 'N' OR InSuIzaFlag IS NULL)
<!-- 		        AND InSuIzaDay <![CDATA[<=]]> #SelDate# AND (InSuIzaFlag = 'N' OR InSuIzaFlag IS NULL) -->
		    UNION ALL
		    SELECT InSuCd, InSuNm, '조기상환' ObjNm, InSuRepayPeriod1, InSuRepayPeriod2, InSuRepayFlag,
		    	DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuRepayPeriod1) DDay FROM CS_Invest_Summary
		        WHERE DelFlag = 'N' AND InSuRepayPeriod1 !=''
		        AND DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuRepayPeriod1) <![CDATA[>=]]> '-2' AND (InSuRepayFlag = 'N' OR InSuRepayFlag IS NULL)
<!-- 		        AND InSuRepayPeriod1 <![CDATA[<=]]> #SelDate# AND (InSuRepayFlag = 'N' OR InSuRepayFlag IS NULL) -->
		    UNION ALL
		    SELECT InSuCd, InSuNm, '리픽싱' ObjNm, InSuReFixDay, '', InSuReFixFlag,
		    	DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuReFixDay) DDay FROM CS_Invest_Summary
		        WHERE DelFlag = 'N' AND InSuReFixDay !=''
		        AND DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuReFixDay) <![CDATA[>=]]> '-2' AND (InSuReFixFlag = 'N' OR InSuReFixFlag IS NULL)
<!-- 		        AND DATE_ADD(InSuReFixDay, INTERVAL - 1 DAY) <![CDATA[<=]]> #SelDate# AND (InSuReFixFlag = 'N' OR InSuReFixFlag IS NULL) -->
		    UNION ALL
			SELECT InSuCd, InSuNm, '워런트행사' ObjNm, InSuClaimStart, InSuClaimEnd, InSuClaimFlag,
				DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuClaimStart) DDay FROM CS_Invest_Summary
				WHERE DelFlag = 'N' AND InSuClaimStart !=''
				 AND DATEDIFF(DATE_FORMAT(#SelDate#, '%Y-%m-%d'), InSuClaimStart) <![CDATA[>=]]> '-2' AND (InSuClaimFlag = 'N' OR InSuClaimFlag IS NULL)) data
<!-- 				AND DATEDIFF(InSuClaimStart, NOW()) <![CDATA[<=]]> 5 AND (InSuClaimFlag = 'N' OR InSuClaimFlag IS NULL)) data -->
		 <isEmpty property="OrderKey">ORDER BY AlarmDate2</isEmpty>
		 <isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 알람확인 완료 -->
	<update id="cusDAO.AlarmCheckEnd">
		UPDATE CS_Invest_Summary SET 
		<isEqual property="objNm" compareValue="InSuRepayFlag">	InSuRepayFlag	= "Y", InSuRepayDate	= now(), InSuRepayPerSabun	= #RegPerSabun#</isEqual>
		<isEqual property="objNm" compareValue="InSuIzaFlag">	InSuIzaFlag		= "Y", InSuIzaDate		= now(), InSuIzaPerSabun	= #RegPerSabun#</isEqual>
		<isEqual property="objNm" compareValue="InSuRefixFlag">	InSuRefixFlag	= "Y", InSuRefixDate	= now(), InSuRefixPerSabun	= #RegPerSabun#</isEqual>
		<isEqual property="objNm" compareValue="InSuClaimFlag">	InSuClaimFlag	= "Y", InSuClaimDate	= now(), InSuClaimPerSabun	= #RegPerSabun#</isEqual>
		WHERE InSuCd = #InSuCd# AND DelFlag = 'N'
	</update>
	
	<!-- 투자개요 리스트 -->
	<select id="cusDAO.GetInSumList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT insumlist.InSuCd, InSuNm, (select ISICSaChaecon from cs_invest_summary_incus where insucd=insumlist.InSuCd and cuscd=#CusCd# AND DELFLAG='N' group by InSuCd) ISICSaChaecon,
		(select ISICWarCon from cs_invest_summary_incus where insucd=insumlist.InSuCd and cuscd=#CusCd# AND DELFLAG='N' group by InSuCd) ISICWarCon, insumlist.InSuCom, WarCateCd, SecCateCd, 
		(select BondCateCd from cs_invest_summary where insucd=insumlist.InSuCd AND DELFLAG='N' ) BondCateCd,ROUND(OwnWarCnt / (SecTotalCnt + OwnWarCnt) * 100, 2) SecShare,
			GROUP_CONCAT(refix.LogRefixDay) LogRefixDay, GROUP_CONCAT(refix.LogNowPrice) LogNowPrice, GROUP_CONCAT(refix.LogRefixPrice) LogRefixPrice, GROUP_CONCAT(refix.LogRefixReason) LogRefixReason,
<!-- 		    FORMAT(UnitPrice, 0) UnitPrice, CASE UnitPrice WHEN 0 THEN NULL ELSE ROUND(((UnitPrice / InSuNowPrice) - 1) * 100, 1) END ReturnPer, -->
		    CASE WHEN SellUnitPrice IS NULL THEN FORMAT(UnitPrice, 0) ELSE FORMAT(SellUnitPrice, 0) END UnitPrice,
		    CASE WHEN SellUnitPrice IS NULL THEN 
				CASE UnitPrice WHEN 0 THEN NULL ELSE ROUND(((UnitPrice / InSuNowPrice) - 1) * 100, 1) END
				ELSE ROUND(((SellUnitPrice / InSuNowPrice) - 1) * 100, 1) 
			END ReturnPer,
		    
		    InSuChungDay, insumlist.InSuNabDay, InSuSaChaeDay, InSuExpiryRate, InSuRepayDay, InSuRepayIza,
		    InSuRepayPeriod1, InSuRepayPeriod2, InSuRepayFlag, InSuRepayMethod, InSuIzaDay, InSuIzaFlag,
		    InSuSurfaceRate, FORMAT(InSuFirstPrice, 0) InSuFirstPrice, FORMAT(InSuBasePrice, 0) InSuBasePrice, InSuRefixLimit, FORMAT(InSuRefixLimitPrice, 0) InSuRefixLimitPrice,
		    CASE WHEN InSuNowPrice = InSuRefixLimitPrice THEN 'Y' ELSE 'N' END LimitFlag,
		    FORMAT(InSuNowPrice, 0) InSuNowPrice, InSuRefixDay, InSuRefixFlag, InSuRefixMethod,
		    ClaimFlag, InSuClaimStart, InSuClaimEnd, DATEDIFF(InSuClaimEnd, NOW()) InSuClaimExtraDay,
		    InSuBuyBack, InSuBuyBackPre, InSuCallOption, InSuYtc, InSuCallStart, InSuCallEnd, FORMAT(InSuOutMoney, 0) InSuOutMoney, FORMAT(InSuSumMoney, 0) InSuSumMoney,
		    InSuBondForm, InSuWar, InSuETC, DelFlag, OwnWar, SecTotalCnt,
		    CusManagerSabun, CusManagerNm, ReturnDate, ReturnRate, 
		    SellUnitPriceDate, SellUnitPricePerSabun, CASE WHEN HomeViewFlag = 'Y' THEN 'O' ELSE 'X' END HomeViewFlag
		FROM
		    (SELECT InSuCd, InSuNm, InSuCom, WarCateCd, SecCateCd, FLOOR(OwnWar / InSuNowPrice) OwnWarCnt,
	            (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = SecCateCd AND PriceDate = UnitPriceDate) UnitPrice,
	            InSuChungDay, InSuNabDay, InSuSaChaeDay, InSuExpiryRate, InSuRepayDay, InSuRepayIza,
	            InSuRepayPeriod1, InSuRepayPeriod2, InSuRepayFlag, InSuRepayMethod, InSuIzaDay, InSuIzaFlag,
	            InSuSurfaceRate, InSuFirstPrice, InSuBasePrice, InSuRefixLimit, InSuRefixLimitPrice,
	            InSuNowPrice, InSuRefixDay, InSuRefixFlag, InSuRefixMethod,
	            CASE WHEN InSuClaimStart <![CDATA[<=]]> #SelDate# AND InSuClaimEnd <![CDATA[>=]]> #SelDate# THEN 'O' ELSE 'X' END ClaimFlag, InSuClaimStart, InSuClaimEnd,
	            InSuBuyBack, InSuBuyBackPre, InSuCallOption, InSuYtc, InSuCallStart, InSuCallEnd, InSuOutMoney, InSuSumMoney,
	            InSuBondForm, InSuWar, InSuETC, DelFlag, OwnWar, SecTotalCnt, CusManagerSabun, CusManagerNm, ReturnDate, ReturnRate,
	            SellUnitPrice, SellUnitPriceDate, SellUnitPricePerSabun, HomeViewFlag
		    FROM
		        (SELECT InSuCd, InSuNm, InSuCom, WarCateCd, SecCateCd,
		            (SELECT MAX(PriceDate) PriceDate FROM CS_Cate_Price WHERE DelFlag = 'N' AND PriceDate <![CDATA[<=]]> #SelDate# AND CateCd = SecCateCd) UnitPriceDate,
		            InSuChungDay, InSuNabDay, InSuSaChaeDay, InSuExpiryRate, InSuRepayDay, InSuRepayIza,
		            InSuRepayPeriod1, InSuRepayPeriod2, InSuRepayFlag, InSuRepayMethod, InSuIzaDay, InSuIzaFlag,
		            InSuSurfaceRate, InSuFirstPrice, InSuBasePrice, InSuRefixLimit, InSuRefixLimitPrice,
		            InSuNowPrice, InSuRefixDay, InSuRefixFlag, InSuRefixMethod,
		            InSuClaimStart, InSuClaimEnd,
		            InSuBuyBack, InSuBuyBackPre, InSuCallOption, InSuYtc, InSuCallStart, InSuCallEnd, InSuOutMoney, InSuSumMoney, 
		            InSuBondForm, InSuWar, InSuETC, IFNULL(SecTotalCnt, 0) SecTotalCnt, CusManagerSabun, (SELECT PerNm FROM erp.ERP_Per WHERE PerSabun = CusManagerSabun) CusManagerNm, ReturnDate, ReturnRate, DelFlag,
		            (SELECT CASE WHEN InSuSumMoney != 0 THEN ROUND((InSuSumMoney * (1 - InSuBuyBack)) - ISICWar, - 6) + OwnWar ELSE OwnWar END War
		                FROM
		                    (SELECT InSuCd, InSuSumMoney, InSuBuyBack, ISICWar + IFNULL(EtcWar, 0) ISICWar FROM
							    (SELECT a.InSuCd, (InSuSumMoney * 100000000) InSuSumMoney, REPLACE(InSuBuyBack, '%', '') / 100 InSuBuyBack, SUM(b.ISICWar) ISICWar,
						            (SELECT (ISICBond * (1 - InSuBuyBack) - ISICWar) EtcWar FROM
						                    (SELECT a.InSuCd, a.insunm, (InSuSumMoney * 100000000) InSuSumMoney, REPLACE(InSuBuyBack, '%', '') / 100 InSuBuyBack,
						                        SUM(b.ISICBond) ISICBond, SUM(b.ISICWar) ISICWar
						                FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
						                WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N' AND b.CusCd = c.CusCd AND c.CusStatus = '6'
						                GROUP BY InSuCd) synergy
						                WHERE InSuCd = a.InSuCd) EtcWar
							    FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
							    WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N' AND b.CusCd = c.CusCd
							            AND (c.CusStatus IN ('2', '4', '6', '8') OR c.CusCd IN ('000000000032' , '000000000033'))
							    GROUP BY InSuCd) a) etc,
							(SELECT InSuCd, ROUND((WarPrice * (IFNULL(SUM(WarInCnt), 0) - IFNULL(SUM(WarOutCnt), 0))), - 6) OwnWar
		                FROM
		                    (SELECT b.InSuCd, a.CusCd, SUM(InvestCnt) WarInCnt,
		                        (SELECT SUM(InvestCnt) FROM CS_Invest_Status d WHERE d.CusCd = a.CusCd AND d.CateCd = b.WarCateCd AND d.DelFlag = 'N' AND d.InvestType = '2' GROUP BY d.CusCd) WarOutCnt,
		                        InSuNowPrice WarPrice
		                FROM CS_Invest_Status a, CS_Invest_Summary b, CS_Cus_Info c
		                WHERE a.CateCd = b.WarCateCd AND a.DelFlag = 'N' AND a.InvestType = '1' AND a.CusCd = c.CusCd AND a.CusCd IN ('000000000032' , '000000000033') AND b.DelFlag = 'N'
		                GROUP BY b.InSuCd , a.CusCd) cnt
		                GROUP BY InSuCd) own
		                WHERE etc.InSuCd = own.InSuCd AND etc.InSuCd = InSum.InSuCd) OwnWar,
		                SellUnitPrice, DATE_FORMAT(SellUnitPriceDate, '%Y-%m-%d') SellUnitPriceDate, SellUnitPricePerSabun, HomeViewFlag
		    FROM CS_Invest_Summary InSum
		<isNotEmpty property="CusCd">
			WHERE InSuCd IN (SELECT DISTINCT InSuCd FROM CS_Invest_Summary_InCus WHERE CusCd = #CusCd# AND ISICInMoneyDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N')
		</isNotEmpty>
		) base
		<isEqual property="DelFlag" compareValue="Y">WHERE DelFlag = 'Y'</isEqual>
		<isEqual property="DelFlag" compareValue="N">WHERE DelFlag = 'N'</isEqual>
		<isEqual property="DelFlag" compareValue="All">WHERE 1 = 1</isEqual>
		<isNotEmpty property="InSuNm">AND InSuNm LIKE '%$InSuNm$%'</isNotEmpty>
		<isNotEmpty prepend="AND" property="searchKeyword"> (InSuNm LIKE '%$searchKeyword$%' OR CusManagerNm LIKE '%$searchKeyword$%')</isNotEmpty>
		<isNotEmpty property="InSuCd">
			AND InSuCd = #InSuCd#
		</isNotEmpty>
		) insumlist
			LEFT OUTER JOIN
			(SELECT InSuCd, (SELECT InSuNabDay FROM CS_Invest_Summary WHERE InSuCd = refix.InSuCd) InSuNabDay,
			    InSuRefixDay LogRefixDay, CONCAT(InSuNowPrice, '원') LogNowPrice, CONCAT(InSuRefixPrice, '원') LogRefixPrice, InSuRefixReason LogRefixReason
			FROM CS_Invest_Summary_Refix refix
			ORDER BY InSuNabDay, InSuRefixDay) refix
			ON insumlist.InSuCd = refix.InSuCd
		<isEqual property="EventFlag" compareValue="Report">
			WHERE SecCateCd IN (
				SELECT ComCd FROM
				    (SELECT buy.CusCd, buy.CateCd, ComCd, InCnt, OutCnt, (InCnt - IFNULL(OutCnt, 0)) NowCnt
				    FROM
				        (SELECT CusCd, a.CateCd, SUM(InvestCnt) InCnt, ComCd
				    FROM CS_Invest_Status a, CS_Cate b
				    WHERE CusCd = #CusCd# AND InvestType = '1' AND a.InvestDate <![CDATA[<=]]> #SelDate# AND a.DelFlag = 'N' AND a.CateCd = b.CateCd
				    GROUP BY CusCd , a.CateCd) buy
				    LEFT OUTER JOIN
					(SELECT CusCd, CateCd, SUM(InvestCnt) OutCnt FROM CS_Invest_Status
				    WHERE CusCd = #CusCd# AND InvestType = '2' AND InvestDate <![CDATA[<=]]> #SelDate# AND DelFlag = 'N'
				    GROUP BY CusCd , CateCd) sell ON buy.CusCd = sell.CusCd AND buy.CateCd = sell.CateCd) a
				WHERE NowCnt != 0
			)
		</isEqual>
			GROUP BY insumlist.InSuCd
		<isEmpty property="OrderKey">ORDER BY InSuNabDay, InSuNm, DelFlag</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 투자개요 등록을 위한 투자개요코드 받아오기 -->
	<select id="cusDAO.GetInSuCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT IFNULL(LPAD(MAX(InSuCd) + 1, 12, 0), '000000000001') InSuCd FROM CS_Invest_Summary]]>
	</select>
	
	<!-- 투자개요 등록&수정 완료  -->
	<insert id="cusDAO.InSumProcEnd">
		INSERT INTO CS_Invest_Summary (InSuCd, InSuNm, InSuCom, WarCateCd, SecCateCd, BondCateCd, InvestOfferCd, InSuChungDay, InSuNabDay, InSuSaChaeDay, InSuExpiryRate,
			InSuRepayDay, InSuRepayIza, InSuRepayPeriod1, InSuRepayPeriod2, InSuRepayMethod, InSuRepayRate,
			InSuIzaDay, InSuSurfaceRate, InSuSurfaceDay,
			InSuFirstPrice, InSuBasePrice, InSuRefixLimit, InSuRefixLimitPrice, InSuNowPrice, InSuRefixDay, InSuRefixMethod,
			InSuClaimStart, InSuClaimEnd, InSuBuyBack, InSuBuyBackPre, InSuCallOption, InSuYtc, InSuCallStart, InSuCallEnd, InSuOutMoney, InSuSumMoney,
			InSuBondForm, InSuWar, SecTotalCnt, InSuETC, CusManagerSabun, HomeViewFlag, ReturnDate, ReturnRate, RegDate, RegPerSabun, DelFlag)
		VALUES(#InSuCd#, #InSuNm#, #InSuCom#, #WarCateCd#, #SecCateCd#, #BondCateCd#, #InvestOfferCd#, #InSuChungDay#, #InSuNabDay#, #InSuSaChaeDay#, #InSuExpiryRate#,
			 #InSuRepayDay#, #InSuRepayIza#, #InSuRepayPeriod1#, #InSuRepayPeriod2#, #InSuRepayMethod#, #InSuRepayRate#,
			 #InSuIzaDay#, #InSuSurfaceRate#, #InSuSurfaceDay#,
			 REPLACE(#InSuFirstPrice#, ',', ''), REPLACE(#InSuBasePrice#, ',', ''), #InSuRefixLimit#, REPLACE(#InSuRefixLimitPrice#, ',', ''), REPLACE(#InSuNowPrice#, ',', ''), #InSuRefixDay#, #InSuRefixMethod#,
			 #InSuClaimStart#, #InSuClaimEnd#, #InSuBuyBack#, #InSuBuyBackPre#, #InSuCallOption#, #InSuYtc#, #InSuCallStart#, #InSuCallEnd#, REPLACE(#InSuOutMoney#, ',', ''), REPLACE(#InSuSumMoney#, ',', ''),
			 #InSuBondForm#, #InSuWar#, REPLACE(#SecTotalCnt#, ',', ''), #InSuETC#, #CusManagerSabun#, #HomeViewFlag#, #ReturnDate#, #ReturnRate#, NOW(), #RegPerSabun#, 'N')
		ON DUPLICATE KEY UPDATE
		WarCateCd = VALUES(WarCateCd), SecCateCd = VALUES(SecCateCd), BondCateCd = VALUES(BondCateCd), InvestOfferCd = VALUES(InvestOfferCd), InSuChungDay = VALUES(InSuChungDay), InSuNabDay = VALUES(InSuNabDay),
		InSuSaChaeDay = VALUES(InSuSaChaeDay), InSuExpiryRate = VALUES(InSuExpiryRate), InSuRepayDay = VALUES(InSuRepayDay),
		InSuRepayIza = VALUES(InSuRepayIza), InSuRepayPeriod1 = VALUES(InSuRepayPeriod1), InSuRepayPeriod2 = VALUES(InSuRepayPeriod2),
		InSuRepayMethod = VALUES(InSuRepayMethod), InSuRepayRate = VALUES(InSuRepayRate), InSuIzaDay = VALUES(InSuIzaDay),
		InSuSurfaceRate = VALUES(InSuSurfaceRate), InSuSurfaceDay = VALUES(InSuSurfaceDay),
		InSuFirstPrice = VALUES(InSuFirstPrice), InSuBasePrice = VALUES(InSuBasePrice), InSuRefixLimit = VALUES(InSuRefixLimit), 
		InSuRefixLimitPrice = VALUES(InSuRefixLimitPrice), InSuNowPrice = VALUES(InSuNowPrice),
		InSuRefixDay = VALUES(InSuRefixDay), InSuRefixMethod = VALUES(InSuRefixMethod),
		InSuClaimStart = VALUES(InSuClaimStart), InSuClaimEnd = VALUES(InSuClaimEnd), InSuBuyBack = VALUES(InSuBuyBack), InSuBuyBackPre = VALUES(InSuBuyBackPre), 
		InSuCallOption = VALUES(InSuCallOption), InSuYtc = VALUES(InSuYtc), 
		InSuCallStart = VALUES(InSuCallStart), InSuCallEnd = VALUES(InSuCallEnd),
		InSuOutMoney = VALUES(InSuOutMoney), InSuSumMoney = VALUES(InSuSumMoney),
		InSuBondForm = VALUES(InSuBondForm), InSuWar = VALUES(InSuWar), SecTotalCnt = VALUES(SecTotalCnt), InSuETC = VALUES(InSuETC),
		CusManagerSabun = VALUES(CusManagerSabun), HomeViewFlag = VALUES(HomeViewFlag), ReturnDate = VALUES(ReturnDate), ReturnRate = VALUES(ReturnRate),
		EditDate = NOW(), EditPerSabun = VALUES(RegPerSabun)
	</insert>
	
	<!-- 투자개요 등록&수정에 따른 연관종목 사용여부 업데이트 -->
	<update id="cusDAO.InSumInCateEditEnd">
		{CALL InSumInCateEditEnd()}
	</update>
	
	<!-- 투자개요 수정시 연관종목 변경에 따른 고객 매수 정보 업데이트 -->
	<update id="cusDAO.InSumInCusEditEnd">
		UPDATE CS_Invest_Status
			SET CateCd = #CateCd#
		WHERE InSuCd = #InSuCd# AND CateCd = #OldCateCd# AND DelFlag = 'N'
	</update>
	
	<!-- 투자개요 수정시 리픽싱 정보 등록하기 -->
	<insert id="cusDAO.InSumRefixInfoAddEnd">
		INSERT INTO CS_Invest_Summary_Refix(InSuCd, InSuRefixDay, InSuRefixReason, InSuRefixReasonCd, InSuNowPrice, InSuRefixPrice, RegDate, RegPerSabun)
		VALUES(#InSuCd#, #InSuRefixDay#, #InSuRefixReason#, #InSuRefixReasonCd#, REPLACE(#InSuNowPrice#, ',', ''), REPLACE(#InSuRefixPrice#, ',', ''), NOW(), #RegPerSabun#)
	</insert>
	
	<!-- 투자개요 파일코드 받아오기 -->
	<select id="cusDAO.GetInSumFileCd" parameterClass="cusVO2" resultClass="int">
		<![CDATA[SELECT IFNULL(MAX(FileSeq) + 1, '1') FileSeq FROM CS_Invest_Summary_File WHERE InSuCd = #InSuCd#]]>
	</select>
	
	<!-- 투자개요 파일 등록 완료 -->
	<insert id="cusDAO.InSumFileAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_File (InSuCd, FileSeq, FileNm, FileUpNm, FilePath, FileSize, FileOrder, RegDate, RegPerSabun, DelFlag) VALUES
		<dynamic>
		<iterate conjunction=",">(#[].InSuCd#, LPAD(#[].FileSeq#, 12, 0), #[].FileNm#, #[].FileUpNm#, #[].FilePath#, #[].FileSize#, #[].FileOrder#, now(), #[].RegPerSabun#, 'N')</iterate>
		</dynamic>
	</insert>
	
	<!-- 투자개요 정보 불러오기 -->
	<select id="cusDAO.GetInSumInfo" resultMap="InSumInfo">
		SELECT InSuCd, (SELECT SUBCATECD FROM CS_CATE WHERE CATECD=WarCateCd) SubCateCd, InSuNm, InSuCom, WarCateCd, WarCateNm, SecCateCd, SecCateNm, BondCateCd, BondCateNm, InvestOfferCd, InvestOfferNm,
			ROUND(FLOOR(OwnWar / InSuNowPrice) / (SecTotalCnt + FLOOR(OwnWar / InSuNowPrice)) * 100, 2) SecShare,
			InSuChungDay, InSuNabDay, InSuSaChaeDay, InSuExpiryRate,
			InSuRepayDay, InSuRepayIza, InSuRepayPeriod1, InSuRepayPeriod2, InSuRepayFlag, InSuRepayMethod, InSuRepayRate,
			InSuIzaDay, InSuIzaFlag, InSuSurfaceRate, InSuSurfaceDay,
			FORMAT(InSuFirstPrice, 0) InSuFirstPrice, FORMAT(InSuBasePrice, 0) InSuBasePrice, InSuRefixLimit, FORMAT(InSuRefixLimitPrice, 0) InSuRefixLimitPrice, FORMAT(InSuNowPrice, 0) InSuNowPrice, InSuRefixDay, InSuRefixFlag, InSuRefixMethod,
			InSuClaimStart, InSuClaimEnd, InSuClaimFlag, InSuBuyBack, InSuBuyBackPre, InSuCallOption, InSuYtc, InSuCallStart, InSuCallEnd, InSuOutMoney, InSuSumMoney, InSuBondForm, InSuWar, InSuETC, FORMAT(SecTotalCnt, 0) SecTotalCnt,
			CusManagerSabun, CusManagerNm, HomeViewFlag, HomeViewFlagNm, ReturnDate, ReturnRate, RegDate, RegPerSabun, DelFlag,
			WarMoney, OwnWar, BondMoney FROM (
				SELECT InSuCd, InSuNm, InSuCom,
					WarCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = main.WarCateCd) WarCateNm,
					SecCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = main.SecCateCd) SecCateNm,
					BondCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = main.BondCateCd) BondCateNm,
					InvestOfferCd, (SELECT InvestOfferNm FROM CS_Invest_Offer WHERE InvestOfferCd = main.InvestOfferCd) InvestOfferNm,
					InSuChungDay, InSuNabDay, InSuSaChaeDay, InSuExpiryRate,
					InSuRepayDay, InSuRepayIza, InSuRepayPeriod1, InSuRepayPeriod2, InSuRepayFlag, InSuRepayMethod, InSuRepayRate,
					InSuIzaDay, InSuIzaFlag, InSuSurfaceRate, InSuSurfaceDay,
					InSuFirstPrice, InSuBasePrice, InSuRefixLimit, InSuRefixLimitPrice, InSuNowPrice, InSuRefixDay, InSuRefixFlag, InSuRefixMethod,
					InSuClaimStart, InSuClaimEnd, InSuClaimFlag, InSuBuyBack, InSuBuyBackPre, InSuCallOption, InSuYtc, InSuCallStart, InSuCallEnd, InSuOutMoney, InSuSumMoney, InSuBondForm, InSuWar, InSuETC, IFNULL(SecTotalCnt, 0) SecTotalCnt,
					CusManagerSabun, (SELECT PerNm FROM erp.ERP_Per WHERE PerSabun = CusManagerSabun) CusManagerNm,
					HomeViewFlag, CASE WHEN HomeViewFlag = 'N' THEN '출력안함' ELSE '출력함' END HomeViewFlagNm, ReturnDate, ReturnRate, RegDate, RegPerSabun, DelFlag,
					CASE (SELECT COUNT(*) FROM CS_Invest_Summary_War WHERE InSuCd = main.InSuCd AND DelFlag = 'N') WHEN '0' THEN '등록안됨'
						ELSE CASE (SELECT COUNT(*) FROM CS_Invest_Summary_War WHERE InSuCd = main.InSuCd AND WarSetFlag = 'N' AND DelFlag = 'N') WHEN '0' THEN '모두교부됨'
							ELSE CONCAT((SELECT FORMAT(SUM(WarMoney), 0) FROM CS_Invest_Summary_War WHERE InSuCd = main.InSuCd AND WarSetFlag = 'N' AND DelFlag = 'N'), ' (백만원)')
						END
					END WarMoney,
					(SELECT CASE WHEN InSuSumMoney != 0 THEN ROUND((InSuSumMoney * (1 - InSuBuyBack)) - ISICWar, - 6) + OwnWar ELSE OwnWar END War
						FROM
							(SELECT InSuCd, InSuSumMoney, InSuBuyBack, ISICWar + IFNULL(EtcWar, 0) ISICWar FROM
							    (SELECT a.InSuCd, (InSuSumMoney * 100000000) InSuSumMoney, REPLACE(InSuBuyBack, '%', '') / 100 InSuBuyBack, SUM(b.ISICWar) ISICWar,
							            (SELECT (ISICBond * (1 - InSuBuyBack) - ISICWar) EtcWar FROM
							                    (SELECT a.InSuCd, a.insunm, (InSuSumMoney * 100000000) InSuSumMoney, REPLACE(InSuBuyBack, '%', '') / 100 InSuBuyBack,
							                        SUM(b.ISICBond) ISICBond, SUM(b.ISICWar) ISICWar
							                FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
							                WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N' AND b.CusCd = c.CusCd AND c.CusStatus = '6'
							                GROUP BY InSuCd) synergy
							                WHERE InSuCd = a.InSuCd) EtcWar
							    FROM CS_Invest_Summary a, CS_Invest_Summary_InCus b, CS_Cus_Info c
							    WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N' AND b.CusCd = c.CusCd
							            AND (c.CusStatus IN ('2', '4', '6', '8') OR c.CusCd IN ('000000000032' , '000000000033'))
							    GROUP BY InSuCd) a) etc,
							(SELECT InSuCd, ROUND((WarPrice * (IFNULL(SUM(WarInCnt), 0) - IFNULL(SUM(WarOutCnt), 0))), - 6) OwnWar
						FROM
							(SELECT b.InSuCd, a.CusCd, SUM(InvestCnt) WarInCnt,
								(SELECT SUM(InvestCnt) FROM CS_Invest_Status d WHERE d.CusCd = a.CusCd AND d.CateCd = b.WarCateCd AND d.DelFlag = 'N' AND d.InvestType = '2' GROUP BY d.CusCd) WarOutCnt,
								InSuNowPrice WarPrice
						FROM CS_Invest_Status a, CS_Invest_Summary b, CS_Cus_Info c
						WHERE a.CateCd = b.WarCateCd AND a.DelFlag = 'N' AND a.InvestType = '1' AND a.CusCd = c.CusCd AND a.CusCd IN ('000000000032' , '000000000033')
						GROUP BY b.InSuCd , a.CusCd) cnt
						GROUP BY InSuCd) own
						WHERE etc.InSuCd = own.InSuCd AND etc.InSuCd = main.InSuCd) OwnWar,
						CASE (SELECT COUNT(*) FROM CS_Invest_Summary_Bond WHERE InSuCd = main.InSuCd AND DelFlag = 'N') WHEN '0' THEN '등록안됨'
							ELSE CASE (SELECT COUNT(*) FROM CS_Invest_Summary_Bond WHERE InSuCd = main.InSuCd AND BondSetFlag = 'N' AND DelFlag = 'N') WHEN '0' THEN '모두교부됨'
								ELSE CONCAT((SELECT FORMAT(SUM(BondMoney), 0) FROM CS_Invest_Summary_Bond WHERE InSuCd = main.InSuCd AND BondSetFlag = 'N' AND DelFlag = 'N'), ' (백만원)')
							END
						END BondMoney
					FROM CS_Invest_Summary main
				 WHERE InSuCd = #InSuCd#) info
		<!-- 사용안함 사모투자도 상세보기 할때 내용을 보여준다 WHERE InSuCd = #InSuCd# AND DelFlag = 'N') info -->
	</select>
	
	<!-- 투자개요 리픽싱정보 리스트 받아오기 -->
	<select id="cusDAO.GetInSumRefixList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT InSuCd, (SELECT InSuCom FROM CS_Invest_Summary WHERE InSuCd = refix.InSuCd) InSuCom, InSuRefixDay, InSuRefixReason, InSuRefixReasonCd, FORMAT(InSuNowPrice, 0) InSuNowPrice, FORMAT(InSuRefixPrice, 0) InSuRefixPrice
		FROM CS_Invest_Summary_Refix refix WHERE InSuCd = #InSuCd#
		ORDER BY InSuRefixDay
	</select>
	
	<!-- 투자개요 파일 리스트 받아오기 -->
	<select id="cusDAO.GetInSumFileList" parameterClass="cusVO2" resultClass="egovMap">
		<![CDATA[SELECT InSuCd, FileSeq, FileNm, FileUpNm, REPLACE(FilePath, '\\', '\\\\') FilePath, FileSize, FileOrder, RegDate FROM CS_Invest_Summary_File WHERE InSuCd = #InSuCd# AND DelFlag = 'N' ORDER BY RegDate, FileOrder]]>
	</select>
	
	<!-- 투자개요 파일 삭제 완료 -->
	<update id="cusDAO.InSumFileDelEnd">
		<![CDATA[UPDATE CS_Invest_Summary_File SET DelFlag = 'Y', DelDate = now(), DelPerSabun = #RegPerSabun# WHERE InSuCd = #InSuCd# AND FileSeq = #FileSeq#]]>
	</update>
	
	<!-- 투자개요 매도단가 입력 완료 -->
	<update id="cusDAO.InSumUnitPriceAddEnd">
		UPDATE CS_Invest_Summary SET SellUnitPrice = REPLACE(#SellUnitPrice#, ',', ''), SellUnitPriceDate = NOW(), SellUnitPricePerSabun = #RegPerSabun# WHERE InSuCd = #InSuCd#
	</update>
	
	<!-- 투자개요 사용여부 변경 완료 -->
	<update id="cusDAO.InSumUseFlagEnd">
		UPDATE CS_Invest_Summary SET DelFlag = #DelFlag#, 
		<isEqual property="DelFlag" compareValue="Y">
			DelDate = NOW(), DelPerSabun = #RegPerSabun#, ReturnDate = #ReturnDate#, ReturnRate = #ReturnRate#
		</isEqual>
		<isEqual property="DelFlag" compareValue="N">
			EditDate = NOW(), EditPerSabun = #RegPerSabun#, ReturnDate = '', ReturnRate = ''
		</isEqual>
		WHERE InSuCd = #InSuCd#
	</update>
	
	<!-- 투자개요 탐방리포트 받아오기 -->
	<select id="cusDAO.GetInSumVisitFileList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT REPLACE(path, '\\', '\\\\') FilePath, make_name FileUpNm, real_name FileNm, DATE_FORMAT(a.tm_dt, '%Y-%m-%d') RegDate
		FROM ib_offer a
        JOIN ib_file_info b ON a.s_nb = b.offer_s_nb
        JOIN ib_customer c ON c.s_nb = a.cst_id
        WHERE a.offer_cd = '00003'
        AND (a.a_cpn_id = (SELECT SecCateCd FROM CS_Invest_Summary WHERE InSuCd = #InSuCd#))
		AND DATE_FORMAT(a.tm_dt, '%Y-%m-%d') >= (SELECT InSuNabDay FROM CS_Invest_Summary WHERE InSuCd = #InSuCd#)
		ORDER BY RegDate DESC
	</select>
																<!-- 	사모투자	 	-->
																
																<!-- 	사모투자 이자관리	 	-->
	<!-- 이자 등록을 위한 투자개요 세부내역 불러오기 -->
	<select id="cusDAO.GetInSumInCusForIzaList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT data1.InSuCd, data1.ISICCd, data1.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder,
		    ISICSurfaceIza, InSuIzaDay, ISICIzaSeq, ISICRealIza, ISICRealIzaDay, InvestTax,
		    BondNowCnt, BondPrice, BondPriceDate, ROUND((BondPrice * BondNowCnt), - 6) NowBond
		FROM
		    (SELECT cus.InSuCd, cus.ISICCd, cus.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder,
		            ISICSurfaceIza, InSuIzaDay, (IFNULL(BondInCnt, 0) - IFNULL(BondOutCnt, 0)) BondNowCnt,
		            (SELECT IFNULL(UnitPrice, 0) FROM CS_Cate_Price WHERE CateCd = BondCateCd AND PriceDate = BondPriceDate) BondPrice,
		            BondPriceDate
		    FROM
		        (SELECT inve.InSuCd, inve.ISICCd, inve.CusCd, cusinfo.CusNm, CusStatus, CusStatusNm, CusStatusOrder,
		            InSuIzaDay, InSuSurfaceRate, InSuSurfaceDay, (ISICBond * REPLACE(InSuSurfaceRate, '%', '') / 100 * InSuSurfaceDay / 12) ISICSurfaceIza,
		            BondCateCd, (SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE CateCd = BondCateCd) BondPriceDate
		    FROM CS_Invest_Summary_InCus inve, CS_Cus_Info cusinfo, CS_Invest_Summary cusin
		    WHERE inve.InSuCd = #InSuCd# AND inve.InSuCd = cusin.InSuCd AND inve.DelFlag = 'N' AND inve.CusCd = cusinfo.CusCd AND cusinfo.CusStatus IN ('2', '4', '6', '8')) cus
		    LEFT OUTER JOIN
			(SELECT a.CusCd, SUM(InvestCnt) BondInCnt,
		            (SELECT CEIL(SUM(InvestCnt)) FROM CS_Invest_Status d WHERE d.CusCd = a.CusCd AND d.CateCd = b.BondCateCd AND d.DelFlag = 'N' AND d.InvestType = '2' GROUP BY d.CusCd) BondOutCnt
		    FROM CS_Invest_Status a, CS_Invest_Summary b, CS_Cus_Info c
		    WHERE b.InSuCd = #InSuCd# AND a.CateCd = b.BondCateCd AND a.DelFlag = 'N' AND a.InvestType = '1' AND a.CusCd = c.CusCd
		            AND (c.CusStatus IN ('2', '4', '6', '8') OR a.CusCd IN ('000000000032' , '000000000033'))
		    GROUP BY a.CusCd) bond ON cus.CusCd = bond.CusCd) data1
		        LEFT OUTER JOIN
		    (SELECT a.InSuCd, a.ISICCd, a.CusCd, a.ISICIzaSeq, ISICRealIza, ISICRealIzaDay, InvestTax
		    FROM CS_Invest_Summary_InIza a,
				(SELECT InSuCd, CusCd, MAX(ISICIzaSeq) ISICIzaSeq FROM CS_Invest_Summary_InIza WHERE InSuCd = #InSuCd# AND DelFlag = 'N' GROUP BY InSuCd , CusCd) b
		    WHERE a.InSuCd = b.InSuCd AND a.CusCd = b.CusCd AND a.ISICIzaSeq = b.ISICIzaSeq) data2
				ON data1.InSuCd = data2.InSuCd AND data1.ISICCd = data2.ISICCd AND data1.CusCd = data2.CusCd
		WHERE BondNowCnt != 0
		<isEmpty property="OrderKey">ORDER BY CusStatusOrder, CusNm</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY CusStatusOrder, $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY CusStatusOrder, $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 이자 등록을 위한 이자 순번 받아오기 -->
	<select id="cusDAO.GetISICIzaSeq" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT IFNULL(LPAD(MAX(ISICIzaSeq) + 1, 12, 0), '000000000001') ISICIzaSeq FROM CS_Invest_Summary_InIza WHERE InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND CusCd = #CusCd#]]>
	</select>
	
	<!-- 이자 등록 완료 -->
	<insert id="cusDAO.InSumInCusIzaAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_InIza(InSuCd, ISICCd, CusCd, ISICIzaSeq,
			InvestTradeMoney, InvestTax, ISICRealIza, ISICRealIzaDay, RegDate, RegPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
			(#[].InSuCd#, #[].ISICCd#, #[].CusCd#, #[].ISICIzaSeq#,
				REPLACE(#[].IzaInvestTradeMoney#, ',', ''), REPLACE(#[].IzaInvestTax#, ',', ''), REPLACE(#[].ISICRealIza#, ',', ''), #[].ISICRealIzaDay#, now(), #[].RegPerSabun#, 'N')
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 이자 지급에 따른 다음 이자지급일 업데이트 -->
	<update id="cusDAO.InSumIzaDayEditEnd">
		UPDATE CS_Invest_Summary SET InSuIzaDay = DATE_ADD(InSuIzaDay, INTERVAL InSuSurfaceDay MONTH) WHERE InSuCd = #InSuCd#
	</update>
	
	<!-- 이자 지급후 해당 고객 예수금 업데이트 -->
	<update id="cusDAO.InSumIzaCashUpdate">
		UPDATE CS_Invest_Status
			SET InvestTradeMoney = InvestTradeMoney + REPLACE(#InvestTradeMoney#, ',', ''), EditDate = NOW(), EditPerSabun = #RegPerSabun#
		WHERE CusCd = #CusCd# AND CateCd = 'Cash' AND InvestDate <![CDATA[>]]> #InvestDate# AND InvestDate <![CDATA[<=]]> DATE_FORMAT( NOW(),'%Y-%m-%d' ) AND DelFlag = 'N'
	</update>
																<!-- 	사모투자 이자관리	 	-->
																
																<!-- 	세부내용 관리	 	-->
	<!-- 투자개요 세부내역 등록을 위한 고객리스트 받아오기  -->
	<select id="cusDAO.GetInCusAddList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusNm, a.CusCd, TradeCd, TradeType, TradeSecAccount, CusStatus,
		    InvestOfferCd, DivOfferCd, DivOfferMoney, DivConfirmFlag, InvestOfferFlag, DivInMoneyFlag,
		    (SELECT COUNT(*) FROM CS_Invest_Summary_InCus WHERE InSuCd = #InSuCd# AND CusCd = a.CusCd AND DelFlag = 'N') InCusCnt
		FROM
		    (SELECT CusNm, CusCd, TradeCd, TradeType, TradeSecAccount, CusStatus FROM
		        (SELECT CusNm, cus.CusCd, TradeCd, TradeType, CAST(AES_DECRYPT(UNHEX(trade.TradeSecAccount), 'enc-key') AS CHAR) TradeSecAccount, CusStatus FROM CS_Cus_Info cus
		    LEFT OUTER JOIN CS_Trade trade ON cus.CusCd = trade.CusCd
		        AND trade.TradeCd = (SELECT MAX(TradeCd) TradeCd FROM CS_Trade WHERE CusCd = cus.CusCd AND DelFlag = 'N') AND trade.DelFlag = 'N'
		    WHERE cus.CusStatus IN ('2', '4', '6', '7', '8') AND cus.DelFlag = 'N'
		UNION ALL
			SELECT CusNm, CusCd, '', '', '', CusStatus FROM CS_Cus_Info WHERE CusCd IN ('000000000032' , '000000000033')) incus WHERE CusStatus = #CusStatus#) a
		        LEFT OUTER JOIN
		    (SELECT a.CusCd, a.InvestOfferCd, a.DivOfferCd, (a.DivOfferMoney * 100000000) DivOfferMoney,
		            a.DivConfirmFlag, a.InvestOfferFlag, a.DivInMoneyFlag, a.DelFlag
		    FROM CS_Invest_Offer_DivStatus a, (SELECT  CusCd, InvestOfferCd, MAX(DivOfferCd) DivOfferCd FROM CS_Invest_Offer_DivStatus GROUP BY CusCd , InvestOfferCd) b
		    WHERE a.CusCd = b.CusCd AND a.InvestOfferCd = b.InvestOfferCd AND a.DivOfferCd = b.DivOfferCd
		            AND a.InvestOfferCd = (SELECT InvestOfferCd FROM CS_Invest_Summary WHERE InSuCd = #InSuCd#) AND DelFlag = 'N' AND (DivConfirmFlag = 'Y' OR DivInMoneyFlag = 'Y')) b ON a.cuscd = b.cuscd
		ORDER BY DivInMoneyFlag DESC, IFNULL(TradeType, '2'), CusNm
	</select>
	
	<!-- 투자개요 세부내역 등록을 위한 연관코드 받아오기 -->
	<select id="cusDAO.GetISICCd" parameterClass="cusVO2" resultClass="String">
		<![CDATA[SELECT CAST(IFNULL(LPAD(MAX(ISICCd) + 1, 12, 0), '000000000001') AS UNSIGNED) ISICCd FROM CS_Invest_Summary_InCus WHERE InSuCd = #InSuCd#]]>
	</select>
	
	<!-- 투자개요 세부내역 등록 완료 -->
	<insert id="cusDAO.InCusAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_InCus(InSuCd, ISICCd, CusCd, CusNm,
			ISICBond, ISICWar, ISICInMoney, ISICInMoneyDate,
			ISICSurfaceIza, ISICSecCom, ISICSecAccount,
			ISICSaChaeCon, ISICWarCon, BondCusSeq, RegDate, RegPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
			(#[].InSuCd#, LPAD(#[].ISICCd#, 12, 0), #[].CusCd#, #[].CusNm#,
			IFNULL(REPLACE(#[].ISICBond#, ',', ''), 0), IFNULL(REPLACE(#[].ISICWar#, ',', ''), 0), IFNULL(REPLACE(#[].ISICInMoney#, ',', ''), 0), #[].ISICInMoneyDate#,
			IFNULL(REPLACE(#[].ISICSurfaceIza#, ',', ''), 0), #[].ISICSecCom#, #[].ISICSecAccount#,
			#[].ISICSaChaeCon#, #[].ISICWarCon#, #[].BondCusSeq#, now(), #[].RegPerSabun#, 'N')
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 투자개요 세부내역 파일코드 받아오기 -->
	<select id="cusDAO.GetInSumInCusFileCd" parameterClass="cusVO2" resultClass="int">
		<![CDATA[SELECT IFNULL(MAX(FileSeq) + 1, '1') FileSeq FROM CS_Invest_Summary_InCusFile WHERE InSuCd = #InSuCd# AND ISICCd = LPAD(#ISICCd#, 12, 0) AND CusCd = #CusCd#]]>
	</select>
	
	<!-- 투자개요 세부내역 파일 등록 완료 -->
	<insert id="cusDAO.InSumInCusFileAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_InCusFile (InSuCd, ISICCd, CusCd, FileSeq, FileNm, FileUpNm, FilePath, FileSize, FileOrder, RegDate, RegPerSabun, DelFlag) VALUES
		<dynamic>
		<iterate conjunction=",">
		 (#[].InSuCd#, LPAD(#[].ISICCd#, 12, 0), #[].CusCd#, LPAD(#[].FileSeq#, 12, 0), #[].FileNm#, #[].FileUpNm#, #[].FilePath#, #[].FileSize#, #[].FileOrder#, now(), #[].RegPerSabun#, 'N')
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 투자개요 세부내역 계약서 생성 완료 -->
	<insert id="cusDAO.InSumInCusTradeDocAddEnd">
		INSERT INTO CS_Invest_Summary_InCusFile (InSuCd, ISICCd, CusCd, FileSeq, FileNm, FileUpNm, FilePath, FileSize, FileOrder, RegDate, RegPerSabun, DelFlag)
		 VALUES(#InSuCd#, LPAD(#ISICCd#, 12, 0), #CusCd#, LPAD(#FileSeq#, 12, 0), #FileNm#, #FileUpNm#, #FilePath#, #FileSize#, #FileOrder#, now(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 투자개요 세부내역 불러오기 -->
	<select id="cusDAO.GetInCusList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT '' Gubun, InSuCd, ISICCd, CusCd, CusNm, CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder, TradeCd, TradeType, TradeMoneyCd,
		    (SELECT CASE WHEN COUNT(*) > 0 THEN 'OK' ELSE 'NO' END FROM CS_Trade_Money WHERE CusCd = d.CusCd AND InSuCd = d.InSuCd AND ISICCd = d.ISICCd AND TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N') TradeMoneyFlag,
		    WarCateCd, ISICWar, WarPrice, REPLACE(FORMAT(ROUND((WarPrice * WarNowCnt), - 6), 0), ",", "") NowWar, WarInCnt WarInvestCnt, WarOutCnt WarInvestCntSell, FORMAT(WarNowCnt, 0) NowWarInvestCnt, FORMAT(SynergyWarInvestCnt, 0) SynergyWarInvestCnt,
		    BondCateCd, ISICBond, BondPrice, ROUND((BondPrice * BondNowCnt), - 6) NowBond, BondInCnt BondInvestCnt, BondOutCnt BondInvestCntSell, FORMAT(BondNowCnt, 0) NowBondInvestCnt,
		    ISICInMoney, ISICInMoneyDate, ISICSurfaceIza, ISICSecCom, ISICSecAccount, ISICSaChaeCon, ISICSaChaeData, ISICWarCon, ISICWarData, BondCusSeq,
		    EventCnt, CASE WHEN EventCnt > 0 THEN '전송완료' ELSE '미전송' END EventMail,
			RepayCnt, CASE WHEN RepayCnt > 0 THEN '전송완료' ELSE '미전송' END RepayMail
		FROM
		    (SELECT InSuCd, cus.ISICCd, cus.CusCd, CusNm, CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder, TradeCd, TradeType, TradeMoneyCd,
		            WarCateCd, ISICWar, WarPrice, WarInCnt, WarOutCnt, (IFNULL(WarInCnt, 0) - IFNULL(WarOutCnt, 0)) WarNowCnt, SynergyWarInvestCnt,
		            BondCateCd, ISICBond, (SELECT IFNULL(UnitPrice, 0) FROM CS_Cate_Price WHERE CateCd = BondCateCd AND PriceDate = BondPriceDate) BondPrice,
		            BondInCnt, BondOutCnt, (IFNULL(BondInCnt, 0) - IFNULL(BondOutCnt, 0)) BondNowCnt,
		            ISICInMoney, ISICInMoneyDate, ISICSurfaceIza, ISICSecCom, ISICSecAccount, ISICSaChaeCon, ISICSaChaeData, ISICWarCon, ISICWarData, BondCusSeq,
		            (SELECT COUNT(*) FROM CS_Invest_Summary_MailLog WHERE InSuCd = cus.InSuCd AND CusCd = cus.CusCd AND MailPassType = 'Event') EventCnt,
					(SELECT COUNT(*) FROM CS_Invest_Summary_MailLog WHERE InSuCd = cus.InSuCd AND CusCd = cus.CusCd AND MailPassType = 'Repay') RepayCnt
		    FROM
		    	(SELECT InSuCd, ISICCd, base.CusCd, CusNm, CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder, TradeCd, TradeType,
		    		(SELECT MIN(TradeMoneyCd) FROM CS_Trade_Money WHERE CusCd = base.CusCd AND TradeCd = trade.TradeCd AND InSuCd = base.InSuCd AND ISICCd = base.ISICCd AND TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N') TradeMoneyCd,
		            WarCateCd, ISICWar, WarPrice, SynergyWarInvestCnt,
		            BondCateCd, ISICBond, BondPriceDate,
		            ISICInMoney, ISICInMoneyDate, ISICSurfaceIza, ISICSecCom, ISICSecAccount, ISICSaChaeCon, ISICSaChaeData,
		            ISICWarCon, ISICWarData, BondCusSeq FROM (
					SELECT inve.InSuCd, inve.ISICCd, inve.CusCd, inve.CusNm, CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder,
						insum.WarCateCd, FORMAT(inve.ISICWar, 0) ISICWar, InSuNowPrice WarPrice,
						(SELECT IFNULL(SUM(InvestCnt), 0) FROM CS_Invest_Status WHERE CusCd = '000000000033' AND CateCd = insum.WarCateCd AND InSuCd = inve.InSuCd AND ISICCd = inve.ISICCd AND DelFlag = 'N') SynergyWarInvestCnt,
						insum.BondCateCd, FORMAT(inve.ISICBond, 0) ISICBond, (SELECT MAX(PriceDate) FROM CS_Cate_Price WHERE CateCd = BondCateCd) BondPriceDate,
						FORMAT(inve.ISICInMoney, 0) ISICInMoney, inve.ISICInMoneyDate, inve.ISICSurfaceIza, inve.ISICSecCom, inve.ISICSecAccount, inve.ISICSaChaeCon,
						CASE WHEN inve.ISICSaChaeCon != '' THEN
							CASE inve.ISICSaChaeCon WHEN '1' THEN '이체' WHEN '2' THEN '교부' WHEN '3' THEN '보관증' ELSE '' END
						END ISICSaChaeData,
						inve.ISICWarCon,
						CASE WHEN inve.ISICWarCon != '' THEN
							CASE inve.ISICWarCon WHEN '1' THEN '교부' WHEN '2' THEN '보관증' ELSE '' END
						END ISICWarData, inve.BondCusSeq
						FROM CS_Invest_Summary_InCus inve, CS_Cus_Info cusinfo, CS_Invest_Summary insum
					WHERE inve.InSuCd = #InSuCd# AND inve.DelFlag = 'N' AND inve.CusCd = cusinfo.CusCd AND inve.InSuCd = insum.InSuCd
					AND (cusinfo.CusStatus IN ('1', '2', '4', '6', '7', '8') OR inve.CusCd IN ('000000000032' , '000000000033')) AND cusinfo.DelFlag = 'N'
					<isEqual property="EventFlag" compareValue="WarMng">AND inve.ISICWarCon = '1'</isEqual>
					<isEqual property="EventFlag" compareValue="BondMng">AND inve.ISICSaChaeCon = '2'</isEqual>
					) base
					LEFT OUTER JOIN CS_Trade trade ON base.CusCd = trade.CusCd
					AND trade.TradeCd = (SELECT MAX(TradeCd) TradeCd FROM CS_Trade WHERE CusCd = base.CusCd AND DelFlag = 'N') AND trade.DelFlag = 'N') cus
		    LEFT OUTER JOIN
        (SELECT a.CusCd, ISICCd, SUM(InvestCnt) WarInCnt,
        	(SELECT CEIL(SUM(InvestCnt)) FROM CS_Invest_Status d WHERE d.CusCd = a.CusCd AND d.CateCd = b.WarCateCd
<!-- 중복고객 현재 금액 관련 수정 2015.10.02 -->
        		AND CASE WHEN d.CusCd NOT IN ('000000000032', '000000000033') THEN d.ISICCd = a.ISICCd ELSE 1 = 1 END
        		AND d.DelFlag = 'N' AND d.InvestType = '2' GROUP BY d.CusCd) WarOutCnt
			FROM CS_Invest_Status a, CS_Invest_Summary b, CS_Cus_Info c
			WHERE b.InSuCd = #InSuCd# AND a.CateCd = b.WarCateCd AND a.DelFlag = 'N' AND a.InvestType = '1' AND a.CusCd = c.CusCd
<!--
2015.06.29 자기자본 데이터 누락으로 인해 ISICCd 비교 제거         	
AND (c.CusStatus IN ('1', '2', '4', '6', '7', '8') OR a.CusCd IN ('000000000032', '000000000033')) GROUP BY a.CusCd, ISICCd) war ON cus.CusCd = war.CusCd AND cus.ISICCd = war.ISICCd -->
        	AND (c.CusStatus IN ('1', '2', '4', '6', '7', '8') OR a.CusCd IN ('000000000032', '000000000033')) GROUP BY a.CusCd
<!-- 우리이티아이 빅솔론의 중복 투자의 경우로 인해 수정 2015.10.02 -->        	
        	, CASE WHEN a.CusCd NOT IN ('000000000032', '000000000033') THEN ISICCd ELSE 1 = 1 END) war ON cus.CusCd = war.CusCd
<!-- 우리이티아이 빅솔론의 중복 투자의 경우로 인해 수정 2015.10.02 -->
        	AND CASE WHEN cus.CusCd NOT IN ('000000000032', '000000000033') THEN cus.ISICCd = war.ISICCd ELSE 1 = 1 END
		    LEFT OUTER JOIN
		(SELECT a.CusCd, ISICCd, SUM(InvestCnt) BondInCnt,
			(SELECT CEIL(SUM(InvestCnt)) FROM CS_Invest_Status d WHERE d.CusCd = a.CusCd AND d.CateCd = b.BondCateCd
<!-- 중복고객 현재 금액 관련 수정 2015.10.02 -->
				AND CASE WHEN a.CusCd NOT IN ('000000000032', '000000000033') THEN d.ISICCd = a.ISICCd ELSE 1 = 1 END
				AND d.DelFlag = 'N' AND d.InvestType = '2' GROUP BY d.CusCd) BondOutCnt
			FROM CS_Invest_Status a, CS_Invest_Summary b, CS_Cus_Info c
			WHERE b.InSuCd = #InSuCd# AND a.CateCd = b.BondCateCd AND a.DelFlag = 'N' AND a.InvestType = '1' AND a.CusCd = c.CusCd
<!--
2015.06.29 자기자본 데이터 누락으로 인해 ISICCd 비교 제거
AND (c.CusStatus IN ('1', '2', '4', '6', '7', '8') OR a.CusCd IN ('000000000032', '000000000033')) GROUP BY a.CusCd, ISICCd) bond ON cus.CusCd = bond.CusCd AND cus.ISICCd = bond.ISICCd) d -->
        	AND (c.CusStatus IN ('1', '2', '4', '6', '7', '8') OR a.CusCd IN ('000000000032', '000000000033')) GROUP BY a.CusCd
<!-- 우리이티아이 빅솔론의 중복 투자의 경우로 인해 수정 2015.10.02 -->
        	, CASE WHEN a.CusCd NOT IN ('000000000032', '000000000033') THEN ISICCd ELSE 1 = 1 END) bond ON cus.CusCd = bond.CusCd
<!-- 우리이티아이 빅솔론의 중복 투자의 경우로 인해 수정 2015.10.02 -->
        	AND CASE WHEN cus.CusCd NOT IN ('000000000032', '000000000033') THEN cus.ISICCd = bond.ISICCd ELSE 1 = 1 END
        	) d
		<isEqual property="EventFlag" compareValue="InvestStatus">
			WHERE ISICInMoneyDate BETWEEN #SearchSDate# AND #SearchEDate# AND CusCd NOT IN ('000000000032', '000000000033') 
			<isNotEmpty property="CusInviteSabun">AND CusInviteSabun = #CusInviteSabun#</isNotEmpty> 
			<isNotEmpty property="CusStatus">AND CASE WHEN #CusStatus# = '2' THEN CusStatus IN ('2', '8') ELSE CusStatus = #CusStatus# END</isNotEmpty>
			<isEmpty property="CusStatus">AND CusStatus IN ('2', '4', '6', '8')</isEmpty>
		</isEqual>
		<isEqual property="DocType" compareValue="InSumInCusMng">
		UNION ALL
		SELECT '-' Gubun, InSuCd, ISICCd, a.CusCd, CusNm, CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder, '', '', '', '',
		    WarCateCd, '' ISICWar, WarPrice, ROUND((WarPrice * (IFNULL(WarInCnt, 0) - IFNULL(WarOutCnt, 0))), - 6) NowWar, WarInCnt WarInvestCnt, WarOutCnt WarInvestCntSell, FORMAT(IFNULL(WarInCnt, 0) - IFNULL(WarOutCnt, 0), 0) NowWarInvestCnt, '' SynergyWarInvestCnt,
		    BondCateCd, '' ISICBond, '' BondPrice, '' NowBond, '' BondInvestCnt, '' BondInvestCntSell, '' NowBondInvestCnt,
		    '' ISICInMoney, '' ISICInMoneyDate, '' ISICSurfaceIza, '' ISICSecCom, '' ISICSecAccount, '' ISICSaChaeCon, '' ISICSaChaeData, '' ISICWarCon, '' ISICWarData, '' BondCusSeq, '' EventCnt, '' EventMail, '' RepayCnt, '' RepayMail
		FROM
		    (SELECT b.InSuCd, ISICCd, a.CusCd, CusNm, CusInviteNm, CusInviteSabun, CusStatus, CusStatusNm, CusStatusOrder,
				WarCateCd, InSuNowPrice WarPrice, BondCateCd, 
	            SUM(InvestCnt) WarInCnt, (SELECT CEIL(SUM(InvestCnt)) FROM CS_Invest_Status d WHERE d.CusCd = a.CusCd AND d.CateCd = b.WarCateCd AND d.DelFlag = 'N' AND d.InvestType = '2' GROUP BY d.CusCd) WarOutCnt
		    FROM CS_Invest_Status a, CS_Invest_Summary b, CS_Cus_Info c
		    WHERE b.InSuCd = #InSuCd# AND a.CateCd = b.WarCateCd AND a.DelFlag = 'N' AND a.InvestType = '1' AND a.CusCd = c.CusCd
		            AND (c.CusStatus IN ('1', '2', '4', '6', '7', '8') OR a.CusCd IN ('000000000032' , '000000000033')) GROUP BY a.CusCd) a
		    LEFT OUTER JOIN
		    (SELECT inve.CusCd FROM CS_Invest_Summary_InCus inve, CS_Cus_Info cusinfo
		    WHERE inve.InSuCd = #InSuCd# AND inve.DelFlag = 'N' AND inve.CusCd = cusinfo.CusCd
		            AND (cusinfo.CusStatus IN ('1', '2', '4', '6', '7', '8') OR inve.CusCd IN ('000000000032' , '000000000033')) AND cusinfo.DelFlag = 'N') b
			ON a.CusCd = b.CusCd
		WHERE b.CusCd IS NULL
		</isEqual>
		<isEmpty property="OrderKey">ORDER BY CusStatusOrder, IFNULL(TradeType, '2'), CusNm</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY CusStatusOrder, $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY CusStatusOrder, $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 투자개요 세부내역 파일 불러오기 -->
	<select id="cusDAO.GetInCusFileList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT InSuCd, ISICCd, a.CusCd, CusNm, CusStatus, CusStatusNm, CusStatusOrder, 
			FileSeq, FileNm, FileUpNm, REPLACE(FilePath, '\\', '\\\\') FilePath, FileSize, FileOrder, a.RegDate, a.RegPerSabun, a.DelFlag
		FROM CS_Invest_Summary_InCusFile a, CS_Cus_Info b WHERE InSuCd = #InSuCd# AND a.DelFlag = 'N' AND a.CusCd = b.CusCd AND b.DelFlag = 'N'
		<isEqual property="EventFlag" compareValue="CusBoard">AND a.CusCd IN ($ConCusCd$)</isEqual>
		ORDER BY ISICCd
	</select>
	
	<!-- 투자개요 세부내용 수정 완료 -->
	<update id="cusDAO.InCusEditEnd">
		UPDATE CS_Invest_Summary_InCus
		SET ISICBond = REPLACE(#ISICBond#, ',', ''), ISICWar = REPLACE(#ISICWar#, ',', ''),
			ISICInMoney = REPLACE(#ISICInMoney#, ',', ''), ISICInMoneyDate = #ISICInMoneyDate#,
			ISICSurfaceIza = REPLACE(#ISICSurfaceIza#, ',', ''),
			ISICSecCom = #ISICSecCom#, ISICSecAccount = #ISICSecAccount#,
			ISICSaChaeCon = #ISICSaChaeCon#, ISICWarCon = #ISICWarCon#,
			EditDate = NOW(), EditPerSabun = #RegPerSabun#
		WHERE InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND CusCd = #CusCd#
	</update>
	
	<!-- 투자개요 세부내용 삭제 완료 -->
	<update id="cusDAO.InCusDelEnd">
		<![CDATA[UPDATE CS_Invest_Summary_InCus SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE InSuCd = #InSuCd# AND ISICCd = #ISICCd#]]>
	</update>
	
	<!-- 투자개요 연동 워런트 정보 삭제 완료 -->
	<update id="cusDAO.InCusWarDelEnd">
		<![CDATA[UPDATE CS_Invest_Summary_War SET WarSetFlag = 'N', CusCd = 'X', CusNm = '', EditDate = NOW(), EditPerSabun = #RegPerSabun# WHERE InSuCd = #InSuCd# AND CusCd = #CusCd#]]>
	</update>
	
	<!-- 투자개요 세부내용 연동 매매내역 정보 받아오기 -->
	<select id="cusDAO.GetInCusInvestInfo" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CateCd, InvestType, InvestCd, InvestDate, IFNULL(InvestCalcuMoney, 0) InvestCalcuMoney FROM CS_Invest_Status WHERE CusCd = #CusCd# AND InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND DelFlag = 'N'
	</select>
	
	<!-- 투자개요 세부내용 연동 매매내역 삭제 완료 -->
	<update id="cusDAO.InCusInvestDelEnd">
		<![CDATA[UPDATE CS_Invest_Status SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND CateCd IN ($CateCd$) AND InSuCd = #InSuCd# AND ISICCd = #ISICCd#]]>
	</update>
	
	<!-- 투자개요 세부내용 파일 삭제 완료 -->
	<update id="cusDAO.InCusFileDelEnd">
		UPDATE CS_Invest_Summary_InCusFile SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE InSuCd = #InSuCd# AND ISICCd = #ISICCd#
		<isNotEqual property="EventFlag" compareValue="All">AND FileSeq = #FileSeq#</isNotEqual>
	</update>
	
	<!-- 세부내용 행사, 조기상환 전달을 위한 고객 담당자리스트 받아오기 -->
	<select id="cusDAO.GetInSumCusPerList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = per.CusCd) CusNm, CusPerCd, CusPerNm,
				CusPerPosition, (SELECT PositionNm FROM erp.ERP_Per_Position WHERE PositionCd = per.CusPerPosition) CusPerPositionNm,
				CusPerPhone, CusPerTel, CusPerEmail, CusMailingFlag,
				CusPerPost, CusPerAddr, CusPerEtc, RegDate, RegPerSabun, DelFlag FROM (
		SELECT CusCd, CusPerCd, CusPerNm, CusPerPosition,
				CusPerPhone, CusPerTel, CusPerEmail, CusMailingFlag,
				CusPerPost, CusPerAddr, CusPerEtc, RegDate, RegPerSabun, DelFlag
		  FROM CS_Cus_Worker
		 WHERE CusCd IN (SELECT CusCd FROM CS_Invest_Summary_InCus WHERE InSuCd = #InSuCd# AND DelFlag = 'N') AND DelFlag = 'N') per
	</select>
	
	<!-- 세부내용 행사, 조기상환 메일 로그 코드 받아오기 -->
	<select id="cusDAO.GetInSumMailCd" parameterClass="cusVO2" resultClass="String">
		SELECT IFNULL(LPAD(MAX(MailCd) + 1, 12, 0), '000000000001') MailCd FROM CS_Invest_Summary_MailLog WHERE InSuCd = #InSuCd# AND CusCd = #CusCd# AND CusPerCd = #CusPerCd#
	</select>
	
	<!-- 세부내용 행사, 조기상환 메일 로그 등록 완료 -->
	<insert id="cusDAO.InSumInCusMailLogAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_MailLog (InSuCd, CusCd, CusPerCd, MailCd, MailPassType, MailTitle, MailCon, MailFileFlag,
			MailRePerNm, MailRePerEMail, MailSePerSabun, MailSePerNm, MailSePerEMail, MailSendDate, RegDate) VALUES
		<dynamic>
		<iterate conjunction=",">
		 (#[].InSuCd#, #[].CusCd#, #[].CusPerCd#, #[].MailCd#, #[].MailPassType#, #[].MailTitle#, #[].MailCon#, #[].MailFileFlag#,
		 #[].MailRePerNm#, #[].MailRePerEmail#, #[].MailSePerSabun#, #[].MailSePerNm#, #[].MailSePerEmail#, #[].MailSendDate#, NOW())
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 세부내용 행사, 조기상환 메일 파일 코드 받아오기 -->
	<select id="cusDAO.GetInSumMailFileCd" parameterClass="cusVO2" resultClass="int">
		SELECT IFNULL(MAX(FileSeq) + 1, '1') FileSeq FROM CS_Invest_Summary_MailFile WHERE MailCd = #MailCd#
	</select>
	
	<!-- 세부내용 행사, 조기상환 메일 파일 등록 완료 -->
	<insert id="cusDAO.InSumInCusMailFileAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_MailFile (InSuCd, CusCd, CusPerCd, MailCd, FileSeq, FileNm, FileUpNm, FilePath, FileSize, FileOrder, RegDate, RegPerSabun) VALUES
		<dynamic>
		<iterate conjunction=",">
		 (#[].InSuCd#, #[].CusCd#, #[].CusPerCd#, #[].MailCd#, LPAD(#[].FileSeq#, 12, 0), #[].FileNm#, #[].FileUpNm#, #[].FilePath#, #[].FileSize#, #[].FileOrder#, NOW(), #[].RegPerSabun#)
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 세부내용 행사, 조기상환 메일 전송 현황 받아오기 -->
	<select id="cusDAO.GetInCusMailSendList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = a.CusCd) CusNm, (SELECT InSuNm FROM CS_Invest_Summary WHERE InSuCd = a.InSuCd) InSuNm, 
			MailRePerNm, MailRePerEMail, MailSendDate, CASE MailPassType WHEN 'Event' THEN '워런트행사' ELSE '조기상환청구' END PassType
			FROM CS_Invest_Summary_MailLog a WHERE InSuCd = #InSuCd# AND CusCd = #CusCd# AND MailPassType = #MailPassType#
		ORDER BY MailSendDate DESC, MailRePerNm
	</select>
																<!-- 	세부내용 관리	 	-->
																
																<!-- 	채권매각고객 상세정보	-->
	<!-- 채권매각고객 고급검색 키워드 -->
	<select id="cusDAO.GetBondSellCusKeyList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT DISTINCT  'Cus' Gubun, CusCd Cd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = a.CusCd) Nm
			FROM CS_BondSell_Cus a, CS_Invest_Summary b
			WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N'
		UNION ALL
		SELECT DISTINCT 'Bond' Gubun, BondCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = b.BondCateCd) BondCateNm
			FROM CS_BondSell_Cus a, CS_Invest_Summary b
			WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N'
		ORDER BY Gubun, Nm
	</select>
	
	<!-- 채권매각고객 세부정보 리스트 -->
	<select id="cusDAO.GetBondSellCusList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, CusNm, InSuCd, ISICCd, BondCusSeq, PutEventFlag, SellDay,
		    CONCAT(TargetMoney, '억원') TargetMoney, ToDoSellDay, ExtraPeriod, ExtraDay,
		    RepayMoney, PeriodIza, SumReturnMoney, ReqReturnRate,
		    DealPrice, DealPriceOptNm, DealPriceOpt, DealMoney, DealMoneyOpt, DealTax, RealDealMoney,
		    AssureFlagNm, AssureFlag, WithHoldingFlag, PutEventDay, PutCycle, PutEventDayOrder,
		    BondCateCd, BondCateNm, InSuNabDay,
		    InSuRepayDay, InSuRepayRate, InSuSurfaceRate, InSuRepayIza, EventFlag, EventTargetMoney,
		    FORMAT(ROUND((InSuRepayRate / 100 - 1) * TargetMoney * 100000000 * 0.14 * DATEDIFF(ToDoSellDay, InSuNabDay) / DATEDIFF(InSuRepayDay, InSuNabDay), 0), 0) WithHolding
		FROM (
		SELECT CusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = a.CusCd) CusNm, a.InSuCd, ISICCd, BondCusSeq,
			(SELECT MIN(PutEventFlag) FROM CS_BondSell_Event WHERE CusCd = a.CusCd AND InSuCd = a.InSuCd AND ISICCd = a.ISICCd) PutEventFlag,
			(SELECT MAX(SellDay) FROM CS_BondSell_Event WHERE CusCd = a.CusCd AND InSuCd = a.InSuCd AND ISICCd = a.ISICCd) SellDay,
		    TargetMoney, ToDoSellDay, ExtraPeriod, DATEDIFF(InSuRepayDay, NOW()) ExtraDay,
		    FORMAT(RepayMoney, 0) RepayMoney, FORMAT(PeriodIza, 0) PeriodIza, FORMAT(SumReturnMoney, 0) SumReturnMoney,
		    CONCAT(ReqReturnRate, "%") ReqReturnRate, FORMAT(DealPrice, 0) DealPrice, CASE DealPriceOpt WHEN 'Dan' THEN '단리' WHEN 'Bok' THEN '복리' ELSE '' END DealPriceOptNm, DealPriceOpt,
		    FORMAT(DealMoney, 0) DealMoney, DealMoneyOpt, DealTax, FORMAT(RealDealMoney, 0) RealDealMoney,
		    CASE AssureFlag WHEN 'Y' THEN '보증' WHEN 'N' THEN '무보증' ELSE '' END AssureFlagNm, AssureFlag, WithHoldingFlag, CASE PutEventDay WHEN 'Always' THEN '항상' ELSE PutEventDay END PutEventDay, PutCycle,
		    CASE PutEventDay WHEN 'Always' THEN '1' WHEN '' THEN '3' ELSE '2' END PutEventDayOrder,
		    BondCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = b.BondCateCd) BondCateNm, InSuNabDay, InSuRepayDay, InSuRepayRate, InSuSurfaceRate, InSuRepayIza,
		    (SELECT COUNT(*) FROM CS_BondSell_Event WHERE CusCd = a.CusCd AND InSuCd = a.InSuCd AND ISICCd = a.ISICCd) EventFlag,
		    FORMAT((SELECT IFNULL(SUM(TargetMoney), 0) FROM CS_BondSell_Event WHERE CusCd = a.CusCd AND InSuCd = a.InSuCd AND ISICCd = a.ISICCd), 0) EventTargetMoney
		FROM CS_BondSell_Cus a, CS_Invest_Summary b
<!-- 		WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N' -->
		WHERE a.InSuCd = b.InSuCd AND a.DelFlag = 'N'
		) base
		<isNotEmpty property="HighSearchQuery">$HighSearchQuery$</isNotEmpty>
		<isEmpty property="OrderKey">ORDER BY EventFlag, ToDoSellDay DESC, CusNm, BondCateNm</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">
				<isEqual property="OrderKey" compareValue="PutEventDay">ORDER BY PutEventDayOrder, PutEventDay $OrderType$</isEqual>
				<isNotEqual property="OrderKey" compareValue="PutEventDay">ORDER BY $OrderKey$ $OrderType$</isNotEqual>
			</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY CAST($OrderKey$ as UNSIGNED) $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 채권매각고객 세부정보 상세보기 -->
	<select id="cusDAO.GetBondSellCusInfo" resultMap="BondSellCusInfo">
		SELECT CusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = a.CusCd) CusNm, a.InSuCd, InSuNm, ISICCd, BondCusSeq,
			TargetMoney, ToDoSellDay, ExtraPeriod, DATEDIFF(InSuRepayDay, NOW()) ExtraDay,
			FORMAT(RepayMoney, 0) RepayMoney, FORMAT(PeriodIza, 0) PeriodIza, FORMAT(SumReturnMoney, 0) SumReturnMoney,
			FORMAT((SELECT SUM(ISICRealIza) FROM CS_Invest_Summary_InIza WHERE CusCd = a.CusCd AND InSuCd = a.InSuCd AND ISICCd = a.ISICCd AND DelFlag = 'N'), 0) ISICRealIza,
			ReqReturnRate, FORMAT(DealPrice, 0) DealPrice, CASE DealPriceOpt WHEN 'Dan' THEN '단리' WHEN 'Bok' THEN '복리' ELSE '' END DealPriceOptNm, DealPriceOpt,
			FORMAT(DealMoney, 0) DealMoney, CASE DealMoneyOpt WHEN 'Won' THEN '원단위' WHEN 'Man' THEN '만단위' ELSE '직접입력' END DealMoneyOptNm, DealMoneyOpt,
			FORMAT(DealTax, 0) DealTax, FORMAT(RealDealMoney, 0) RealDealMoney,
			CASE AssureFlag WHEN 'Y' THEN '보증' WHEN 'N' THEN '무보증' ELSE '' END AssureFlagNm, AssureFlag, WithHoldingFlag, CASE PutEventDay WHEN 'Always' THEN '항상' ELSE PutEventDay END PutEventDay, PutCycle,
			BondCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = b.BondCateCd) BondCateNm, (SELECT SubCateCd FROM CS_Cate WHERE CateCd = b.BondCateCd) SubCateCd,
			InSuNabDay, InSuRepayDay, InSuRepayRate, InSuSurfaceRate, InSuRepayIza,
			(SELECT IFNULL(SUM(TargetMoney), 0) FROM CS_BondSell_Event WHERE CusCd = a.CusCd AND InSuCd = a.InSuCd AND ISICCd = a.ISICCd AND DelFlag = 'N') EventTargetMoney
		FROM CS_BondSell_Cus a, CS_Invest_Summary b
		WHERE CusCd = #CusCd# AND a.InSuCd = #InSuCd# AND a.ISICCd = #ISICCd# AND BondCusSeq = #BondCusSeq# AND a.InSuCd = b.InSuCd AND a.DelFlag = 'N' AND b.DelFlag = 'N'
	</select>
	
	<!-- 채권매각고객 세부정보 코드 받아오기 -->
	<select id="cusDAO.GetBondCusSeq" parameterClass="cusVO2" resultClass="String">
		SELECT IFNULL(LPAD(MAX(BondCusSeq) + 1, 12, 0), '000000000001') BondCusSeq FROM CS_BondSell_Cus WHERE CusCd = #CusCd# AND InSuCd = #InSuCd# AND ISICCd = LPAD(#ISICCd#, 12, 0)
	</select>
	
	<!-- 채권매각고객 세부정보 등록 완료 -->
	<insert id="cusDAO.BondSellCusAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_BondSell_Cus (CusCd, InSuCd, ISICCd, BondCusSeq,
			TargetMoney, ToDoSellDay, ExtraPeriod, RepayMoney, PeriodIza, SumReturnMoney,
			ReqReturnRate, DealPrice, DealPriceOpt, DealMoney, DealMoneyOpt, DealTax, RealDealMoney,
			AssureFlag, WithHoldingFlag, PutEventDay, PutCycle, RegDate, RegPerSabun, DelFlag) VALUES
        <dynamic>
		<iterate conjunction=",">
			(#[].CusCd#, #[].InSuCd#, LPAD(#[].ISICCd#, 12, 0), #[].BondCusSeq#,
			IFNULL(REPLACE(#[].TargetMoney#, ',', ''), 0), #[].ToDoSellDay#, REPLACE(#[].ExtraPeriod#, '일', ''), IFNULL(REPLACE(#[].RepayMoney#, ',', ''), 0), IFNULL(REPLACE(#[].PeriodIza#, ',', ''), 0), IFNULL(REPLACE(#[].SumReturnMoney#, ',', ''), 0),
			#[].ReqReturnRate#, IFNULL(REPLACE(#[].DealPrice#, ',', ''), 0), #[].DealPriceOpt#, IFNULL(REPLACE(#[].DealMoney#, ',', ''), 0), #[].DealMoneyOpt#, IFNULL(REPLACE(#[].DealTax#, ',', ''), 0), IFNULL(REPLACE(#[].RealDealMoney#, ',', ''), 0),
			#[].AssureFlag#, #[].WithHoldingFlag#, #[].PutEventDay#, #[].PutCycle#, now(), #[].RegPerSabun#, 'N')
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 채권매각고객 세부정보 수정 완료 -->
	<update id="cusDAO.BondSellCusInfoEditEnd">
		UPDATE CS_BondSell_Cus SET
			TargetMoney = REPLACE(#TargetMoney#, ",", ""), ToDoSellDay = #ToDoSellDay#, ExtraPeriod = #ExtraPeriod#, RepayMoney = REPLACE(#RepayMoney#, ",", ""),
			PeriodIza = REPLACE(#PeriodIza#, ",", ""), SumReturnMoney = REPLACE(#SumReturnMoney#, ",", ""),
			ReqReturnRate = #ReqReturnRate#, DealPrice = REPLACE(#DealPrice#, ",", ""), DealPriceOpt = #DealPriceOpt#,
			DealMoney = REPLACE(#DealMoney#, ",", ""), DealMoneyOpt = #DealMoneyOpt#, DealTax = REPLACE(#DealTax#, ",", ""), RealDealMoney = REPLACE(#RealDealMoney#, ",", ""),
			AssureFlag = #AssureFlag#, WithHoldingFlag = #WithHoldingFlag#, PutEventDay = #PutEventDay#, PutCycle = #PutCycle#, EditDate = NOW() , EditPerSabun = #RegPerSabun#
		WHERE CusCd = #CusCd# AND InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND BondCusSeq = #BondCusSeq#
	</update>
	
	<!-- 세부내용 수정에 따른 채권매각고객 세부정보 수정 -->
	<update id="cusDAO.BondSellCusEditEnd">
		UPDATE CS_BondSell_Cus SET TargetMoney = ROUND(REPLACE(#ISICBond#, ",", "") / 100000000, 1), ToDoSellDay = #ISICInMoneyDate#, DealMoney = REPLACE(#ISICInMoney#, ",", "") WHERE CusCd = #CusCd# AND InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND BondCusSeq = #BondCusSeq# 
	</update>
	
	<!-- 채권매각고객 세부정보 삭제 -->
	<update id="cusDAO.BondSellCusDelEnd">
		UPDATE CS_BondSell_Cus SET DelFlag = 'Y', DelDate = now(), DelPerSabun = #RegPerSabun# WHERE CusCd = #CusCd# AND InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND BondCusSeq = #BondCusSeq# 
	</update>
	
	<!-- 사모투자 세부내용 건별 정보 받아오기 -->
	<select id="cusDAO.GetInSumInCusInfo" resultMap="InSumInCusInfo">
		SELECT InSuCd, ISICCd, base.CusCd, ISICBond, ISICWar, ISICInMoney, ISICInMoneyDate,
		    ISICSurfaceIza, ISICSecCom, ISICSecAccount, ISICSaChaeCon, ISICWarCon,
		    InSuNowPrice, InSuBuyBack, BondCateCd,
		    TradeMoneyFlag, TradeCd, (SELECT TradeMoneyCd FROM CS_Trade_Money WHERE CusCd = base.CusCd AND TradeCd = trade.TradeCd AND InSuCd = base.InSuCd AND ISICCd = base.ISICCd AND TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N') TradeMoneyCd
		FROM
		    (SELECT a.InSuCd, ISICCd, CusCd, ISICBond, ISICWar, ISICInMoney, ISICInMoneyDate,
	            ISICSurfaceIza, ISICSecCom, ISICSecAccount, ISICSaChaeCon, ISICWarCon,
	            InSuNowPrice, InSuBuyBack, BondCateCd,
	            (SELECT CASE WHEN COUNT(*) > 0 THEN 'OK' ELSE 'NO' END FROM CS_Trade_Money
	                WHERE CusCd = a.CusCd AND InSuCd = a.InSuCd AND ISICCd = a.ISICCd AND TradeMoneyFlag IN ('1', '3', '5') AND DelFlag = 'N') TradeMoneyFlag
		    FROM CS_Invest_Summary_InCus a, CS_Invest_Summary b
		    WHERE a.InSuCd = #InSuCd# AND a.InSuCd = b.InSuCd AND a.ISICCd = #ISICCd# AND a.CusCd = #CusCd# AND a.DelFlag = 'N') base
		        LEFT OUTER JOIN
		    CS_Trade trade ON base.CusCd = trade.CusCd
		        AND trade.TradeCd = (SELECT MAX(TradeCd) TradeCd FROM CS_Trade WHERE CusCd = base.CusCd AND DelFlag = 'N') AND trade.DelFlag = 'N'
	</select>
	
	<!-- 채권매각고객 풋행사 코드 받아오기 -->
	<select id="cusDAO.GetBondEventSeq" parameterClass="cusVO2" resultClass="String">
		SELECT IFNULL(LPAD(MAX(BondEventSeq) + 1, 12, 0), '000000000001') BondEventSeq FROM CS_BondSell_Event WHERE CusCd = #CusCd# AND InSuCd = #InSuCd# AND ISICCd = #ISICCd#
	</select>
	
	<!-- 채권매각고객 풋행사 완료 -->
	<insert id="cusDAO.BondSellCusEventAddEnd">
		INSERT INTO CS_BondSell_Event (CusCd, InSuCd, ISICCd, BondCusSeq, BondEventSeq,
			TargetMoney, BuyMoney, BuyDay, SellDay, PassPeriod,
			PeriodIza, ReqReturnRate, DealPrice, DealMoney, PutEventFlag, RegDate, RegPerSabun, DelFlag)
		VALUES (#CusCd#, #InSuCd#, #ISICCd#, #BondCusSeq#, #BondEventSeq#,
				REPLACE(#TargetMoney#, ',', ''), REPLACE(#BuyMoney#, ',', ''), #BuyDay#, #SellDay#, REPLACE(#PassPeriod#, '일', ''),
				REPLACE(#PeriodIza#, ',', ''), #ReqReturnRate#, REPLACE(#DealPrice#, ',', ''), REPLACE(#DealMoney#, ',', ''), #PutEventFlag#, NOW(), #RegPerSabun#, 'N')
	</insert>
	
	<!-- 채권매각고객 풋행사 리스트 받아오기 -->
	<select id="cusDAO.GetBondSellCusEventList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT CusCd, (SELECT CusNm FROM CS_Cus_Info WHERE CusCd = a.CusCd) CusNm, a.InSuCd, InSuNm, ISICCd, BondCusSeq, BondEventSeq,
		    CONCAT(TargetMoney, "억원") TargetMoney, BuyMoney, BuyDay, SellDay, PassPeriod, PeriodIza, ReqReturnRate, DealPrice, DealMoney,
		    BondCateCd, (SELECT CateNm FROM CS_Cate WHERE CateCd = b.BondCateCd) BondCateNm, PutEventFlag
		FROM CS_BondSell_Event a, CS_Invest_Summary b
		WHERE CusCd = #CusCd# AND a.InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND BondCusSeq = #BondCusSeq# AND a.DelFlag = 'N' AND a.InSuCd = b.InSuCd
		<isEmpty property="OrderKey">ORDER BY SellDay DESC</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 채권매각고객 풋행사 정보 받아오기 -->
	<select id="cusDAO.GetBondSellCusEventView" resultMap="BondSellCusEventInfo">
		SELECT CusCd, InSuCd, ISICCd, BondCusSeq, BondEventSeq,
		    FORMAT(TargetMoney, 0) TargetMoney, FORMAT(BuyMoney, 0) BuyMoney, BuyDay, SellDay, PassPeriod,
		    FORMAT(PeriodIza, 0) PeriodIza, ReqReturnRate, FORMAT(DealPrice, 0) DealPrice, FORMAT(DealMoney, 0) DealMoney, PutEventFlag
		FROM CS_BondSell_Event
		WHERE CusCd = #CusCd# AND InSuCd = #InSuCd# AND ISICCd = #ISICCd# AND BondCusSeq = #BondCusSeq# AND BondEventSeq = #BondEventSeq#
	</select>
																<!-- 	채권매각고객 상세정보	-->
																
																<!--	고객 통계	-->
	<!-- 고객별 통계 받아오기 -->
	<select id="cusDAO.GetCusStats" parameterClass="cusVO2" resultClass="egovMap">
		SELECT Cal_Date CalDate, IFNULL(trademoney.CusCd, #CusCd#) CusCd, TradeCd, TradeMoney,
		    NowCash, RealNowCash, NowSecurity, WarSecurity
		FROM (SELECT Cal_Date FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) a
		        LEFT OUTER JOIN
		    (SELECT CusCd, TradeCd, PriceDate,
		            SUM(TradeMoney) - IFNULL((SELECT SUM(TradeMoney) TradeMoney FROM CS_Trade_Money
		                WHERE CusCd = a.CusCd AND TradeMoneyFlag IN ('2', '4') AND DelFlag = 'N' AND TradeMoneyDate <![CDATA[<=]]> b.PriceDate), 0) TradeMoney
		    FROM CS_Trade_Money a, (SELECT SUBSTRING(PriceDate, 1, 10) PriceDate, COUNT(*) FROM CS_Cate_Price WHERE DelFlag = 'N' GROUP BY PriceDate) b
		    WHERE CusCd = #CusCd# AND a.TradeMoneyFlag IN ('1', '3', '5') AND a.DelFlag = 'N' AND a.TradeMoneyDate <![CDATA[<=]]> b.PriceDate
		    GROUP BY CusCd , PriceDate) trademoney ON a.Cal_Date = trademoney.PriceDate
		        LEFT OUTER JOIN
		    (SELECT CusCd, PriceDate, SUM(InvestTradeMoney) + Tmp1 + Tmp2 NowCash, SUM(RealTradeMoney) + Tmp1 + Tmp2 RealNowCash
			FROM
			    (SELECT cusdate.CusCd, Cal_Date PriceDate,
		            IFNULL(CASE money.CateCd WHEN 'Except' THEN - InvestTradeMoney ELSE InvestTradeMoney END, 0) InvestTradeMoney,
		            IFNULL(CASE WHEN money.CateCd IN ('Except' , 'ComKeep', 'CusKeep') THEN 0 ELSE InvestTradeMoney END, 0) RealTradeMoney,
		            IFNULL((SELECT SUM(InvestTradeMoney) FROM CS_Invest_Tmp WHERE CusCd = #CusCd# AND InvestDate <![CDATA[<=]]> cusdate.Cal_Date
		            	AND ApplyFlag = 'N' AND DelFlag = 'N' GROUP BY CusCd), 0) Tmp1,
					IFNULL((SELECT SUM(InvestTradeMoney) FROM CS_Invest_Tmp WHERE CusCd = #CusCd# AND InvestDate <![CDATA[<=]]> cusdate.Cal_Date
						AND ApplyFlag = 'Y' AND DelFlag = 'N' AND ApplyDate <![CDATA[>]]> cusdate.Cal_Date GROUP BY CusCd), 0) Tmp2
			    FROM
			        (SELECT CusCd, CateCd, Cal_Date, MAX(InvestDate) InvestDate FROM Calendar cal
			    LEFT OUTER JOIN
					(SELECT CusCd, a.CateCd, InvestDate FROM CS_Invest_Status a, CS_Cate b
			    WHERE CusCd = #CusCd# AND a.CateCd = b.CateCd AND CateType = '2' AND InvestType = '1' AND a.DelFlag = 'N' AND b.DelFlag = 'N') cate
				ON cal.Cal_Date <![CDATA[>=]]> InvestDate
			    GROUP BY CusCd , CateCd , Cal_Date
			    ORDER BY Cal_Date) cusdate
			    LEFT OUTER JOIN CS_Invest_Status money ON money.CusCd = #CusCd#
			        AND cusdate.CateCd = money.CateCd AND cusdate.InvestDate = money.InvestDate AND money.InvestType = '1' AND money.DelFlag = 'N') cashsub
			GROUP BY CusCd, PriceDate) cash ON a.Cal_Date = cash.PriceDate
		        LEFT OUTER JOIN
		    (SELECT CusCd, PriceDate, SUM(NowSecurity) NowSecurity, SUM(WarSecurity) WarSecurity
		    FROM
		        (SELECT CusCd, InSuNowPrice, CateCd, CateNm, BuyDate PriceDate, UnitPrice, (NowCnt * UnitPrice) NowSecurity,
		            SecCateCd, SecUnitPrice, SecCateDate,
		            CASE WHEN (SecUnitPrice - InSuNowPrice) <![CDATA[>]]> 0 THEN (SecUnitPrice - InSuNowPrice) * NowCnt END WarSecurity
		    FROM
		        (SELECT CusCd, CateCd, CateNm, BuyDate, BuyCnt, SellCnt, NowCnt,
		            SecCateCd, InSuNowPrice, (SELECT DISTINCT UnitPrice FROM CS_Cate_Price WHERE CateCd = price.CateCd AND PriceDate = price.CateDate AND DelFlag = 'N') UnitPrice,
		            (SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = SecCateCd AND PriceDate = SecCateDate AND DelFlag = 'N') SecUnitPrice, SecCateDate
		    FROM
		        (SELECT CusCd, CateCd, CateNm, BuyDate, BuyCnt, SellCnt, NowCnt,
		            SecCateCd, InSuNowPrice,
		            (SELECT MAX(PriceDate) PriceDate FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> cnt.BuyDate AND DelFlag = 'N' AND CateCd = cnt.CateCd) CateDate,
		            (SELECT MAX(PriceDate) PriceDate FROM CS_Cate_Price WHERE PriceDate <![CDATA[<=]]> cnt.BuyDate AND DelFlag = 'N' AND CateCd = SecCateCd) SecCateDate
		    FROM
		        (SELECT CusCd, CateCd, CateNm, PriceDate BuyDate,
				    BuyCnt, SellCnt, REPLACE(FORMAT(IFNULL(BuyCnt, 0) - IFNULL(SellCnt, 0), 0), ',', '') NowCnt,
				    (SELECT DISTINCT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = CateCd) SecCateCd,
				    (SELECT DISTINCT InSuNowPrice FROM CS_Invest_Summary WHERE WarCateCd = CateCd) InSuNowPrice
				FROM
				    (SELECT CusCd, CateCd, CateNm, SUM(BuyCnt) BuyCnt, SUM(SellCnt) SellCnt, PriceDate
				    FROM
				        (SELECT SUBSTRING(PriceDate, 1, 10) PriceDate FROM CS_Cate_Price
				    WHERE DelFlag = 'N' AND PriceDate BETWEEN DATE_ADD(#SearchSDate#, INTERVAL - 15 DAY) AND #SearchEDate# GROUP BY PriceDate) cal
				    LEFT OUTER JOIN
						(SELECT CusCd, a.CateCd, CateNm, InvestCnt, InvestType, InvestDate,
				            CASE InvestType WHEN '1' THEN InvestCnt END BuyCnt, CASE InvestType WHEN '2' THEN InvestCnt END SellCnt
				    FROM CS_Invest_Status a, CS_Cate b
				    WHERE a.CateCd = b.CateCd AND a.CusCd = #CusCd#
				            AND CateType = '1' AND a.DelFlag = 'N') cnt ON cal.PriceDate <![CDATA[>=]]> cnt.InvestDate
				    GROUP BY PriceDate , CateCd) seccnt) cnt) price) calcu) secsub
		    GROUP BY CusCd , PriceDate) sec ON a.Cal_Date = sec.PriceDate
		WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
		ORDER BY CalDate
	</select>
	
	<!-- 고객 상태별 통계 받아오기 -->
	<select id="cusDAO.GetStatusStats" parameterClass="cusVO2" resultClass="egovMap">
		<isEqual property="CusStatus" compareValue="All">
			SELECT CalDate, SUM(TradeMoney) TradeMoney, SUM(NowCash) NowCash, SUM(NowSecurity) NowSecurity, SUM(WarSecurity) WarSecurity FROM (
		</isEqual>
		SELECT d1.CusStatus, d1.LastDate CalDate, DateGapMoney, TradeMoney,
			IFNULL(NowCash + CalcuCash, 0) NowCash, IFNULL(RealNowCash + CalcuCash, 0) RealNowCash,
			Bond, Stock, War, (Bond + Stock + War) NowSecurity, WarSecurity FROM (
				
				SELECT CusStatus, LastDate, SUM(DateGapMoney) DateGapMoney, SUM(TradeMoney) TradeMoney FROM (
					
					SELECT CusStatus, LastDate,
						SUM(CASE WHEN TradeMoneyFlag = '1' THEN TradeMoney * (TO_DAYS(d.LastDate) - TO_DAYS(TradeMoneyDate))
						ELSE -TradeMoney * (TO_DAYS(d.LastDate) - TO_DAYS(TradeMoneyDate)) END) DateGapMoney,
						SUM(CASE WHEN TradeMoneyFlag = '1' THEN TradeMoney ELSE -TradeMoney END) TradeMoney
					FROM CS_Trade a, CS_Trade_Money b, CS_Cus_Info c,

					(
					<isEqual property="EventType" compareValue="Month">
						SELECT 
							CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
							ELSE LAST_DAY(LastDate) END LastDate FROM (
								SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
							WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
					</isEqual>
					<isEqual property="EventType" compareValue="Day">
						SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
					</isEqual>) d
 				WHERE a.CusCd = b.CusCd AND a.TradeCd = b.TradeCd AND a.TradeType = '1' AND a.DelFlag = 'N' AND b.DelFlag = 'N'
					AND TradeMoneyDate <![CDATA[<=]]> d.LastDate AND TradeMoneyFlag NOT IN ('3', '4', '5')
					AND a.CusCd = c.CusCd AND CusStatus IN ('2', '4', '6', '7') AND c.DelFlag = 'N'
				GROUP BY CusStatus, LastDate
				UNION ALL
				SELECT CusStatus, LastDate,
					SUM(CASE WHEN TradeMoneyFlag = '1' THEN TradeMoney * (TO_DAYS(d.LastDate) - TO_DAYS(TradeMoneyDate)) END) DateGapMoney,
					SUM(CASE WHEN TradeMoneyFlag = '1' THEN TradeMoney  END) TradeMoney
				FROM CS_Trade a, CS_Trade_Money b, CS_Cus_Info c,
				
				(
				<isEqual property="EventType" compareValue="Month">
					SELECT 
						CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
						ELSE LAST_DAY(LastDate) END LastDate FROM (
							SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
					WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
				</isEqual>
				<isEqual property="EventType" compareValue="Day">
					SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
				</isEqual>) d
 			WHERE a.CusCd = b.CusCd AND a.TradeCd = b.TradeCd AND a.TradeType = '2' AND a.DelFlag = 'N' AND b.DelFlag = 'N'
				AND TradeMoneyDate <![CDATA[<=]]> d.LastDate AND TradeMoneyFlag IN ('1', '2')
				AND a.CusCd = c.CusCd AND CusStatus IN ('2', '4', '6', '7') AND c.DelFlag = 'N'
			GROUP BY CusStatus, LastDate) t
		GROUP BY CusStatus, LastDate) d1

		LEFT OUTER JOIN
		(SELECT CusStatus, LastDate, SUM(NowCash) NowCash, SUM(RealNowCash) RealNowCash FROM CS_Cus_Info cus, (
			SELECT CusCd, LastDate, IFNULL(SUM(InvestTradeMoney), 0) + NoneCalcuMoney + CalcuMoney NowCash,
				IFNULL(SUM(RealTradeMoney), 0) + NoneCalcuMoney + CalcuMoney RealNowCash FROM
			
			(SELECT a.CusCd, b.InvestDate, LastDate,
				CASE a.CateCd WHEN 'Except' THEN - InvestTradeMoney ELSE InvestTradeMoney END InvestTradeMoney,
				CASE WHEN a.CateCd IN ('Except' , 'ComKeep', 'CusKeep') THEN 0 ELSE InvestTradeMoney END RealTradeMoney,
				IFNULL((SELECT SUM(InvestTradeMoney) FROM CS_Invest_Tmp
					WHERE CusCd = a.CusCd AND InvestDate <![CDATA[<=]]> LastDate AND ApplyFlag = 'N' AND DelFlag = 'N'), 0) NoneCalcuMoney,
				IFNULL((SELECT SUM(InvestTradeMoney) FROM CS_Invest_Tmp
					WHERE CusCd = a.CusCd AND InvestDate <![CDATA[<=]]> LastDate AND ApplyFlag = 'Y' AND DelFlag = 'N' AND ApplyDate > LastDate), 0) CalcuMoney
			FROM CS_Invest_Status a,
				(SELECT CusCd, a.CateCd, MAX(InvestDate) InvestDate, LastDate FROM CS_Invest_Status a, CS_Cate b,
				(
				<isEqual property="EventType" compareValue="Month">
					SELECT 
						CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
						ELSE LAST_DAY(LastDate) END LastDate FROM (
							SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
					WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
				</isEqual>
				<isEqual property="EventType" compareValue="Day">
					SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
				</isEqual>) c
				WHERE a.CateCd = b.CateCd AND b.CateType = '2' AND a.InvestType = '1' AND b.DelFlag = 'N' AND a.DelFlag = 'N'
					AND InvestDate <![CDATA[<=]]> LastDate
			GROUP BY a.CusCd, a.CateCd, LastDate) b
			WHERE a.CusCd = b.CusCd AND a.CateCd = b.CateCd AND a.InvestDate = b.InvestDate AND a.DelFlag = 'N') cuscash
		GROUP BY CusCd, LastDate) cash
		WHERE cus.CusCd = cash.CusCd AND CusStatus IN ('2', '4', '6', '7') AND cus.DelFlag = 'N'
		GROUP BY CusStatus, LastDate) d2
		ON d1.CusStatus = d2.CusStatus AND d1.LastDate = d2.LastDate

		LEFT OUTER JOIN
		(SELECT CusStatus, LastDate, SUM(CalcuCash) CalcuCash FROM CS_Cus_Info a, (
			SELECT LastDate, a.CusCd,
				CASE TradeType WHEN '1'
<!-- 					THEN IFNULL((SELECT SUM(NowCash) FROM CS_Calcu WHERE CusCd = a.CusCd AND CalcuType = 'Calcu' AND CalcuDate <![CDATA[<=]]> LastDate AND DelFlag = 'N'), 0) -->
<!-- 					ELSE IFNULL(SUM(CASE WHEN TradeMoneyDate <![CDATA[<=]]> LastDate AND TradeMoneyFlag = '2' THEN TradeMoney END), 0) -->
					
					THEN IFNULL((SELECT SUM(NowCash) FROM CS_Calcu WHERE CusCd = a.CusCd AND CalcuType = 'Calcu' AND CalcuEndFlag = 'Y' AND CalcuDate <![CDATA[<=]]> LastDate AND DelFlag = 'N'), 0)
					ELSE IFNULL(SUM(CASE WHEN TradeMoneyDate <![CDATA[<=]]> LastDate AND TradeMoneyFlag = '2' THEN TradeMoney END), 0)
				END CalcuCash
			FROM CS_Trade a, CS_Trade_Money b,
			(
			<isEqual property="EventType" compareValue="Month">
				SELECT 
					CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
					ELSE LAST_DAY(LastDate) END LastDate FROM (
						SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
				WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
			</isEqual>
			<isEqual property="EventType" compareValue="Day">
				SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
			</isEqual>) c
			WHERE a.CusCd = b.CusCd AND a.TradeCd = b.TradeCd AND a.DelFlag = 'N' AND b.DelFlag = 'N'
		GROUP BY LastDate, CusCd)b
		WHERE a.CusCd = b.CusCd AND CusStatus IN ('2', '4', '6', '7') AND a.DelFlag = 'N'
		GROUP BY CusStatus, LastDate) d3
		ON d1.CusStatus = d3.CusStatus AND d1.LastDate = d3.LastDate

		LEFT OUTER JOIN
		(SELECT CusStatus, price.LastDate,
			IFNULL(SUM(REPLACE(NowBondCnt, ',', '') * UnitPrice), 0) Bond,
			IFNULL(SUM(REPLACE(NowStockCnt, ',', '') * UnitPrice), 0) Stock,
			IFNULL(SUM(REPLACE(NowWarCnt, ',', '') * UnitPrice), 0) War,
			IFNULL(SUM(CASE WHEN (SecUnitPrice - InSuNowPrice) > 0 THEN (SecUnitPrice - InSuNowPrice) * REPLACE(NowWarCnt, ',', '') END), 0) WarSecurity
		FROM (
			SELECT a.CateCd, CateNm, CateType, SubCateCd, LastDate, PriceDate,
				IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = a.CateCd AND PriceDate = b.PriceDate AND DelFlag = 'N'), 0) UnitPrice,
				IFNULL((SELECT UnitPrice FROM CS_Cate_Price WHERE CateCd = a.SecCateCd AND PriceDate = b.PriceDate AND DelFlag = 'N'), 0) SecUnitPrice,
				IFNULL((SELECT DISTINCT InSuNowPrice FROM CS_Invest_Summary WHERE WarCateCd = a.CateCd), 0) InSuNowPrice
			FROM
				(SELECT CateCd, CateNm, CateType, SubCateCd, (SELECT DISTINCT SecCateCd FROM CS_Invest_Summary WHERE WarCateCd = a.CateCd) SecCateCd
				FROM CS_Cate a WHERE CateType = '1' AND DelFlag = 'N') a
				LEFT OUTER JOIN
				(SELECT a.CateCd, LastDate, MAX(PriceDate) PriceDate FROM CS_Cate a, CS_Cate_Price b,
				(
				<isEqual property="EventType" compareValue="Month">
					SELECT 
						CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
						ELSE LAST_DAY(LastDate) END LastDate FROM (
							SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
					WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
				</isEqual>
				<isEqual property="EventType" compareValue="Day">
					SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
				</isEqual>) c
				WHERE a.CateCd = b.CateCd AND CateType = '1' AND PriceDate <![CDATA[<=]]> LastDate AND a.DelFlag = 'N' AND b.DelFlag = 'N' GROUP BY CateCd, LastDate) b
				ON CASE WHEN a.SecCateCd IS NULL THEN a.CateCd = b.CateCd ELSE a.SecCateCd = b.CateCd End) price,

					(SELECT CusStatus, LastDate, a.CateCd,
						FORMAT(SUM(InvestCnt) - IFNULL((SELECT SUM(InvestCnt) FROM CS_Invest_Status ia, CS_Cus_Info ib
							WHERE ia.CusCd = ib.CusCd AND CusStatus IN ('2', '4', '6', '7') AND CusStatus = c.CusStatus AND CateCd = a.CateCd
							AND InvestType = '2' AND InvestDate <![CDATA[<=]]> LastDate AND ia.DelFlag = 'N' AND ib.DelFlag = 'N'), 0), 0) NowBondCnt,
							'' NowStockCnt, '' NowWarCnt
					FROM CS_Invest_Status a, CS_Cate b, CS_Cus_Info c,
					(
					<isEqual property="EventType" compareValue="Month">
						SELECT 
							CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
							ELSE LAST_DAY(LastDate) END LastDate FROM (
								SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
						WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
					</isEqual>
					<isEqual property="EventType" compareValue="Day">
						SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
					</isEqual>) d
					WHERE a.CateCd = b.CateCd AND a.InvestType = '1' AND a.InvestDate <![CDATA[<=]]> LastDate AND a.DelFlag = 'N'
						AND b.CateType = '1' AND b.SubCateCd IN ('1', '4', '5', '6') AND b.DelFlag = 'N'
						AND a.CusCd = c.CusCd AND c.CusStatus IN ('2', '4', '6', '7') AND c.DelFlag = 'N'
					GROUP BY CusStatus, LastDate, CateCd 
	
					UNION ALL
	
					SELECT CusStatus, LastDate, a.CateCd, '' NowBondCnt,
						FORMAT(SUM(InvestCnt) - IFNULL((SELECT SUM(InvestCnt) FROM CS_Invest_Status ia, CS_Cus_Info ib
							WHERE ia.CusCd = ib.CusCd AND CusStatus IN ('2', '4', '6', '7') AND CusStatus = c.CusStatus AND CateCd = a.CateCd
								AND InvestType = '2' AND InvestDate <![CDATA[<=]]> LastDate AND ia.DelFlag = 'N' AND ib.DelFlag = 'N'), 0), 0) NowStockCnt, '' NowWarCnt
					FROM CS_Invest_Status a, CS_Cate b, CS_Cus_Info c,
					(
					<isEqual property="EventType" compareValue="Month">
						SELECT 
							CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
							ELSE LAST_DAY(LastDate) END LastDate FROM (
								SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
						WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
					</isEqual>
					<isEqual property="EventType" compareValue="Day">
						SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
					</isEqual>) d
					WHERE a.CateCd = b.CateCd AND a.InvestType = '1' AND a.InvestDate <![CDATA[<=]]> LastDate AND a.DelFlag = 'N'
						AND b.CateType = '1' AND b.SubCateCd = '2' AND b.DelFlag = 'N'
						AND a.CusCd = c.CusCd AND c.CusStatus IN ('2', '4', '6', '7') AND c.DelFlag = 'N'
					GROUP BY CusStatus, LastDate, CateCd

					UNION ALL

					SELECT CusStatus, LastDate, a.CateCd, '' NowBondCnt, '' NowStockCnt, 
						FORMAT(SUM(InvestCnt) -  IFNULL((SELECT SUM(InvestCnt) FROM CS_Invest_Status ia, CS_Cus_Info ib
							WHERE ia.CusCd = ib.CusCd AND CusStatus IN ('2', '4', '6', '7') AND CusStatus = c.CusStatus AND CateCd = a.CateCd
							AND InvestType = '2' AND InvestDate <![CDATA[<=]]> LastDate AND ia.DelFlag = 'N' AND ib.DelFlag = 'N'), 0), 0)  NowWarCnt
					FROM CS_Invest_Status a, CS_Cate b, CS_Cus_Info c,
					(
					<isEqual property="EventType" compareValue="Month">
						SELECT 
							CASE WHEN DATE_FORMAT(#SearchEDate#, '%Y-%m') = DATE_FORMAT(LastDate, '%Y-%m') THEN #SearchEDate#
							ELSE LAST_DAY(LastDate) END LastDate FROM (
								SELECT DISTINCT (CONCAT(Cal_Year, '-', LPAD(Cal_Month, 2, 0), '-01' )) LastDate FROM Calendar
						WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#) cal
					</isEqual>
					<isEqual property="EventType" compareValue="Day">
						SELECT Cal_Date LastDate FROM Calendar WHERE Cal_Date BETWEEN DATE_ADD(#SearchSDate#, INTERVAL -15 DAY) AND #SearchEDate#
					</isEqual>) d
					WHERE a.CateCd = b.CateCd AND a.InvestType = '1' AND a.InvestDate <![CDATA[<=]]> LastDate AND a.DelFlag = 'N'
						AND b.CateType = '1' AND b.SubCateCd IN ('3', '7', '8') AND b.DelFlag = 'N'
						AND a.CusCd = c.CusCd AND c.CusStatus IN ('2', '4', '6', '7') AND c.DelFlag = 'N'
					GROUP BY CusStatus, LastDate, CateCd) cnt
				where price.CateCd = cnt.CateCd AND price.LastDate = cnt.LastDate
				GROUP BY CusStatus, price.LastDate) d4
				ON d1.CusStatus = d4.CusStatus AND d1.LastDate = d4.LastDate
		<isEqual property="CusStatus" compareValue="All">
			) st GROUP BY CalDate
		</isEqual>
		<isNotEqual property="CusStatus" compareValue="All">WHERE d1.CusStatus = #CusStatus#</isNotEqual>
		ORDER BY CalDate
	</select>
																<!--	고객 통계	-->
																
																<!-- 	워런트 관리	-->
	<!-- 워런트 리스트 받아오기 -->
	<select id="cusDAO.GetWarList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT InSuCd, WarGrpCd, CONCAT(ABS(WarGrpCd), '') HaveWarGrpCd, WarCd, CONCAT(ABS(WarCd), '') HaveWarCd,
		WarSeqNum, FORMAT(WarMoney, 0) WarMoney, WarSetFlag, CusCd, CusNm,
		(SELECT COUNT(WarGrpCd) FROM CS_Invest_Summary_War WHERE InSuCd = war.InSuCd AND WarGrpCd = war.WarGrpCd AND DelFlag = 'N') GrpCnt
		FROM CS_Invest_Summary_War war WHERE InSuCd = #InSuCd# AND DelFlag = 'N'
		<isEqual property="EventFlag" compareValue="InCusAdd">AND WarSetFlag = 'N'</isEqual>
		<isEmpty property="OrderKey">ORDER BY WarGrpCd, WarCd</isEmpty>
		<isNotEmpty property="OrderKey">
			<isEqual property="OrderFlag" compareValue="S">ORDER BY WarGrpCd, $OrderKey$ $OrderType$</isEqual>
			<isNotEqual property="OrderFlag" compareValue="S">ORDER BY $OrderKey$+0 $OrderType$</isNotEqual>
		</isNotEmpty>
	</select>
	
	<!-- 워런트 파일 리스트 받아오기 -->
	<select id="cusDAO.GetWarFileList" parameterClass="cusVO2" resultClass="egovMap">
		SELECT InSuCd, WarGrpCd, WarCd, FileSeq, FileNm, FileUpNm, REPLACE(FilePath, '\\', '\\\\') FilePath, FileSize, FileOrder, RegDate
		FROM CS_Invest_Summary_WarFile war WHERE InSuCd = #InSuCd# AND DelFlag = 'N'
		<isEqual property="EventFlag" compareValue="InCusAdd">AND WarSetFlag = 'N'</isEqual>
		ORDER BY WarGrpCd, WarCd
	</select>
	
	<!-- 워런트 그룹코드 받아오기 -->
	<select id="cusDAO.GetWarGrpCd" parameterClass="cusVO2" resultClass="int">
		SELECT IFNULL(MAX(WarGrpCd) + 1, '1') WarGrpCd FROM CS_Invest_Summary_War WHERE InSuCd = #InSuCd#
	</select>
	
	<!-- 워런트 코드 받아오기 -->
	<select id="cusDAO.GetWarCd" parameterClass="cusVO2" resultClass="int">
		SELECT IFNULL(MAX(WarCd) + 1, '1') WarCd FROM CS_Invest_Summary_War WHERE InSuCd = #InSuCd# AND WarGrpCd = #WarGrpCd#
	</select>
	
	<!-- 워런트 등록/수정 완료 -->
	<insert id="cusDAO.WarMngProcEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_War (InSuCd, WarGrpCd, WarCd, WarMoney, WarSeqNum, WarSetFlag, CusCd, CusNm, RegDate, RegPerSabun, EditDate, EditPerSabun, DelFlag) VALUES
		<dynamic>
		<iterate conjunction=",">
		(#[].InSuCd#, #[].WarGrpCd#, #[].WarCd#, REPLACE(#[].WarMoney#, ',', ''), #[].WarSeqNum#, #[].WarSetFlag#, #[].CusCd#, #[].CusNm#, now(), #[].RegPerSabun#, NULL, NULL, 'N')
		</iterate>
		</dynamic>
		ON DUPLICATE KEY UPDATE WarMoney = VALUES(WarMoney), WarSeqNum = VALUES(WarSeqNum), WarSetFlag = VALUES(WarSetFlag), CusCd = VALUES(CusCd), CusNm = VALUES(CusNm), EditDate = NOW(), EditPerSabun = VALUES(RegPerSabun)
	</insert>
	
	<!-- 워런트 파일코드 받아오기 -->
	<select id="cusDAO.GetWarFileCd" parameterClass="cusVO2" resultClass="int">
		<![CDATA[SELECT IFNULL(MAX(FileSeq) + 1, '1') FileSeq FROM CS_Invest_Summary_WarFile WHERE InSuCd = #InSuCd# AND WarGrpCd = #WarGrpCd# AND WarCd = #WarCd#]]>
	</select>
	
	<!-- 워런트 파일 등록 완료 -->
	<insert id="cusDAO.WarFileAddEnd" parameterClass="java.util.List">
		INSERT INTO CS_Invest_Summary_WarFile (InSuCd, WarGrpCd, WarCd, FileSeq, FileNm, FileUpNm, FilePath, FileSize, FileOrder, RegDate, RegPerSabun, DelFlag) VALUES
		<dynamic>
		<iterate conjunction=",">
		 (#[].InSuCd#, #[].WarGrpCd#, #[].WarCd#, LPAD(#[].FileSeq#, 12, 0), #[].FileNm#, #[].FileUpNm#, #[].FilePath#, #[].FileSize#, #[].FileOrder#, now(), #[].RegPerSabun#, 'N')
		</iterate>
		</dynamic>
	</insert>
	
	<!-- 워런트 삭제 완료 -->
	<update id="cusDAO.WarMngDelEnd">
		UPDATE CS_Invest_Summary_War SET DelFlag = 'Y', DelDate = now(), DelPerSabun = #RegPerSabun# WHERE InSuCd = #InSuCd# AND WarGrpCd = #WarGrpCd#
		<isNotEmpty property="WarCd">AND WarCd = #WarCd#</isNotEmpty>
	</update>
	
	<!-- 워런트 파일 삭제 완료 -->
	<update id="cusDAO.WarFileDelEnd">
		UPDATE CS_Invest_Summary_WarFile SET DelFlag = 'Y', DelDate = NOW(), DelPerSabun = #RegPerSabun# WHERE InSuCd = #InSuCd# AND WarGrpCd = #WarGrpCd# AND WarCd = #WarCd#
		<isNotEqual property="EventFlag" compareValue="All">AND FileSeq = #FileSeq#</isNotEqual>
	</update>
																<!-- 	워런트 관리	-->
</sqlMap>